"ID",Reference,Component,Use Case,Name,Description,State,Inherent Risk,Current Risk,Projected Risk,Planned mitigation,Current Mitigation,Reason
47bfe0ae-31b8-457b-b856-739206f20429,T-SECRETS-MANAGER-01,Web App Config,Information Disclosure,An attacker exploits weak access controls to retrieve sensitive secrets,"<p><strong>General threat description:</strong> Attackers may exploit improperly configured or weak access controls to retrieve sensitive secrets stored in Secrets Manager. This can result in the exposure of API keys, database credentials, and other confidential information, leading to unauthorized access to services or systems.</p>
<p><strong>Threat agents/Attack vectors:</strong> Attackers may leverage stolen credentials, poorly configured permissions, or unpatched vulnerabilities in the access control system to gain unauthorized access to Secrets Manager.</p>
<p><strong>Impacts:</strong> Unauthorized access to secrets can result in the compromise of critical systems, data breaches, and the disruption of services.</p>
<p><strong>Example Attack Scenarios:</strong> A developer mistakenly assigns overly permissive IAM roles, allowing unauthorized users to access secrets stored in Secrets Manager.</p>
",Expose,88,88,88,0,0,
6ae80cb5-403e-403d-b96f-1928dc4b2579,T-ATTACKER-EXPLOIT-MISCONFIGURATION-AND-VULNERABLE-THIRD-PARTY,Database,Tampering,Attacker exploit misconfiguration and/or vulnerable third-party plugins,"<p><strong>General Threat Description</strong></p> <p>Vulnerabilities from misconfigurations and third-party plugins in database management systems can severely compromise database security. These vulnerabilities arise from improper system settings and the use of outdated or insecure components, exposing databases to unauthorized access and malicious attacks.</p>
<p><strong>Threat Agents/Attack Vectors</strong></p> <p>Threat agents include external attackers, malicious insiders, or even automated scripts that scan for known vulnerabilities. Common attack vectors involve exploiting weak database configurations, using default settings, or targeting outdated libraries and plugins that integrate with the database system.</p>
<p><strong>Impacts</strong></p> <p>The impacts of such vulnerabilities can be devastating, ranging from data breaches and loss of sensitive information to complete database takeover. These security lapses can also lead to a loss of service availability and erosion of trust among clients and stakeholders.</p>
<p><strong>Example Attack Scenarios</strong></p> <p>Scenario 1: An attacker discovers a database is using default login credentials due to a configuration oversight. They gain unauthorized access and steal sensitive customer data.</p> <p>Scenario 2: A database incorporates an outdated third-party logging tool which contains a known vulnerability. An attacker exploits this vulnerability to inject malicious code, resulting in data corruption and system disruption.</p>",Expose,71,71,71,0,0,
5103e5bb-9f19-4878-ba8a-a86f1220f5dd,T-WEB-APPLICATION-SERVER-SIDE-T-APP-SERVICE-11,Web Application,Information Disclosure,Attackers can abuse server-side requests,"<p><strong>General Threat Description:</strong><br>Server-side request forgery (SSRF) occurs when an attacker is able to manipulate a server to make unintended requests to internal or external services, potentially accessing sensitive data, or causing the server to perform malicious actions.</p><p><strong>Threat Agents/Attack Vectors:</strong></p><ul><li><strong>External Attackers</strong> submitting crafted requests that the server forwards to other internal services, allowing access to protected resources.</li><li><strong>Misconfigured Input Validation</strong> that allows an attacker to control the server’s outbound requests, exploiting it to interact with internal systems.</li><li><strong>Exploiting SSRF in web services</strong> that process requests and interact with databases, internal APIs, or other resources.</li></ul><p><strong>Impacts:</strong></p><ul><li>Unauthorized access to internal resources or sensitive data.</li><li>Remote code execution or data exfiltration via internal services.</li><li>Service disruption, denial-of-service (DoS) attacks, or system misconfiguration.</li></ul><p><strong>Example Attack Scenarios:</strong></p><ol><li>An attacker crafts a request that causes the server to query internal resources, exposing sensitive database information.</li><li>A malicious actor abuses an SSRF vulnerability to interact with a backend service that should only be accessible internally, potentially leading to a data breach.</li><li>An attacker uses SSRF to trigger unnecessary requests, causing internal services to overload or crash, leading to a denial of service.</li></ol>",Expose,29,29,29,0,0,
ea08e1e1-f6ce-4d9f-9f6b-811d7c160d7a,T-WEB-APPLICATION-SERVER-SIDE-T-APP-SERVICE-03,Web Application,Elevation of Privilege,Attackers can bypass permissions,"<p><strong>General Threat Description:</strong><br>Improperly implemented or enforced server-side permissions allow attackers to bypass access controls and gain unauthorized access to restricted resources.</p><p><strong>Threat Agents/Attack Vectors:</strong></p><ul><li><strong>External Attackers</strong> exploiting vulnerabilities in the application’s logic.</li><li><strong>Malicious Insiders</strong> using knowledge to bypass permission checks.</li><li><strong>Misconfigured RBAC or API endpoints</strong> that fail to enforce proper access checks.</li></ul><p><strong>Impacts:</strong></p><ul><li>Unauthorized access to sensitive data.</li><li>Potential data breaches, legal consequences, and reputation damage.</li><li>Privilege escalation and unauthorized actions, such as data modification.</li></ul><p><strong>Example Attack Scenarios:</strong></p><ol><li>An attacker exploits a flaw to access restricted user data.</li><li>A user manipulates parameters to escalate privileges and access admin functions.</li><li>Misconfigured RBAC grants unauthorized users access to sensitive resources.</li></ol>",Expose,63,63,63,0,0,
a7ff7061-3ca4-43f0-bf6a-7920c9008689,T-WEB-APPLICATION-SERVER-SIDE-T-APP-SERVICE-02,Web Application,Spoofing,Attackers can compromise sessions,"<p><strong>General Threat Description:</strong><br>Session hijacking or fixation occurs when attackers are able to gain unauthorized access to a user's session by stealing or predicting session identifiers. This can happen if session management is insecure, allowing attackers to impersonate legitimate users and access sensitive data or perform unauthorized actions.</p><p><strong>Threat Agents/Attack Vectors:</strong></p><ul><li><strong>External Attackers</strong> using techniques like session sniffing, cross-site scripting (XSS), or man-in-the-middle (MITM) attacks to steal session tokens.</li><li><strong>Malicious Insiders</strong> exploiting weak session management practices to impersonate other users.</li><li><strong>Weak Session Tokens</strong> or improper session expiration policies that leave sessions vulnerable to hijacking.</li></ul><p><strong>Impacts:</strong></p><ul><li>Unauthorized access to user accounts, sensitive data, or system resources.</li><li>Potential data breaches, financial fraud, or further exploitation of compromised accounts.</li><li>Loss of trust and reputational damage due to security lapses in session management.</li></ul><p><strong>Example Attack Scenarios:</strong></p><ol><li>An attacker intercepts an unencrypted session token in transit using a MITM attack, gaining access to the victim’s account.</li><li>A malicious script injected via XSS steals the session cookie from a user, allowing the attacker to impersonate them and access sensitive data.</li><li>An attacker guesses or reuses a predictable session ID to take over a valid user session and perform unauthorized actions.</li></ol>",Expose,56,56,56,0,0,
577b5bc0-db5a-443c-b04c-4ebb0c93da1f,T-WEB-APPLICATION-SERVER-SIDE-T-APP-SERVICE-09,Web Application,Repudiation,Attackers can evade detection without proper logging,"<p><strong>General Threat Description:</strong><br>Without proper logging and monitoring, attackers can evade detection while performing malicious actions on a system. Insufficient or misconfigured logging can prevent timely identification of suspicious activities, making it harder to respond to security incidents or identify compromised systems.</p><p><strong>Threat Agents/Attack Vectors:</strong></p><ul><li><strong>External Attackers</strong> exploiting the absence of detailed logging to perform malicious activities without leaving traces.</li><li><strong>Malicious Insiders</strong> manipulating or disabling logging to avoid detection while exfiltrating data or modifying critical systems.</li><li><strong>Misconfiguration</strong> of logging settings that leads to incomplete or missing logs, allowing attackers to act without being recorded.</li></ul><p><strong>Impacts:</strong></p><ul><li>Undetected data breaches, system compromises, or malicious actions.</li><li>Delayed or ineffective incident response due to lack of actionable logs.</li><li>Increased risk of lateral movement within the system by attackers, exploiting gaps in logging and monitoring.</li></ul><p><strong>Example Attack Scenarios:</strong></p><ol><li>An attacker compromises an internal server and performs actions (e.g., data exfiltration or privilege escalation) without triggering any alarms because logging is disabled or misconfigured.</li><li>A malicious insider disables logging mechanisms, covering their tracks while accessing and modifying sensitive data.</li><li>An attacker exploits an application vulnerability to gain access to critical systems, but the lack of proper logging prevents detection of the breach for an extended period.</li></ol>",Expose,38,38,38,0,0,
3c13c91f-d2fe-4db3-adae-2e50929945f3,T-WEB-APPLICATION-SERVER-SIDE-T-APP-SERVICE-06,Web Application,Information Disclosure,Attackers can exploit insecure configurations,"<p><strong>General Threat Description:</strong><br>Insecure configurations, such as weak security settings, improper access control, or default settings, can be exploited by attackers to gain unauthorized access or disrupt services. These vulnerabilities often arise from human error, insufficient hardening, or failure to review configurations regularly.</p><p><strong>Threat Agents/Attack Vectors:</strong></p><ul><li><strong>External Attackers</strong> exploiting misconfigured security settings or services exposed to the internet.</li><li><strong>Malicious Insiders</strong> abusing poorly configured systems or excessive permissions.</li><li><strong>Automated Scanning Tools</strong> that detect default or weak configurations and exploit them for unauthorized access.</li></ul><p><strong>Impacts:</strong></p><ul><li>Unauthorized access to sensitive resources or data.</li><li>Compromise of system integrity or potential remote code execution.</li><li>Increased attack surface, leading to easier exploitation by attackers.</li></ul><p><strong>Example Attack Scenarios:</strong></p><ol><li>An attacker exploits a service left with default credentials or misconfigured access controls, gaining unauthorized access to sensitive data.</li><li>A misconfigured firewall allows an attacker to bypass security and access a vulnerable internal application.</li><li>An insecure API configuration exposes critical functions to the public, allowing attackers to exploit them for malicious purposes.</li></ol>",Expose,63,63,63,0,0,
b1a2cb24-00ce-4caf-8fb5-7e4f69ed0035,T-WEB-APPLICATION-SERVER-SIDE-T-APP-SERVICE-10,Web Application,Information Disclosure,Attackers can exploit unsafe XML parsers,"<p><strong>General Threat Description:</strong><br>Unsafe XML parsers can be exploited when processing XML data that contains malicious payloads. Attackers can craft specially designed XML documents to trigger denial of service (DoS) attacks, or even cause arbitrary code execution or data exfiltration by exploiting vulnerabilities in the XML parser.</p><p><strong>Threat Agents/Attack Vectors:</strong></p><ul><li><strong>External Attackers</strong> submitting malicious XML input to the application in an attempt to exploit parser vulnerabilities.</li><li><strong>Malicious Insiders</strong> using knowledge of the system to craft dangerous XML payloads that bypass security controls.</li><li><strong>Unvalidated Input</strong> passed to the XML parser from untrusted sources, which can be manipulated to cause unexpected behavior.</li></ul><p><strong>Impacts:</strong></p><ul><li>Denial of service (DoS) due to resource exhaustion (e.g., XML billion laughs attack).</li><li>Unauthorized access to sensitive data or execution of arbitrary code.</li><li>System crashes, data corruption, or service disruptions from incorrectly parsed XML data.</li></ul><p><strong>Example Attack Scenarios:</strong></p><ol><li>An attacker submits a malicious XML document containing an entity expansion attack, causing the server to exhaust resources and crash.</li><li>A crafted XML payload is parsed by an unsafe XML parser, resulting in the execution of arbitrary code on the server.</li><li>An attacker exploits an unvalidated XML input field, causing the server to parse and leak sensitive information or bypass security checks.</li></ol>",Expose,88,88,88,0,0,
6f311c93-f65a-4b4a-95f3-e9ea73b72ce9,T-WEB-APPLICATION-SERVER-SIDE-T-APP-SERVICE-08,Web Application,Elevation of Privilege,Attackers can exploit vulnerable components,"<p><strong>General Threat Description:</strong><br>Vulnerable components, such as outdated libraries, frameworks, or services, can be exploited by attackers to gain unauthorized access or execute malicious actions. These vulnerabilities can allow attackers to compromise the system, steal data, or cause service disruptions.</p><p><strong>Threat Agents/Attack Vectors:</strong></p><ul><li><strong>External Attackers</strong> exploiting known vulnerabilities in third-party libraries or components.</li><li><strong>Malicious Insiders</strong> taking advantage of unpatched components to escalate privileges or exfiltrate data.</li><li><strong>Automated Tools</strong> used by attackers to scan for and exploit known vulnerabilities in components.</li></ul><p><strong>Impacts:</strong></p><ul><li>Unauthorized access to sensitive data or system controls.</li><li>Potential for remote code execution or privilege escalation.</li><li>Service downtime, data corruption, or loss.</li></ul><p><strong>Example Attack Scenarios:</strong></p><ol><li>An attacker exploits a vulnerability in a third-party library used by the application to execute remote code.</li><li>A malicious insider exploits an unpatched component to escalate privileges and access sensitive data.</li><li>An attacker uses an automated vulnerability scanner to identify and exploit outdated software components, gaining unauthorized access to the application.</li></ol>",Expose,83,83,83,0,0,
90d9ad84-2204-47af-99a9-20fc61e6ff1a,T-WEB-APPLICATION-SERVER-SIDE-T-APP-SERVICE-01,Web Application,Tampering,Attackers can inject malicious commands,"<p><strong>General Threat Description:</strong><br>Command injection occurs when attackers can inject malicious commands into an application, typically through input fields that are not properly sanitized. These commands are executed by the system, allowing attackers to gain unauthorized access, execute arbitrary code, or perform destructive actions on the system.</p><p><strong>Threat Agents/Attack Vectors:</strong></p><ul><li><strong>External Attackers</strong> injecting malicious code via input fields, query parameters, or other entry points in the application.</li><li><strong>Malicious Insiders</strong> exploiting vulnerabilities to execute commands that affect the integrity or availability of the system.</li><li><strong>Weak Input Validation</strong> or improper handling of user input, allowing attackers to craft commands that the system executes.</li></ul><p><strong>Impacts:</strong></p><ul><li>Unauthorized execution of commands that compromise system integrity, data, or access.</li><li>Potential for system crashes, data corruption, or unauthorized data retrieval.</li><li>Further exploitation of compromised systems for escalating privileges or launching attacks.</li></ul><p><strong>Example Attack Scenarios:</strong></p><ol><li>An attacker injects a command through an unsanitized input field, gaining access to the underlying database and retrieving sensitive data.</li><li>Malicious input is submitted via an HTTP request that allows the attacker to execute shell commands, altering the server’s configuration.</li><li>An attacker exploits a vulnerable API endpoint to inject commands that cause the application to crash or execute unauthorized actions, disrupting service.</li></ol>",Expose,60,60,60,0,0,
d3e7dad5-3490-4596-9972-e0611f4302f5,T-WEB-APPLICATION-SERVER-SIDE-T-APP-SERVICE-04,Web Application,Tampering,Attackers can inject scripts,"<p><strong>General Threat Description:</strong><br>Script injection, such as Cross-Site Scripting (XSS), occurs when attackers inject malicious scripts into web pages viewed by other users. These scripts are executed in the context of a user's browser, potentially leading to unauthorized access, data theft, or malicious actions on behalf of the victim.</p><p><strong>Threat Agents/Attack Vectors:</strong></p><ul><li><strong>External Attackers</strong> injecting malicious scripts into input fields, URLs, or other entry points that get executed by other users' browsers.</li><li><strong>Malicious Insiders</strong> exploiting poor input validation or output encoding to inject harmful scripts that compromise user sessions or steal sensitive data.</li><li><strong>Insecure Web Applications</strong> failing to properly sanitize or escape user inputs, leaving the application vulnerable to script injection.</li></ul><p><strong>Impacts:</strong></p><ul><li>Unauthorized access to user data, session hijacking, or credential theft through malicious scripts.</li><li>Data manipulation or destruction by executing harmful scripts on the client-side.</li><li>Loss of user trust and reputational damage if malicious scripts are used to exploit vulnerabilities.</li></ul><p><strong>Example Attack Scenarios:</strong></p><ol><li>An attacker injects a malicious script into a comment form that, when viewed by other users, steals their session cookies and sends them to the attacker.</li><li>A user is tricked into clicking a link containing a script that injects malicious code into the web page, compromising their account or triggering unauthorized actions.</li><li>An attacker exploits an input field on an admin panel to inject a script that alters data or performs unauthorized actions within the application.</li></ol>",Expose,68,68,68,0,0,
ba106cb8-571b-4d39-a155-3780aebae4e1,T-WEB-APPLICATION-SERVER-SIDE-T-APP-SERVICE-05,Web Application,Information Disclosure,Attackers can intercept or leak sensitive data,"<p><strong>General Threat Description:</strong><br>When sensitive data is transmitted or stored without proper encryption or security controls, attackers can intercept or leak this information, leading to unauthorized access, data theft, or exposure. This can occur due to weak encryption, misconfigurations, or inadequate security measures in place to protect sensitive data.</p><p><strong>Threat Agents/Attack Vectors:</strong></p><ul><li><strong>External Attackers</strong> intercepting unencrypted data during transmission using methods like man-in-the-middle (MITM) attacks.</li><li><strong>Malicious Insiders</strong> with access to improperly secured data, exploiting their privileges to leak or steal information.</li><li><strong>Weak Encryption</strong> or outdated cryptographic methods that fail to secure sensitive data during transit or at rest.</li></ul><p><strong>Impacts:</strong></p><ul><li>Unauthorized access to sensitive data, including personal, financial, or proprietary information.</li><li>Data breaches, leading to regulatory fines, reputational damage, and loss of customer trust.</li><li>Potential for identity theft, financial fraud, or further exploitation of leaked data.</li></ul><p><strong>Example Attack Scenarios:</strong></p><ol><li>An attacker intercepts sensitive information (e.g., login credentials or personal data) transmitted over an unencrypted HTTP connection.</li><li>A malicious insider accesses and leaks confidential data stored in plaintext or improperly encrypted in a database.</li><li>A man-in-the-middle (MITM) attacker exploits weak SSL/TLS configurations, intercepting and decrypting sensitive data being transmitted between a client and server.</li></ol>",Expose,88,88,88,0,0,
d3e3bca5-c794-4881-8fc1-92e76a07b468,T-WEB-APPLICATION-SERVER-SIDE-T-APP-SERVICE-12,Web Application,Tampering,Attackers can manipulate business workflows,"<p><strong>General Threat Description:</strong><br>Business workflow manipulation occurs when attackers exploit vulnerabilities in a system’s process or logic to alter or disrupt normal business operations. By tampering with workflows, attackers can cause unauthorized actions, misroute data, or manipulate processes to benefit malicious goals, leading to business disruption, financial loss, or reputational damage.</p><p><strong>Threat Agents/Attack Vectors:</strong></p><ul><li><strong>External Attackers</strong> exploiting vulnerabilities in workflow logic or APIs to alter business operations.</li><li><strong>Malicious Insiders</strong> with knowledge of internal workflows who intentionally or accidentally manipulate business processes.</li><li><strong>Weak Access Control</strong> or improperly secured workflows that allow unauthorized users to perform actions outside their role or authorization.</li></ul><p><strong>Impacts:</strong></p><ul><li>Disruption of critical business operations, leading to financial or operational losses.</li><li>Unauthorized transactions or misappropriation of resources.</li><li>Damage to system integrity, data corruption, or data leakage due to workflow manipulation.</li></ul><p><strong>Example Attack Scenarios:</strong></p><ol><li>An attacker manipulates an online order workflow to reroute shipments to an unauthorized address, causing financial losses or theft.</li><li>A malicious insider alters approval workflows to bypass legitimate checks and approve fraudulent transactions.</li><li>An attacker exploits a vulnerability in an automated approval system, causing unauthorized changes to sensitive business data or operations.</li></ol>",Expose,88,88,88,0,0,
9051f32e-c1b3-4adf-a5a8-b08ffad51f2d,T-WEB-APPLICATION-SERVER-SIDE-T-APP-SERVICE-07,Web Application,Tampering,Attackers can run malicious code via deserialization,"<p><strong>General Threat Description:</strong><br>Deserialization vulnerabilities occur when an attacker is able to modify or inject malicious code into serialized data, which is then deserialized by the application. This can lead to arbitrary code execution, privilege escalation, or other malicious actions if the deserialization process is not securely handled.</p><p><strong>Threat Agents/Attack Vectors:</strong></p><ul><li><strong>External Attackers</strong> sending specially crafted data to exploit deserialization vulnerabilities in an application.</li><li><strong>Malicious Insiders</strong> manipulating serialized data for malicious purposes.</li><li><strong>Weak Input Validation</strong> or improper handling of deserialization routines, allowing attackers to inject harmful payloads into serialized objects.</li></ul><p><strong>Impacts:</strong></p><ul><li>Unauthorized execution of malicious code on the system, leading to data breaches, system compromise, or loss of integrity.</li><li>Elevation of privileges or unauthorized access to system resources.</li><li>Disruption of application functionality or service downtime caused by the execution of malicious code.</li></ul><p><strong>Example Attack Scenarios:</strong></p><ol><li>An attacker exploits a deserialization vulnerability to inject a payload that allows them to execute arbitrary code and gain unauthorized access to a server.</li><li>A crafted serialized object is submitted via an API, causing the system to deserialize the object and execute malicious commands, compromising sensitive data.</li><li>An attacker manipulates deserialized data in a web application, leading to remote code execution or privilege escalation within the system.</li></ol>",Expose,40,40,40,0,0,
5d755f44-e304-4276-85af-d989a805ca86,T-ATTACKERS-COMPROMISE-USER-ACCOUNTS-BY-AUTHENTICATION-ATTACKS,Background Config,Spoofing,Attackers compromise user accounts by Authentication Attacks,"<p><strong>General Threat Description</strong></p>
<p>Authentication attacks are techniques used by attackers to gain unauthorized access to user accounts by bypassing or defeating the authentication mechanisms of a system. These attacks exploit vulnerabilities in the authentication process, including weak passwords, lack of multi-factor authentication, or flaws in the implementation of authentication protocols. Successful authentication attacks can lead to unauthorized access to sensitive information, systems, and services.</p>
<p><strong>Threat Agents/Attack Vectors</strong></p>
<p><strong>Threat Agents</strong>:</p>
<ul>
 <li>Cybercriminals</li>
 <li>Script Kiddies</li>
 <li>Insider Threats</li>
 <li>Hacktivists</li>
 <li>Nation-state Actors</li>
</ul>
<p><strong>Attack Vectors</strong>:</p>
<ul>
 <li><strong>Brute Force Attacks</strong>: Automated attempts to guess passwords using a trial-and-error approach.</li>
 <li><strong>Credential Stuffing</strong>: Using lists of compromised credentials from other breaches to gain access.</li>
 <li><strong>Phishing</strong>: Trick users into revealing their credentials through deceptive emails or websites.</li>
 <li><strong>Man-in-the-Middle (MitM) Attacks</strong>: Intercepting communication between a user and the authentication server to capture credentials.</li>
 <li><strong>Password Spraying</strong>: Attempting common passwords against many accounts to avoid account lockouts.</li>
 <li><strong>Session Hijacking</strong>: Stealing session tokens to impersonate a user without knowing their credentials.</li>
 <li><strong>Exploiting Weak Authentication Protocols</strong>: Taking advantage of flaws or weaknesses in authentication protocols (e.g., outdated hashing algorithms, insecure token generation).</li>
</ul>
<p><strong>Impacts</strong></p>
<ul>
 <li><strong>Unauthorized Access</strong>: Attackers gain access to sensitive systems, data, and resources.</li>
 <li><strong>Data Breach</strong>: Compromised accounts can lead to the exposure of personal information, intellectual property, and other sensitive data.</li>
 <li><strong>Financial Loss</strong>: Direct theft or fraud, along with costs associated with incident response and recovery.</li>
 <li><strong>Reputation Damage</strong>: Loss of customer trust and potential negative publicity.</li>
 <li><strong>Operational Disruption</strong>: Unauthorized actions can disrupt business operations and services.</li>
 <li><strong>Regulatory Consequences</strong>: Non-compliance with data protection regulations can result in fines and legal actions.</li>
</ul>
<p><strong>Example Attack Scenarios</strong></p>
<p><strong>Brute Force Attack on User Accounts</strong>:</p>
<ul>
 <li>An attacker uses an automated tool to attempt thousands of password combinations on a user login page. Due to the lack of account lockout mechanisms, the attacker successfully guesses the password for several accounts and gains unauthorized access to personal and sensitive information stored in those accounts.</li>
</ul>
<p><strong>Credential Stuffing Attack</strong>:</p>
<ul>
 <li>Following a major data breach, an attacker obtains a list of email addresses and passwords. Many users reuse passwords across different sites. The attacker uses a credential stuffing tool to test these credentials on a popular online service. Several accounts are compromised because users have not changed their passwords.</li>
</ul>
<p><strong>Phishing Attack to Capture Credentials</strong>:</p>
<ul>
 <li>An attacker sends a fake email that appears to be from a legitimate bank, asking users to log in to verify their accounts. The email includes a link to a spoofed login page. Unsuspecting users enter their credentials, which are then captured by the attacker. The attacker uses these credentials to log in to the users' real bank accounts and initiate fraudulent transactions.</li>
</ul>
<p><strong>Man-in-the-Middle Attack</strong>:</p>
<ul>
 <li>An attacker sets up a rogue Wi-Fi hotspot in a public area. When users connect and attempt to log in to their email accounts, the attacker intercepts the login credentials. Using the captured credentials, the attacker accesses the victims' email accounts and harvests additional personal information.</li>
</ul>
<p><strong>Password Spraying Attack on Corporate Network</strong>:</p>
<ul>
 <li>An attacker targets a corporate network by attempting a list of common passwords (e.g., ""password123"", ""welcome1"") across many different user accounts. Due to weak password policies, several accounts are compromised. The attacker uses these accounts to access internal systems and exfiltrate sensitive company data.</li>
</ul>
<p><strong>Session Hijacking Attack</strong>:</p>
<ul>
 <li>An attacker captures session tokens from an unencrypted web application. By injecting the stolen token into their own browser session, the attacker is able to impersonate the legitimate user and access their account without needing the actual credentials.</li>
</ul>
<p>In each scenario, authentication attacks enable attackers to compromise user accounts, leading to unauthorized access, data breaches, financial loss, and significant damage to the organization’s reputation. Implementing strong authentication mechanisms, including multi-factor authentication, secure password policies, and encryption, is essential to mitigating these risks.</p>",Expose,77,77,77,0,0,
eb986bbd-d4a1-42fe-af98-1a1df77b904a,T-BROWSER-T-BROWSER-02,Browser,Spoofing,Attackers conduct phishing attacks through deceptive websites,"<p><strong>General Threat Description:</strong><br>Adversaries create deceptive websites that mimic legitimate ones to trick users into revealing sensitive information.</p><p><strong>Threat Agents/Attack Vectors:</strong></p><ul><li>Cybercriminals using social engineering techniques</li><li>Fake websites or compromised legitimate sites hosting phishing pages</li></ul><p><strong>Impacts:</strong></p><ul><li>Credential theft and identity compromise</li><li>Unauthorized access to sensitive accounts or systems</li><li>Financial loss and reputational damage</li></ul><p><strong>Example Attack Scenarios:</strong></p><ul><li>A user receives an email with a link to a fake banking website that looks identical to the real one, prompting them to enter their login details.</li><li>An attacker registers a domain similar to a popular e-commerce site and lures users into entering credit card information during checkout.</li></ul>",Expose,83,83,83,0,0,
9a05e5c4-a6f1-431a-8032-27272f8d49ee,T-BROWSER-T-BROWSER-05,Browser,Tampering,Attackers distribute malware through compromised browser extensions,"<p><strong>General Threat Description:</strong><br>Adversaries exploit or compromise browser extensions to distribute malware, leveraging the trust users place in these add-ons to execute malicious code within the browser environment.</p><p><strong>Threat Agents/Attack Vectors:</strong></p><ul><li>Cybercriminals submitting malicious extensions to official stores or hijacking updates of legitimate ones.</li><li>Social engineering tactics encouraging users to install unverified or counterfeit extensions.</li></ul><p><strong>Impacts:</strong></p><ul><li>Unauthorized access to browser data and credentials</li><li>Installation of malware that may compromise the system</li><li>Potential lateral movement within a network through compromised systems</li></ul><p><strong>Example Attack Scenarios:</strong></p><ul><li>An attacker uploads a seemingly useful extension to a browser store, which, once installed, quietly collects sensitive data.</li><li>A legitimate extension is compromised during an update, injecting malware that hijacks user sessions and exfiltrates data.</li></ul>",Expose,77,77,77,0,0,
ace23f3f-f4f8-4bb2-9859-aba1faae5789,T-BROWSER-T-BROWSER-04,Browser,Elevation of Privilege,Attackers exploit browser vulnerabilities to execute malicious code,"<p><strong>General Threat Description:</strong><br>Adversaries leverage flaws in the browser's code to run unauthorized code, bypassing security measures and potentially compromising the entire system.</p><p><strong>Threat Agents/Attack Vectors:</strong></p><ul><li>Cybercriminals targeting known or zero-day browser vulnerabilities</li><li>Malicious websites and compromised ads delivering exploit code</li><li>Exploited browser extensions or plugins</li></ul><p><strong>Impacts:</strong></p><ul><li>Unauthorized system access and control</li><li>Data theft or manipulation</li><li>Escalation of privileges on the host system</li></ul><p><strong>Example Attack Scenarios:</strong></p><ul><li>An attacker uses a zero-day exploit on a popular browser via a compromised website, leading to malware installation.</li><li>A malicious browser extension exploits a known vulnerability to gain remote access and steal sensitive data.</li></ul>",Expose,81,81,81,0,0,
fa8a262f-3cbe-468a-b39c-c5cf0a37b202,T-ATTACKERS-EXPLOIT-MISCONFIGURATION-AND-SUPPLY-CHAIN-VULNERABILITIES,Background Config,Information Disclosure,Attackers exploit misconfiguration and Supply Chain Vulnerabilities,"<p><strong>General Threat Description</strong></p>
<p>Misconfiguration vulnerabilities arise when systems, applications, or networks are configured insecurely or left in an insecure default state, allowing attackers to exploit these weaknesses. Supply chain vulnerabilities involve weaknesses in third-party components or services that are integrated into an organization's IT infrastructure. Attackers exploit these vulnerabilities to gain unauthorized access, inject malicious code, or disrupt services.</p>
<p><strong>Threat Agents/Attack Vectors</strong></p>
<p><strong>Threat Agents</strong>:</p>
<ul>
 <li>Cybercriminals</li>
 <li>Nation-state Actors</li>
 <li>Hacktivists</li>
 <li>Insider Threats</li>
 <li>Script Kiddies</li>
</ul>
<p><strong>Attack Vectors</strong>:</p>
<ul>
 <li><strong>Insecure Defaults</strong>: Using default passwords, settings, or configurations that are well-known and easily exploitable.</li>
 <li><strong>Unpatched Systems</strong>: Failing to apply security patches and updates to software, hardware, or firmware.</li>
 <li><strong>Exposed Services</strong>: Unintentionally exposing internal services or APIs to the public internet.</li>
 <li><strong>Third-party Software</strong>: Compromised or malicious third-party libraries, frameworks, or components integrated into the system.</li>
 <li><strong>Hardware and Firmware</strong>: Insecure supply chain processes that lead to compromised hardware or firmware being introduced into the environment.</li>
 <li><strong>Code Injections</strong>: Injecting malicious code into software during development or updates via compromised development tools or repositories.</li>
</ul>
<p><strong>Impacts</strong></p>
<ul>
 <li><strong>Unauthorized Access</strong>: Attackers gain unauthorized access to systems and data, potentially leading to data breaches.</li>
 <li><strong>Data Breach</strong>: Exposure of sensitive information, including personal data, intellectual property, and financial records.</li>
 <li><strong>Operational Disruption</strong>: Disruption of business operations due to compromised systems or services.</li>
 <li><strong>Financial Loss</strong>: Direct theft, fraud, and costs associated with incident response, recovery, and potential regulatory fines.</li>
 <li><strong>Reputation Damage</strong>: Loss of customer trust and potential negative publicity.</li>
 <li><strong>Regulatory Consequences</strong>: Non-compliance with data protection regulations can result in fines and legal actions.</li>
</ul>
<p><strong>Example Attack Scenarios</strong></p>
<p><strong>Exploiting Misconfigured Cloud Storage</strong>:</p>
<ul>
 <li>An organization uses a cloud storage service to store sensitive customer data but fails to configure the access permissions properly, leaving the storage publicly accessible. An attacker discovers the misconfiguration and downloads sensitive data, leading to a significant data breach.</li>
</ul>
<p><strong>Unpatched Software Leading to Exploitation</strong>:</p>
<ul>
 <li>A critical vulnerability is discovered in a widely used web server software. An organization fails to apply the security patch in a timely manner. Attackers exploit this unpatched vulnerability to gain unauthorized access to the organization's internal network, where they exfiltrate sensitive data and install ransomware.</li>
</ul>
<p><strong>Compromised Third-party Library</strong>:</p>
<ul>
 <li>An organization uses a popular open-source library for logging in their application. The library is compromised by attackers who inject malicious code into a new release. When the organization updates to the latest version, the malicious code executes within their application, allowing attackers to exfiltrate sensitive information and escalate privileges.</li>
</ul>
<p><strong>Malicious Hardware Component</strong>:</p>
<ul>
 <li>An organization sources network hardware from a supplier with a compromised supply chain. The hardware contains a backdoor inserted by attackers, which is activated once deployed in the organization's network. Attackers use this backdoor to gain persistent access to the network, monitor communications, and exfiltrate sensitive data over an extended period.</li>
</ul>
<p><strong>API Exposure</strong>:</p>
<ul>
 <li>An internal API meant for communication between microservices is accidentally exposed to the public internet. Attackers discover the exposed API and use it to manipulate data and perform unauthorized actions, leading to data integrity issues and service disruptions.</li>
</ul>
<p><strong>Compromised Development Toolchain</strong>:</p>
<ul>
 <li>Developers at an organization use a compromised Integrated Development Environment (IDE) plugin that injects malicious code into the software during the build process. The compromised software is then deployed to production, providing attackers with a backdoor into the system where they can manipulate data and escalate their privileges.</li>
</ul>
<p>In each scenario, misconfigurations and supply chain vulnerabilities provide attackers with opportunities to compromise systems, exfiltrate data, and disrupt operations. Implementing robust security practices, such as regular audits, patch management, supply chain risk assessment, and secure configuration management, is essential to mitigate these risks.</p>",Expose,71,71,71,0,0,
4bc70762-8343-4198-bf12-6f11587c69f3,T-SECRETS-MANAGER-05,Web App Config,Elevation of Privilege,Attackers exploit vulnerabilities in the Secrets Manager API,"<p><strong>General threat description:</strong> Attackers may exploit vulnerabilities in the Secrets Manager API, such as insufficient input validation or authentication weaknesses, to gain unauthorized access to secrets.</p>
<p><strong>Threat agents/Attack vectors:</strong> Attackers target the API by sending crafted requests that bypass authentication mechanisms or exploit known vulnerabilities in the system to retrieve secrets.</p>
<p><strong>Impacts:</strong> Unauthorized access to the Secrets Manager API could result in the exposure of critical secrets and the compromise of systems relying on those secrets.</p>
<p><strong>Example Attack Scenarios:</strong> An attacker exploits a vulnerability in the API authentication process to bypass access controls and retrieve sensitive secrets.</p>
",Expose,77,77,77,0,0,
cd3b6221-b2ef-4dab-b40f-b2b736b54d7f,T-ATTACKERS-GAIN-ELEVATED-PRIVILEGES-THROUGH-CREDENTIAL-MISUSE,Background Config,Elevation of Privilege,Attackers gain elevated privileges through Credential Misuse,"<p><strong>General Threat Description</strong></p>
<p>Credential misuse involves the unauthorized use of valid user credentials (usernames, passwords, tokens, etc.) to gain access to systems and data. Attackers may obtain credentials through various means such as phishing, social engineering, brute force attacks, or malware. Once attackers have valid credentials, they can gain elevated privileges and perform malicious activities, such as accessing sensitive information, modifying data, or disrupting services.</p>
<p><strong>Threat Agents/Attack Vectors</strong></p>
<p><strong>Threat Agents</strong>:</p>
<ul>
 <li>Cybercriminals</li>
 <li>Insider Threats</li>
 <li>Nation-state Actors</li>
 <li>Hacktivists</li>
</ul>
<p><strong>Attack Vectors</strong>:</p>
<ul>
 <li><strong>Phishing Attacks</strong>: Attackers trick users into revealing their credentials through fake websites or emails.</li>
 <li><strong>Social Engineering</strong>: Manipulating individuals into disclosing confidential information.</li>
 <li><strong>Malware</strong>: Keyloggers or other malicious software that capture credentials.</li>
 <li><strong>Brute Force Attacks</strong>: Automated attempts to guess passwords.</li>
 <li><strong>Credential Stuffing</strong>: Using lists of compromised credentials from other breaches to gain access.</li>
 <li><strong>Man-in-the-Middle Attacks</strong>: Intercepting and capturing credentials during transmission.</li>
</ul>
<p><strong>Impacts</strong></p>
<ul>
 <li><strong>Data Breach</strong>: Unauthorized access to sensitive information, including personal data, intellectual property, and financial information.</li>
 <li><strong>Operational Disruption</strong>: Attackers can disrupt business operations by deleting or corrupting data, shutting down systems, or modifying critical configurations.</li>
 <li><strong>Financial Loss</strong>: Direct theft of funds, fraud, and costs associated with incident response and recovery.</li>
 <li><strong>Reputation Damage</strong>: Loss of customer trust and potential negative publicity.</li>
 <li><strong>Regulatory Consequences</strong>: Fines and legal actions resulting from non-compliance with data protection regulations (e.g., GDPR, CCPA).</li>
</ul>
<p><strong>Example Attack Scenarios</strong></p>
<p><strong>Phishing Attack Leading to Unauthorized Access</strong>:</p>
<ul>
 <li>An employee receives a convincing email that appears to be from the company's IT department, requesting verification of login details for a scheduled system update. The employee provides their credentials, which are then used by the attacker to access the corporate network and escalate privileges, eventually gaining access to sensitive financial records.</li>
</ul>
<p><strong>Credential Stuffing Attack</strong>:</p>
<ul>
 <li>Attackers obtain a list of compromised usernames and passwords from a previous data breach. They use automated tools to attempt login on a company's web application. Many users have reused passwords across different sites, allowing attackers to successfully log in as legitimate users. Attackers then escalate privileges within the application to access restricted data and administrative functions.</li>
</ul>
<p><strong>Insider Threat Exploitation</strong>:</p>
<ul>
 <li>A disgruntled employee with valid access credentials decides to exploit their access before leaving the company. They access sensitive customer data and download it for personal gain. Additionally, they share their credentials with an external attacker who then uses them to gain unauthorized access and escalate privileges within the company's network, causing further damage.</li>
</ul>
<p><strong>Man-in-the-Middle Attack</strong>:</p>
<ul>
 <li>During remote work, an employee connects to a company's network through an insecure public Wi-Fi. An attacker intercepts the communication, captures the employee’s credentials, and uses them to gain access to the corporate network. The attacker then escalates privileges to access confidential business plans and intellectual property.</li>
</ul>
<p>In each scenario, the misuse of credentials enables attackers to bypass standard security controls and gain elevated privileges, leading to significant harm to the organization.</p>",Expose,56,56,56,0,0,
daae96b9-2cef-431f-ac09-58b30d6e9008,T-ATTACKERS-GAIN-UNAUTHORIZED-ACCESS-OR-ELEVATED-PRIVILEGES,Database,Elevation of Privilege,Attackers gain unauthorized access or elevated privileges,"<p><strong>General Threat Description</strong></p> <p>Unauthorized access and privilege escalation represent significant security threats to database management systems. These threats stem from weaknesses in access controls, authentication mechanisms, and data protection policies, potentially leading to unauthorized actions and data exposure.</p>
<p><strong>Threat Agents/Attack Vectors</strong></p> <p>Threat agents can include external attackers, malicious insiders, or compromised user accounts. Key attack vectors involve exploiting vulnerabilities in authentication processes, inadequate access controls, and misconfigurations that allow for unauthorized data access or privilege elevation.</p>
<p><strong>Impacts</strong></p> <p>The impacts of these security breaches can be profound, ranging from data theft and leakage of sensitive information to complete system takeover. This can result in financial losses, legal repercussions, and damage to the organization's reputation and trustworthiness.</p>
<p><strong>Example Attack Scenarios</strong></p> <p>Scenario 1: An external hacker exploits a weak password policy to gain access to a database user account, from which they escalate privileges and access confidential data.</p> <p>Scenario 2: A malicious insider utilizes their knowledge of system vulnerabilities to bypass security measures and elevate their user privileges, enabling them to alter records undetected.</p>",Expose,56,56,56,0,0,
ad0d6904-0554-44bb-a88c-74a3256f81ce,T-ATTACKERS-GATHER-USEFUL-INFORMATION-FROM-INADEQUATE-ERROR-HANDLING,Database,Information Disclosure,Attackers gather useful information from inadequate error handling,"<p><strong>General Threat Description</strong></p> <p>In database management systems, inadequate error handling can inadvertently expose sensitive information, presenting substantial security risks. Detailed error messages might reveal critical system data such as the database management system itself, version, schemas, SQL queries, or even internal architectures, which can be exploited by attackers to refine their attack strategies.</p>
<p><strong>Threat Agents/Attack Vectors</strong></p> <p>Threat agents include external attackers and malicious insiders who can exploit verbose error messages to gather information. Common attack vectors involve inducing errors intentionally via malformed queries or abnormal system operations to trigger revealing error responses.</p>
<p><strong>Impacts</strong></p> <p>The primary impact of inadequate error handling is the potential leakage of sensitive information, which can lead to more severe attacks, including data breaches or system compromise. This can undermine user trust, damage organizational reputation, and result in regulatory and financial repercussions.</p>
<p><strong>Example Attack Scenarios</strong></p> <p>Scenario 1: An attacker sends intentionally incorrect SQL queries to a database interface, capturing the detailed error messages that reveal underlying database structure, which is then used to mount a structured SQL injection attack.</p> <p>Scenario 2: By exploiting verbose error outputs in a web application's database operations, an attacker learns about an outdated database version susceptible to known exploits, facilitating a targeted attack on the system.</p>",Expose,56,56,56,0,0,
8b68d053-002c-40de-bb1a-a575e6b64529,T-ATTACKERS-GATHER-USEFUL-INFORMATION-FROM-INADEQUATE-ERROR-HANDLING,Background Config,Information Disclosure,Attackers gather useful information from inadequate Error Handling,"<p><strong>General Threat Description</strong></p>
<p>Inadequate error handling occurs when an application or system fails to properly manage errors and exceptions. This can result in the exposure of detailed error messages, stack traces, or system information to end-users, including potential attackers. Such information can be exploited to identify vulnerabilities, understand system architecture, or plan more sophisticated attacks.</p>
<p><strong>Threat Agents/Attack Vectors</strong></p>
<p><strong>Threat Agents</strong>:</p>
<ul>
 <li>Cybercriminals</li>
 <li>Insider Threats</li>
 <li>Script Kiddies</li>
 <li>Penetration Testers</li>
</ul>
<p><strong>Attack Vectors</strong>:</p>
<ul>
 <li><strong>Web Applications</strong>: Exploiting poorly handled errors in web applications to reveal database structure, software versions, and other sensitive details.</li>
 <li><strong>APIs</strong>: Interacting with APIs that return verbose error messages disclosing internal logic or configuration details.</li>
 <li><strong>User Interfaces</strong>: Triggering errors through user interface inputs (e.g., forms, search boxes) to expose underlying system information.</li>
 <li><strong>Network Services</strong>: Sending malformed requests to network services to cause errors that reveal network configurations or other sensitive details.</li>
</ul>
<p><strong>Impacts</strong></p>
<ul>
 <li><strong>Information Disclosure</strong>: Exposure of sensitive information such as software versions, database structures, internal IP addresses, or configuration details that can be used for further exploitation.</li>
 <li><strong>Increased Attack Surface</strong>: Detailed error messages can guide attackers to specific vulnerabilities or weaknesses in the system.</li>
 <li><strong>Preparation for Future Attacks</strong>: Attackers can use the gathered information to craft more effective and targeted attacks, such as SQL injection, cross-site scripting (XSS), or buffer overflow attacks.</li>
 <li><strong>Regulatory Non-compliance</strong>: Failure to protect sensitive information may lead to non-compliance with data protection regulations and result in fines or other legal consequences.</li>
</ul>
<p><strong>Example Attack Scenarios</strong></p>
<p><strong>Web Application Error Disclosure</strong>:</p>
<ul>
 <li>An attacker inputs a malformed SQL query into a login form. The web application responds with a detailed error message revealing the database type, version, and structure. With this information, the attacker refines their attack, successfully executing a SQL injection to extract user data.</li>
</ul>
<p><strong>API Interaction Revealing Internal Logic</strong>:</p>
<ul>
 <li>An attacker interacts with a public API, sending requests with missing or incorrect parameters. The API returns detailed error messages indicating the exact nature of the required parameters and the underlying logic of the application. The attacker uses this information to construct valid requests that bypass security controls and access restricted data.</li>
</ul>
<p><strong>Network Service Misconfiguration</strong>:</p>
<ul>
 <li>During a penetration test, a tester sends unexpected input to a network service, causing it to crash. The error message displayed includes the software version and configuration details of the service. The tester reports this vulnerability, but if it were a malicious actor, they could use this information to exploit known vulnerabilities in that specific software version.</li>
</ul>
<p><strong>User Interface Input Handling</strong>:</p>
<ul>
 <li>An attacker enters excessively long input into a search box, causing the application to throw an unhandled exception. The resulting error message includes a stack trace and details about the programming language and framework used. The attacker leverages this information to identify known vulnerabilities in the specific framework version and launches a successful attack to compromise the system.</li>
</ul>
<p>In each scenario, inadequate error handling exposes critical information that aids attackers in understanding and exploiting the system, leading to potential data breaches, system disruptions, and other malicious activities.</p>",Expose,56,56,56,0,0,
ff426f7e-3ebc-4afa-98e7-b1162e79d713,T-INJECTION-ATTACKS,Database,Tampering,"Attackers inject malicious content, e.g., SQLi","<p><strong>General Threat Description</strong></p> <p>Injection attacks, such as SQL Injection (SQLi), pose significant risks to database managers. These attacks exploit the improper handling of user inputs, allowing attackers to manipulate database queries and execute unauthorized commands. The scope of these threats extends to SQL, LDAP, XPath, and NoSQL injections, each capable of compromising database integrity and confidentiality.</p>
<p><strong>Threat Agents/Attack Vectors</strong></p> <p>Threat agents typically include cybercriminals, malicious insiders, or external attackers exploiting existing vulnerabilities. Attack vectors involve the submission of crafted inputs that are processed incorrectly by applications, leading to malicious database operations. Commonly, this occurs through web forms, API endpoints, or any interface that accepts user input directly linked to database operations.</p>
<p><strong>Impacts</strong></p> <p>The impacts of injection attacks are severe and multifaceted, including unauthorized access to sensitive data, data theft, loss of data integrity, and potential system downtime. In worst cases, attackers gain administrative rights, leading to complete system compromise and the ability to execute arbitrary code on the database server.</p>
<p><strong>Example Attack Scenarios</strong></p> <p>Scenario 1: An attacker inputs a string into a login form that manipulates the SQL query to bypass authentication checks, gaining unauthorized access to the database and database manager system.</p> <p>Scenario 2: Through an exposed API, an attacker uses SQL injection to alter records, corrupting data integrity and causing operational disruptions.</p>",Expose,56,56,56,0,0,
4fae67ba-d471-4169-879e-ee812a09d76b,T-BROWSER-T-BROWSER-01,Browser,Information Disclosure,Attackers inject malicious scripts via cross-site scripting (XSS),"<p><strong>General Threat Description:</strong><br>Adversaries exploit vulnerabilities in web applications and browsers to inject malicious scripts, which then execute in users’ browsers.</p><p><strong>Threat Agents/Attack Vectors:</strong></p><ul><li>Cybercriminals exploiting unvalidated input fields</li><li>Compromised or malicious websites hosting injected scripts</li></ul><p><strong>Impacts:</strong></p><ul><li>Theft of session data and credentials</li><li>Unauthorized access to sensitive user information</li><li>Redirection to phishing or malicious sites</li></ul><p><strong>Example Attack Scenarios:</strong></p><ul><li>An attacker injects a script into a forum post that steals users' cookies when viewed.</li><li>A vulnerable web form accepts unfiltered input, allowing an attacker to embed a script that executes upon page load.</li></ul>",Expose,71,71,71,0,0,
630259cb-fe35-49cf-b1e1-e82cfd07f581,T-BROWSER-T-BROWSER-03,Browser,Spoofing,Attackers intercept browser communications through man-in-the-middle (MitM) attacks,"<p><strong>General Threat Description:</strong><br>Adversaries intercept and potentially alter communication between browsers and websites by exploiting insecure or misconfigured network protocols.</p><p><strong>Threat Agents/Attack Vectors:</strong></p><ul><li>Cybercriminals targeting unsecured Wi-Fi networks or misconfigured network devices</li><li>Attackers exploiting weak TLS/SSL configurations</li><li>Use of rogue access points or compromised routers</li></ul><p><strong>Impacts:</strong></p><ul><li>Interception of sensitive data such as credentials and personal information</li><li>Data manipulation or session hijacking</li><li>Unauthorized access to private communications</li></ul><p><strong>Example Attack Scenarios:</strong></p><ul><li>An attacker sets up a rogue Wi-Fi hotspot to capture unencrypted browser traffic from unsuspecting users.</li><li>Exploiting a vulnerability in TLS certificate validation, an attacker intercepts and modifies data transmitted between a user and a secure website.</li></ul>",Expose,81,81,81,0,0,
2d36a9fc-95cd-42e8-bb8d-72aad3f354b9,T-ATTACKERS-PERFORM-DENIAL-OF-SERVICE-THROUGH-AUTHENTICATION-SYSTEMS,Background Config,Denial of Service,Attackers perform Denial of Service through Authentication Systems,"<p><strong>General Threat Description</strong></p>
<p>Denial of Service (DoS) attacks targeting authentication systems aim to overwhelm and disrupt the normal operation of these systems, rendering them unavailable to legitimate users. Attackers typically exploit vulnerabilities in the authentication mechanism or leverage brute force techniques to exhaust system resources, causing a degradation or complete loss of service. This type of attack can lead to significant downtime and disrupt access to critical services for all users.</p>
<p><strong>Threat Agents/Attack Vectors</strong></p>
<ul>
 <li><strong>Threat Agents</strong>: Malicious actors, such as hackers, script kiddies, and disgruntled employees, are the primary threat agents behind DoS attacks on authentication systems. They may act individually or as part of a coordinated group.</li>
 <li><strong>Attack Vectors</strong>: 
  <ul>
   <li><strong>Brute Force Attacks</strong>: Attackers attempt to guess user credentials by systematically trying multiple username and password combinations, overwhelming the authentication system with a high volume of requests.</li>
   <li><strong>Credential Stuffing</strong>: Using previously breached credentials from other sites, attackers attempt to log in, causing an overload on the authentication backend.</li>
   <li><strong>Distributed Denial of Service (DDoS)</strong>: Attackers utilize a network of compromised machines (botnets) to flood the authentication servers with an enormous amount of traffic, exhausting resources.</li>
   <li><strong>Exploiting Authentication Vulnerabilities</strong>: Attackers exploit weaknesses in the authentication logic or infrastructure, such as inadequate session management, to repeatedly request authentication operations.</li>
  </ul></li>
</ul>
<p><strong>Impacts</strong></p>
<ul>
 <li><strong>Service Downtime</strong>: Legitimate users are unable to access the system, leading to operational disruptions and potential loss of business.</li>
 <li><strong>Resource Exhaustion</strong>: Authentication systems' resources (CPU, memory, bandwidth) are exhausted, affecting other system components and leading to degraded performance.</li>
 <li><strong>Reputational Damage</strong>: Prolonged outages can damage the organization's reputation, eroding user trust and confidence.</li>
 <li><strong>Financial Loss</strong>: Downtime can result in financial losses due to missed transactions, service level agreement (SLA) penalties, and the costs associated with mitigating the attack and restoring services.</li>
 <li><strong>User Frustration</strong>: Legitimate users experience frustration and dissatisfaction due to inability to access the services, potentially leading to user churn.</li>
</ul>
<p><strong>Example Attack Scenarios</strong></p>
<p><strong>Brute Force Attack</strong>:</p>
<ul>
 <li>An attacker uses automated scripts to repeatedly attempt login requests with a large set of username and password combinations. The high volume of requests causes the authentication server to slow down significantly and eventually become unresponsive to legitimate users.</li>
</ul>
<p><strong>Credential Stuffing Attack</strong>:</p>
<ul>
 <li>Attackers leverage a database of previously breached username and password pairs to perform mass login attempts on the target authentication system. The authentication server, overwhelmed by the volume of login attempts, becomes unresponsive, denying access to legitimate users.</li>
</ul>
<p><strong>DDoS Attack</strong>:</p>
<ul>
 <li>A hacker group orchestrates a DDoS attack using a botnet to send a flood of authentication requests to the server. The server resources are quickly consumed by handling these illegitimate requests, leading to service outages and preventing legitimate users from logging in.</li>
</ul>
<p><strong>Exploitation of Authentication Vulnerability</strong>:</p>
<ul>
 <li>An attacker discovers a flaw in the authentication system that allows them to bypass normal login rate limiting. By exploiting this flaw, they can continuously request authentication operations, overwhelming the server and causing a denial of service.</li>
</ul>
<p>By understanding the nature of DoS attacks on authentication systems, implementing robust security measures such as rate limiting, CAPTCHA, multi-factor authentication, and monitoring can help mitigate these threats and protect the integrity and availability of the authentication systems.</p>",Expose,60,60,60,0,0,
73e3606c-4574-43a9-9de2-15b84b7b636d,T-ATTACKERS-PERFORM-INJECTION-ATTACKS-AND-UNATHORIZED-DATA-MODIFICATION,Background Config,Tampering,Attackers perform Injection Attacks and Unathorized Data Modification,"<p><strong>General Threat Description</strong></p>
<p>Injection attacks occur when attackers send maliciously crafted input to an application, which is then processed by an interpreter as part of a command or query. Common types of injection attacks include SQL injection, command injection, and cross-site scripting (XSS). These attacks exploit vulnerabilities in the application's input validation and handling processes, allowing attackers to execute arbitrary commands, access sensitive data, and modify data in unauthorized ways.</p>
<p><strong>Threat Agents/Attack Vectors</strong></p>
<p><strong>Threat Agents</strong>:</p>
<ul>
 <li>Cybercriminals</li>
 <li>Insider Threats</li>
 <li>Script Kiddies</li>
 <li>Hacktivists</li>
 <li>Nation-state Actors</li>
</ul>
<p><strong>Attack Vectors</strong>:</p>
<ul>
 <li><strong>SQL Injection (SQLi)</strong>: Malicious SQL queries are injected into an application’s input fields to manipulate or access the database.</li>
 <li><strong>Command Injection</strong>: Injecting arbitrary commands into a system shell or operating system command interpreter.</li>
 <li><strong>Cross-Site Scripting (XSS)</strong>: Injecting malicious scripts into web pages viewed by other users.</li>
 <li><strong>LDAP Injection</strong>: Manipulating LDAP queries to access or modify directory information.</li>
 <li><strong>XML Injection</strong>: Injecting malicious XML content to alter the behavior of an application.</li>
</ul>
<p><strong>Impacts</strong></p>
<ul>
 <li><strong>Unauthorized Data Access</strong>: Attackers can retrieve sensitive data from databases or other data stores.</li>
 <li><strong>Data Breach</strong>: Exposure of personal information, financial records, and other sensitive data.</li>
 <li><strong>Data Integrity Compromise</strong>: Unauthorized modification or deletion of data, leading to data corruption and loss of data integrity.</li>
 <li><strong>Operational Disruption</strong>: Execution of unauthorized commands can disrupt services and operations.</li>
 <li><strong>Financial Loss</strong>: Direct theft, fraud, and costs associated with incident response and remediation.</li>
 <li><strong>Reputation Damage</strong>: Loss of customer trust and potential negative publicity.</li>
 <li><strong>Regulatory Consequences</strong>: Non-compliance with data protection regulations can result in fines and legal actions.</li>
</ul>
<p><strong>Example Attack Scenarios</strong></p>
<p><strong>SQL Injection for Unauthorized Data Access</strong>:</p>
<ul>
 <li>An attacker identifies a vulnerable login form on a website that directly includes user input in SQL queries without proper validation. The attacker injects a malicious SQL statement (<strong>' OR '1'='1' --</strong>) into the username field, bypassing authentication and gaining administrative access to the application. The attacker then retrieves sensitive user data from the database.</li>
</ul>
<p><strong>Command Injection Leading to System Compromise</strong>:</p>
<ul>
 <li>An application allows users to input their name, which is then used in a system shell command to generate a greeting message. The input is not sanitized, allowing an attacker to input a command injection payload (<strong>; rm -rf /</strong>) to execute arbitrary commands on the server. This results in the deletion of critical system files and disruption of services.</li>
</ul>
<p><strong>Cross-Site Scripting (XSS) for Unauthorized Actions</strong>:</p>
<ul>
 <li>An attacker injects a malicious script into a forum post on a website that does not properly sanitize user input. When other users view the post, their browsers execute the script, which captures their session cookies and sends them to the attacker. The attacker then uses these session cookies to hijack users' accounts and perform unauthorized actions.</li>
</ul>
<p><strong>LDAP Injection for Unauthorized Directory Access</strong>:</p>
<ul>
 <li>An application uses user input to construct LDAP queries for user authentication. The input is not properly sanitized, allowing an attacker to inject malicious LDAP statements (<strong>*)(|(uid=*))</strong>). This modifies the query to return all entries in the directory, giving the attacker unauthorized access to sensitive directory information.</li>
</ul>
<p><strong>XML Injection for Data Modification</strong>:</p>
<ul>
 <li>An application processes user-submitted XML data without proper validation. An attacker crafts a malicious XML input that modifies the structure and data of the original document. This results in unauthorized changes to the application's configuration and data, potentially leading to system misconfiguration and data corruption.</li>
</ul>
<p>In each scenario, injection attacks exploit vulnerabilities in input handling and validation processes, allowing attackers to gain unauthorized access, modify data, and execute arbitrary commands. Implementing robust input validation, using prepared statements and parameterized queries, and sanitizing user input are essential to mitigating the risks associated with injection attacks.</p>",Expose,68,68,68,0,0,
f6110c54-81ca-469b-9d19-5e8f9da11d12,T-ATTACKERS-TAKE-ADVANTAGE-OF-INSECURE-COMMUNICATION-CHANNELS,Database,Information Disclosure,Attackers take advantage of insecure communication channels or inadequate data encryption practices,"<p><strong>General Threat Description</strong></p> <p>Securing communication channels is critical for maintaining the confidentiality and integrity of data exchanged between database servers and their clients. Insecure communication channels expose data to risks of interception and manipulation during transit. Inadequate data encryption exacerbates this risk, making sensitive information accessible and alterable by unauthorized parties.</p>
<p><strong>Threat Agents/Attack Vectors</strong></p> <p>The primary threat agents include cybercriminals, competing businesses, or rogue insiders with access to network traffic. Common attack vectors are man-in-the-middle (MitM) attacks, where attackers intercept or alter data as it travels across the network, particularly if the data is unencrypted or poorly encrypted.</p>
<p><strong>Impacts</strong></p> <p>The consequences of insecure communication can be severe, ranging from data breaches involving loss of sensitive or proprietary information to the corruption of data integrity, which can undermine user trust and cause significant financial and reputational damage to organizations.</p>
<p><strong>Example Attack Scenarios</strong></p> <p>Scenario 1: An attacker intercepts unencrypted database queries from a mobile app to its backend server, gaining access to user credentials and personal information.</p> <p>Scenario 2: Through a MitM attack, a cybercriminal modifies transaction data in transit, resulting in erroneous data being stored in the database, leading to financial discrepancies and operational issues.</p>",Expose,71,71,71,0,0,
05fd2829-ab9b-4a89-86a9-5aff5991e82e,T-ATTACKERS-TAKE-ADVANTAGE-OF-INSUFFICIENT-DATA-PROTECTION-AND-ENCRYPTION-FOR-USER-CREDENTIALS,Background Config,Information Disclosure,Attackers take advantage of Insufficient Data Protection and Encryption for User Credentials,"<p><strong>General Threat Description</strong></p>
<p>Insufficient data protection and encryption for user credentials occur when credentials (e.g., usernames, passwords, tokens) are stored or transmitted without adequate encryption or protection mechanisms. This vulnerability allows attackers to intercept, steal, or misuse these credentials, potentially gaining unauthorized access to systems and data. Ensuring robust encryption and data protection methods are crucial to safeguarding user credentials from being compromised.</p>
<p><strong>Threat Agents/Attack Vectors</strong></p>
<p><strong>Threat Agents</strong>:</p>
<ul>
 <li>Cybercriminals</li>
 <li>Insider Threats</li>
 <li>Hacktivists</li>
 <li>Nation-state Actors</li>
</ul>
<p><strong>Attack Vectors</strong>:</p>
<ul>
 <li><strong>Plaintext Storage</strong>: Storing credentials in plaintext in databases, configuration files, or logs.</li>
 <li><strong>Unencrypted Transmission</strong>: Transmitting credentials over unencrypted channels (e.g., HTTP instead of HTTPS).</li>
 <li><strong>Weak Encryption</strong>: Using outdated or easily breakable encryption algorithms.</li>
 <li><strong>Insecure Third-party Services</strong>: Relying on third-party services that do not implement proper encryption practices.</li>
</ul>
<p><strong>Impacts</strong></p>
<ul>
 <li><strong>Data Breach</strong>: Unauthorized access to sensitive information and systems.</li>
 <li><strong>Identity Theft</strong>: Compromised user credentials can lead to identity theft and unauthorized financial transactions.</li>
 <li><strong>Operational Disruption</strong>: Attackers can disrupt operations by accessing and manipulating critical systems.</li>
 <li><strong>Financial Loss</strong>: Direct theft of funds, costs associated with incident response, legal fees, and regulatory fines.</li>
 <li><strong>Reputation Damage</strong>: Loss of customer trust and potential negative publicity.</li>
 <li><strong>Regulatory Consequences</strong>: Non-compliance with data protection regulations (e.g., GDPR, CCPA) can result in substantial fines.</li>
</ul>
<p><strong>Example Attack Scenarios</strong></p>
<p><strong>Plaintext Password Storage</strong>:</p>
<ul>
 <li>An attacker gains access to a company's database through a SQL injection vulnerability. The database stores user passwords in plaintext. The attacker retrieves these passwords and uses them to log in to user accounts, accessing sensitive personal and financial information.</li>
</ul>
<p><strong>Unencrypted Credential Transmission</strong>:</p>
<ul>
 <li>An attacker intercepts network traffic on a public Wi-Fi network. They capture unencrypted HTTP traffic between a user and a web application, including login credentials. The attacker uses these credentials to access the user's account and perform unauthorized actions.</li>
</ul>
<p><strong>Weak Encryption Algorithms</strong>:</p>
<ul>
 <li>A company uses outdated MD5 hashing for storing passwords. An attacker obtains the hashed passwords through a data breach and uses a precomputed hash table (rainbow table) to quickly reverse the hashes and obtain the plaintext passwords. The attacker then leverages these credentials to access user accounts and sensitive data.</li>
</ul>
<p><strong>Insecure Third-party Service Integration</strong>:</p>
<ul>
 <li>A company integrates a third-party authentication service for user logins. The third-party service does not properly encrypt credentials during transmission. An attacker performs a man-in-the-middle (MitM) attack to intercept the credentials during the authentication process. Using these credentials, the attacker gains unauthorized access to the company's internal systems.</li>
</ul>
<p><strong>Credential Theft via Logs</strong>:</p>
<ul>
 <li>An application logs user login attempts, including usernames and passwords, in plaintext. An attacker with access to the log files extracts these credentials and uses them to compromise multiple user accounts, leading to data breaches and unauthorized transactions.</li>
</ul>
<p>In each scenario, the lack of sufficient data protection and encryption for user credentials allows attackers to easily intercept, steal, or misuse these credentials, leading to unauthorized access, data breaches, and significant harm to the organization and its users.</p>",Expose,56,56,56,0,0,
cb33420d-232c-49c1-a005-a4aca70ea173,T-SECRETS-MANAGER-04,Web App Config,Information Disclosure,Compromised systems reuse leaked or old secrets,"<p><strong>General threat description:</strong> Attackers who gain access to secrets from compromised systems may reuse them if the secrets are not rotated or invalidated in a timely manner. This leads to prolonged unauthorized access to services and systems.</p>
<p><strong>Threat agents/Attack vectors:</strong> Malicious actors can extract old or reused secrets from logs, backups, or compromised services, continuing to gain access even after initial compromise.</p>
<p><strong>Impacts:</strong> Unauthorized access to critical systems or data may continue over time, increasing the scope of a security incident and prolonging the response window.</p>
<p><strong>Example Attack Scenarios:</strong> After breaching a system, an attacker uses previously valid API keys from logs to access cloud services even after the breach is detected.</p>
",Expose,71,71,71,0,0,
1580993d-d30c-4284-ac23-6f1d47afb4f9,T-ALIBABA-MESSAGE-QUEUE-02,Message Queue,Information Disclosure,Data leakage due to unencrypted messages in transit,"<p><strong>General threat description:</strong>&nbsp;</p><p>If messages transmitted through Alibaba Message Queue are not encrypted, they may be vulnerable to interception, leading to unauthorized access to sensitive data. This can compromise the security of communication between services and expose critical information to attackers.&nbsp;</p><p><strong>Threat agents/Attack vectors:</strong>&nbsp;</p><p>Attackers performing man-in-the-middle (MITM) attacks, compromised network infrastructure, or vulnerabilities in the message transmission protocols.&nbsp;</p><p><strong>Impacts:</strong>&nbsp;</p><p>Unauthorized disclosure of sensitive data, data breaches, legal and regulatory consequences, and damage to organizational reputation.&nbsp;</p><p><strong>Example Attack Scenarios:</strong>&nbsp;</p><p>An attacker intercepts unencrypted messages being transmitted between services through the message queue, leading to the exposure of sensitive information such as user data or financial transactions.</p>",Expose,81,81,81,0,0,
6db9c518-0108-4611-850f-b292ad548d76,T-BACKGROUND-TASK-T-BGTASK-03,Background Worker,Denial of Service,Denial of Service (DoS) attacks,"<strong>General threat description</strong><br> Denial of Service (DoS) attacks can overwhelm the background task processing queue, leading to service disruption and unavailability. <br><strong>Threat agents/Attack vectors</strong><br> Malicious actors intentionally flood the background task processing queue with an excessive number of tasks or requests, exploiting insufficient rate-limiting or validation mechanisms. <br><strong>Impacts</strong><br> Legitimate background tasks may be delayed or dropped entirely, resulting in degraded system performance, service downtime, and potential data loss or corruption. <br><strong>Example Attack Scenarios</strong><br> An attacker automates the submission of millions of tasks to the background processing system, effectively rendering it unable to process legitimate requests. This could cause critical applications to malfunction as they await the completion of necessary background tasks that are now stuck in a massive queue.",Expose,63,63,63,0,0,
8fe708e6-f6e8-4aa2-9332-a2fdd6d1adce,T-ALIBABA-MESSAGE-QUEUE-03,Message Queue,Denial of Service,Denial of Service (DoS) through message queue saturation,"<p><strong>General threat description:</strong>&nbsp;</p><p>Attackers may attempt to overwhelm Alibaba Message Queue by sending a high volume of messages or conducting resource-intensive operations, leading to a denial of service. This can disrupt the communication between services, making them unavailable or causing significant delays in message processing.&nbsp;</p><p><strong>Threat agents/Attack vectors:</strong>&nbsp;</p><p>External attackers, compromised applications generating excessive messages, or insiders misusing message queue resources.&nbsp;</p><p><strong>Impacts:</strong>&nbsp;</p><p>Service unavailability, degraded performance of the message queue, delays in message delivery, and disruption of business operations.&nbsp;</p><p><strong>Example Attack Scenarios:</strong>&nbsp;</p><p>An attacker floods a message queue with a large number of messages, overwhelming the queue's processing capacity and causing legitimate messages to be delayed or dropped.</p>",Expose,81,81,81,0,0,
7a6f02bc-3899-4c01-80f8-f231dbca7fe2,T-DENIAL-OF-SERVICE-VIA-RESOURCE-EXHAUSTION,Database,Denial of Service,Denial of service via resource exhaustion,"<p><strong>General Threat Description</strong></p> <p>Denial of Service (DoS) attacks via resource exhaustion represent a severe threat to database systems, aiming to incapacitate the database by overwhelming its resources. These attacks may target network bandwidth, CPU cycles, or disk space, with the goal of degrading performance to a point where the database becomes non-functional and unavailable to legitimate users.</p>
<p><strong>Threat Agents/Attack Vectors</strong></p> <p>The primary threat agents are external attackers who may employ automated tools to launch these attacks. Common vectors include volumetric attacks to saturate network capacity, CPU-intensive queries that tie up processing power, and disk space consumption tactics that leave no room for legitimate operations.</p>
<p><strong>Impacts</strong></p> <p>The impacts of DoS attacks through resource exhaustion are significant, ranging from temporary disruptions of database services to prolonged downtimes. Such incidents can lead to operational paralysis, financial losses, and severe damage to an organization’s reputation.</p>
<p><strong>Example Attack Scenarios</strong></p> <p>Scenario 1: An attacker uses a botnet to send rapid, complex queries that consume all available CPU resources, causing legitimate queries to time out and fail.</p> <p>Scenario 2: Through a scripted attack, excessive amounts of junk data are written to the database, quickly filling up disk space and causing legitimate data operations to be rejected.</p>",Expose,56,56,56,0,0,
8072a5e2-0604-4573-afe5-adcf97568df1,T-BACKGROUND-TASK-T-BGTASK-04,Background Worker,Tampering,Execution of malicious or unauthorized code,"<strong>General threat description</strong><br> Tasks within the system might execute malicious or unauthorized code if they aren't properly validated. This could result in significant security breaches or potential data loss. <br><strong>Threat agents/Attack vectors</strong><br> Attackers could inject malicious code into the task list or manipulate existing tasks to run unauthorized commands due to improper validation. <br><strong>Impacts</strong><br> Unauthorized code execution could lead to breaches in confidentiality, integrity, and availability of data, potentially resulting in data loss or exposure of sensitive information. <br><strong>Example Attack Scenarios</strong><br> 1. An attacker gains access to the task scheduling system and injects a script to extract confidential data. <br> 2. A compromised user account is used to alter scheduled tasks, triggering them to execute malware. <br> 3. An unverified task is added, which runs a denial-of-service attack on the system.",Expose,88,88,88,0,0,
59529d90-77e3-4e35-9b98-12b40637c53e,T-ALIBABA-MESSAGE-QUEUE-05,Message Queue,Tampering,Insider threat leading to unauthorized message manipulation or deletion,"<p><strong>General threat description:</strong>&nbsp;</p><p>Insiders with access to Alibaba Message Queue may misuse their privileges to manipulate or delete messages, leading to data integrity issues, financial losses, or operational disruptions. This can compromise the trustworthiness of the message queue and the services that depend on it.&nbsp;</p><p><strong>Threat agents/Attack vectors:</strong>&nbsp;</p><p>Disgruntled employees, contractors with access to message queues, or third-party service providers with privileged access.&nbsp;</p><p><strong>Impacts:</strong>&nbsp;</p><p>Unauthorized modification or deletion of messages, data loss, disruption of critical services, and potential compliance violations.&nbsp;</p><p><strong>Example Attack Scenarios:</strong>&nbsp;</p><p>A system administrator with access to the message queue intentionally deletes critical messages, causing significant disruption to the services that rely on those messages for processing transactions.</p>",Expose,81,81,81,0,0,
da73cd83-f425-48c4-a1f4-164c1b98db74,T-LACK-OF-EVIDENCES-OF-MISUSE-DUE-TO-INSUFFICIENT-AUDITING-AND-LOGGING-AND-POOR-LOG-PROTECTION,Database,Repudiation,Lack of evidences of misuse due to insufficient auditing and logging or poor log protection,"<p><strong>General Threat Description</strong></p> <p>Ineffective or absent auditing and logging practices in database management can severely impede the ability to maintain data integrity, security, and accountability. These shortcomings prevent effective tracking and analysis of user actions and database transactions, crucial for detecting unauthorized access and ensuring compliance with security policies.</p>
<p><strong>Threat Agents/Attack Vectors</strong></p> <p>Threat agents include both internal users with legitimate access and external attackers who may exploit weak monitoring systems. Typical attack vectors involve actions that go undetected due to the lack of comprehensive logging or the inability to properly audit system activities, thereby allowing malicious operations to persist undetected.</p>
<p><strong>Impacts</strong></p> <p>The lack of sufficient logging and auditing can lead to unauthorized activities going unnoticed, enabling ongoing data breaches, undetected compliance violations, and untraceable insider threats. This not only affects the organization's operational security but also risks legal and regulatory non-compliance, potentially resulting in significant penalties.</p>
<p><strong>Example Attack Scenarios</strong></p> <p>Scenario 1: An insider exploits their access to manipulate financial records, but due to insufficient logging, the actions remain undetected, causing long-term financial discrepancies.</p> <p>Scenario 2: An external attacker gains access through a security vulnerability and installs malware. The lack of effective monitoring allows the malware to operate undetected, exfiltrating sensitive data over several months.</p>",Expose,40,40,40,0,0,
f9480d27-4e6a-4ebb-90f0-bade58b7f150,T-BACKGROUND-TASK-T-BGTASK-01,Background Worker,Tampering,Message interception and manipulation,"<strong>General threat description</strong><br> An attacker could intercept and manipulate messages between background tasks and other services, potentially leading to severe data breaches and unauthorized actions.<br><strong>Threat agents/Attack vectors</strong><br> Attackers who gain access to the communication channels between background tasks and other services can intercept, alter, or reroute messages.<br><strong>Impacts</strong><br> Possible data breaches, unauthorized actions, and compromised integrity of processes and services.<br><strong>Example Attack Scenarios</strong><br> An attacker successfully intercepts a message containing sensitive user data between a background task and a database, manipulates the data, and then reroutes the message to its original destination without detection.",Expose,81,81,81,0,0,
0ec4b65e-599c-4e56-866a-b8fd2656e3fd,T-ALIBABA-MESSAGE-QUEUE-04,Message Queue,Tampering,Message tampering during transit or storage,"<p><strong>General threat description:</strong>&nbsp;</p><p>If messages transmitted through or stored in Alibaba Message Queue are not adequately protected, they may be tampered with, leading to the introduction of false or misleading information into the system. This can disrupt the normal operation of services and compromise the integrity of the data being processed.&nbsp;</p><p><strong>Threat agents/Attack vectors:</strong>&nbsp;</p><p>Attackers intercepting and modifying messages in transit, compromised message queue infrastructure, or vulnerabilities in the message storage or transmission processes.&nbsp;</p><p><strong>Impacts:</strong>&nbsp;</p><p>Introduction of false data, disruption of business operations, loss of data integrity, and potential compliance violations.&nbsp;</p><p><strong>Example Attack Scenarios:</strong>&nbsp;</p><p>An attacker gains access to the message queue and modifies the content of messages before they are delivered to the receiving service, leading to incorrect processing of transactions.</p>",Expose,81,81,81,0,0,
a9d729f1-2ab2-40ac-8ad0-f1502b203a2c,T-SECRETS-MANAGER-03,Web App Config,Information Disclosure,Overly permissive secrets sharing between services leads to data leakage,"<p><strong>General threat description:</strong> Secrets may be accidentally shared between services or users that do not require them. Overly permissive configurations or default settings in Secrets Manager can lead to unintentional data leakage to other services or environments.</p>
<p><strong>Threat agents/Attack vectors:</strong> Developers or administrators may configure secrets sharing too broadly, or attackers might exploit these permissions to gain access to sensitive data across services.</p>
<p><strong>Impacts:</strong> Sensitive data could be leaked or exposed to unauthorized services or users, leading to potential security breaches or compliance violations.</p>
<p><strong>Example Attack Scenarios:</strong> A developer accidentally configures Secrets Manager to allow secrets access across all microservices, exposing sensitive API keys to services that don’t require them.</p>
",Expose,81,81,81,0,0,
a1fcaf54-29ae-470a-9009-9e1b252141b6,T-REPUDIATION-OF-AUTHENTICATION-ACTIONS,Background Config,Repudiation,Repudiation of Authentication Actions,"<p><strong>General Threat Description</strong></p>
<p>Repudiation refers to the denial by a user (or an entity) of having performed an action. In the context of authentication actions, repudiation occurs when users deny having initiated or performed specific actions, such as logging into a system, accessing data, or making changes. Without proper mechanisms to ensure non-repudiation, such as robust logging and secure authentication, it becomes challenging to verify or prove the authenticity of these actions, leading to potential security issues.</p>
<p><strong>Threat Agents/Attack Vectors</strong></p>
<p><strong>Threat Agents</strong>:</p>
<ul>
 <li>Malicious Users</li>
 <li>Insider Threats</li>
 <li>Cybercriminals</li>
 <li>Hacktivists</li>
</ul>
<p><strong>Attack Vectors</strong>:</p>
<ul>
 <li><strong>Weak Authentication Mechanisms</strong>: Using authentication methods that are easily compromised (e.g., weak passwords, lack of multi-factor authentication).</li>
 <li><strong>Inadequate Logging</strong>: Insufficient or improperly maintained logs that fail to capture detailed records of user actions.</li>
 <li><strong>Compromised Credentials</strong>: Stolen or shared credentials that allow unauthorized users to perform actions and deny responsibility.</li>
 <li><strong>Session Hijacking</strong>: Intercepting and taking over an active user session to perform actions without the user's knowledge.</li>
</ul>
<p><strong>Impacts</strong></p>
<ul>
 <li><strong>Accountability Issues</strong>: Difficulty in holding users accountable for their actions if they can deny performing them.</li>
 <li><strong>Data Integrity</strong>: Potential for unauthorized actions to be carried out without detection or attribution, leading to data corruption or unauthorized changes.</li>
 <li><strong>Legal and Compliance Risks</strong>: Challenges in complying with regulatory requirements that mandate the ability to trace and attribute user actions.</li>
 <li><strong>Operational Disruption</strong>: Inability to accurately audit and respond to security incidents due to unreliable logs and user action trails.</li>
</ul>
<p><strong>Example Attack Scenarios</strong></p>
<p><strong>Denial of Unauthorized Access</strong>:</p>
<ul>
 <li>An employee gains unauthorized access to sensitive data using stolen credentials. When confronted, they deny any wrongdoing. Due to inadequate logging and the use of weak passwords without multi-factor authentication, the company cannot conclusively prove that the employee accessed the data.</li>
</ul>
<p><strong>Disputing Fraudulent Transactions</strong>:</p>
<ul>
 <li>An attacker compromises a user's account and performs fraudulent financial transactions. When the legitimate user notices the transactions and disputes them, the lack of detailed transaction logs and robust authentication mechanisms makes it difficult for the financial institution to determine whether the transactions were genuine or fraudulent.</li>
</ul>
<p><strong>Insider Threat Cover-up</strong>:</p>
<ul>
 <li>A disgruntled employee intentionally deletes critical data and denies responsibility. Due to insufficient logging of user actions and weak authentication methods, the IT department cannot definitively attribute the action to the employee, complicating the investigation and response process.</li>
</ul>
<p><strong>Session Hijacking and Denial</strong>:</p>
<ul>
 <li>An attacker hijacks a user's session by intercepting their session token. The attacker then performs unauthorized actions, such as accessing confidential information or making changes to the system. When the activities are discovered, the legitimate user denies having performed them. Due to the lack of session monitoring and proper authentication logs, it is difficult to determine the true source of the actions.</li>
</ul>
<p><strong>Shared Credentials and Blame Evasion</strong>:</p>
<ul>
 <li>Multiple employees share a single set of credentials for a critical system. Malicious actions are performed using the shared credentials, but no single employee can be held accountable. Each employee denies involvement, and the organization lacks the means to trace the actions back to a specific individual due to the absence of unique user identification and proper logging.</li>
</ul>
<p>In each scenario, the inability to ensure non-repudiation of authentication actions allows malicious users to deny responsibility for their actions, leading to challenges in accountability, data integrity, compliance, and operational continuity. Robust logging, secure authentication mechanisms, and unique user identification are essential to mitigating the risk of repudiation.</p>",Expose,37,37,37,0,0,
a14a08d5-6ade-47f1-b354-44dffc2895ef,T-SECRETS-MANAGER-02,Web App Config,Information Disclosure,"Secrets are stored without encryption, leading to potential exposure","<p><strong>General threat description:</strong> If secrets are stored without proper encryption, they may be exposed if unauthorized access to the Secrets Manager storage occurs. This could lead to unauthorized users gaining access to sensitive information like passwords, tokens, or API keys.</p>
<p><strong>Threat agents/Attack vectors:</strong> Insiders or external attackers who gain unauthorized access to storage systems where secrets are stored may easily retrieve plaintext secrets without encryption safeguards.</p>
<p><strong>Impacts:</strong> The exposure of secrets can result in unauthorized access to services, theft of sensitive data, and breaches of confidentiality.</p>
<p><strong>Example Attack Scenarios:</strong> An attacker gains access to a cloud storage bucket where secrets are stored unencrypted, retrieving API keys and credentials that allow access to sensitive systems.</p>
",Expose,81,81,81,0,0,
f39bd3f7-d3a2-4982-b3ba-5d3d0ab70d72,T-ALIBABA-MESSAGE-QUEUE-01,Message Queue,Spoofing,Unauthorized access to message queues,"<p><strong>General threat description:</strong>&nbsp;</p><p>Unauthorized access to message queues in Alibaba Message Queue can lead to unauthorized reading, modification, or deletion of messages. This can occur due to weak authentication mechanisms, compromised credentials, or misconfigured access controls, allowing attackers to intercept or tamper with messages in transit.&nbsp;</p><p><strong>Threat agents/Attack vectors:</strong>&nbsp;</p><p>External attackers exploiting weak authentication, insiders with excessive privileges, or automated tools targeting misconfigured message queues.&nbsp;</p><p><strong>Impacts:</strong>&nbsp;</p><p>Data breaches, unauthorized modification of messages, service disruptions, and potential legal and regulatory penalties.&nbsp;</p><p><strong>Example Attack Scenarios:</strong>&nbsp;</p><p>An attacker gains unauthorized access to a message queue using compromised credentials, allowing them to read, modify, or delete messages, leading to data loss and operational disruptions.</p>",Expose,56,56,56,0,0,
f152f88e-cf4d-48c8-9832-b79245eed830,T-BACKGROUND-TASK-T-BGTASK-02,Background Worker,Information Disclosure,Unauthorized access to sensitive data,"<strong>General threat description</strong><br> Unauthorized access to sensitive data can occur if tasks are not properly secured, potentially leading to data breaches and compliance issues. <br><strong>Threat agents/Attack vectors</strong><br> Malicious actors or insiders gaining access to unsecured tasks that handle sensitive data. <br><strong>Impacts</strong><br> Data breaches, financial losses, reputational damage, and legal consequences due to non-compliance with data protection regulations. <br><strong>Example Attack Scenarios</strong><br> An attacker exploits a vulnerability in the task scheduling system to gain unauthorized access to sensitive financial records, or an insider with illegitimate access retrieves confidential client information from background tasks.",Expose,71,71,71,0,0,