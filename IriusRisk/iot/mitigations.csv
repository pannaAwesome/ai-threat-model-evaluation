Component,Reference ID,Countermeasure,Description,Source,State,Test result,Priority,Expiry date,Cost,Owner,Issue ID,MITRE reference,Scope,Standard baseline,Standard baseline section
Browser,C-BROWSER-CNT-02,Activate built-in browser security filters,"Implement and regularly update built-in browser security filters on all 
client machines to protect against malicious scripts, exploit code, and 
other types of web-based threats. These filters help detect and block 
untrusted content and potential attacks that could compromise the browser 
or steal sensitive data. Regular reviews and updates ensure that the 
browser’s security configurations remain effective against emerging 
threats.

Implementation Steps:

Review Browser Security Settings:
Verify that the browser’s security filters are enabled by default in the 
configuration settings.

Configure Automatic Updates:
Ensure that browsers are set to automatically update so that the latest 
security filters and patches are applied.

Enforce Organizational Policies:
Deploy centralized management policies (e.g., via Group Policy or MDM 
solutions) to enforce and monitor these settings across all client 
machines.

Test Security Filter Effectiveness:
Regularly perform security audits and simulated attacks to verify that the 
security filters are properly detecting and blocking malicious content.

References:

    * OWASP Secure Headers Project
      <https://owasp.org/www-project-secure-headers/>",Created by Rules Engine,Recommended,Not tested,High,N/A,Low,Josephine Bakka,,ATT&CK Enterprise - M1031 - Network Intrusion Prevention,Application Security,NIST 800-53 v5,"SI-7 Software, Firmware, and Information Integrity"
Browser,C-BROWSER-CNT-04,Activate URL filtering mechanisms,"Implement and regularly update URL filtering mechanisms on all client 
machines to protect against phishing attacks and access to deceptive 
websites. These mechanisms help detect and block access to known malicious 
domains and prevent users from visiting harmful sites that could compromise 
credentials or lead to malware infections. Regular updates and reviews 
ensure that the URL filtering remains effective against evolving threats.

Implementation Steps:

Configure Browser Settings:
Set the browser's URL filtering features via built-in settings or through 
centralized management policies to block access to high-risk websites.

Integrate with Threat Intelligence:
Leverage reputable threat intelligence feeds to update filtering rules and 
identify new malicious URLs continuously.

Schedule Regular Audits:
Perform periodic reviews of the URL filtering configuration to ensure it is 
properly enforced and updated in line with the latest threat data.

Monitor and Alert:
Establish monitoring mechanisms to detect attempts to access blocked URLs 
and alert administrators for further investigation.

References:

    * Google Safe Browsing API <https://safebrowsing.google.com>",Created by Rules Engine,Recommended,Not tested,Very high,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1050 - Exploit Protection,Application Security,NIST 800-53 v5,SI-15 Information Output Filtering
Browser,C-BROWSER-CNT-08,Apply security hardening measures,"Implement and regularly update security hardening measures on all client 
machines to reduce the attack surface and mitigate vulnerabilities within 
the browser. These measures involve configuring the browser to disable 
unnecessary features, enforcing secure settings, and applying patches that 
strengthen the overall security posture against potential threats. Regular 
audits and updates ensure that the browser remains resilient against 
evolving attack vectors.

Implementation Steps:

Review and Configure Default Settings:
Examine the browser’s default configuration and disable non-essential 
features that could expose vulnerabilities.

Enforce Secure Configuration:
Apply recommended security settings, such as disabling insecure protocols 
and enabling strict privacy controls, through centralized management or 
configuration scripts.

Regularly Update and Patch:
Ensure that the browser and its security settings are updated regularly to 
include the latest hardening recommendations and patches.

Conduct Security Audits:
Schedule periodic security audits to verify the effectiveness of the 
hardening measures and adjust configurations based on emerging threats.

References:

    * OWASP Secure Configuration Guide
      <https://owasp.org/www-project-secure-coding-practices-quick-reference-guide/>",Created by Rules Engine,Recommended,Not tested,Very high,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1054 - Software Configuration,Operational Security,NIST 800-53 v5,SI-2 Flaw Remediation
Azure Storage,C-STORAGE-PA-8,Choose approval process for third-party support,"In support scenarios where Microsoft needs to access your data, use 
Customer Lockbox to review and either approve or reject each data access 
request made by Microsoft.",Created by Rules Engine,Recommended,Not tested,Medium,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1018 - User Account Management,Cloud Security,NIST 800-53 v5,AC-4 Information Flow Enforcement||AC-2 ACCOUNT MANAGEMENT||AC-3 ACCESS ENFORCEMENT
Azure Cognitive Service,C-COGNITIVE-SERVICES-PA-8,Choose approval process for third-party support,"In support scenarios where Microsoft needs to access your data, use 
Customer Lockbox to review and either approve or reject each data access 
request made by Microsoft.",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1018 - User Account Management,Cloud Security,NIST 800-53 v5,AC-4 Information Flow Enforcement||AC-2 ACCOUNT MANAGEMENT||AC-3 ACCESS ENFORCEMENT
Azure,C-STORAGE-PA-8,Choose approval process for third-party support,"In support scenarios where Microsoft needs to access your data, use 
Customer Lockbox to review and either approve or reject each data access 
request made by Microsoft.",Created by Rules Engine,Recommended,Not tested,Medium,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1018 - User Account Management,Cloud Security,NIST 800-53 v5,AC-4 Information Flow Enforcement||AC-2 ACCOUNT MANAGEMENT||AC-3 ACCESS ENFORCEMENT
Browser,C-BROWSER-CNT-07,Configure automatic browser updates,"Implement and regularly update automatic browser updates on all client 
machines to ensure that the browser always runs the latest secure version. 
This control minimizes exposure to vulnerabilities by automatically 
applying patches and security improvements, reducing the window of 
opportunity for attackers to exploit known weaknesses.

Implementation Steps:

Enable Automatic Updates:
Configure the browser’s settings to allow automatic updates. This can 
typically be done via built-in options or centralized management tools such 
as Group Policy or MDM solutions.

Verify Update Channels:
Ensure that the browser is configured to use the appropriate update channel 
(e.g., stable, beta) that balances security with compatibility for your 
organization’s needs.

Monitor Update Compliance:
Regularly audit update logs and use monitoring tools to confirm that all 
client machines are receiving and installing updates promptly.

Test Updates in a Controlled Environment:
Before deploying updates organization-wide, test them in a controlled 
environment to ensure compatibility and avoid disruptions.

References:

    * Mozilla Firefox Enterprise Policies
      <https://support.mozilla.org/en-US/kb/enforcing-policies-firefox-enterprise>",Created by Rules Engine,Recommended,Not tested,Very high,N/A,Low,Josephine Bakka,,ATT&CK Enterprise - M1036 - Account Use Policies,Application Security,NIST 800-53 v5,CM-6 Configuration Settings
Browser,C-BROWSER-CNT-03,Deploy anti-phishing protection,"Implement and regularly update anti-phishing protection on all client 
machines to safeguard users from deceptive websites and phishing attempts. 
This control leverages browser-integrated security features and threat 
intelligence to detect and block fraudulent sites, protecting sensitive 
credentials and personal data. Regular configuration reviews and updates 
ensure that phishing protection remains effective against emerging threats.

Implementation Steps:

Enable Browser Phishing Protection:
Activate the built-in anti-phishing features available in the browser 
settings, ensuring that users are warned about potentially deceptive 
websites.

Integrate Threat Intelligence Feeds:
Connect the browser’s security system to reputable threat intelligence 
services (e.g., Google Safe Browsing) to keep filtering rules current with 
the latest phishing data.

Enforce Organizational Policies:
Use centralized management tools (e.g., Group Policy or MDM solutions) to 
enforce anti-phishing configurations across all client machines.

Monitor and Review:
Regularly audit and monitor logs for phishing detection alerts, and adjust 
settings as necessary to maintain a robust defense against phishing 
attacks.

References:

    * Google Safe Browsing API <https://safebrowsing.google.com>",Created by Rules Engine,Recommended,Not tested,Very high,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1017 - User Training,Network Security,NIST 800-53 v5,SC-18 Mobile Code
Azure Storage,C-STORAGE-DP-1,"Discover, classify, and label sensitive data","Use tools such as Microsoft Purview, which combines the former Azure 
Purview and Microsoft 365 compliance solutions, and Azure SQL Data 
Discovery and Classification to centrally scan, classify, and label the 
sensitive data that reside in the Azure, on-premises, Microsoft 365, and 
other locations.",Created by Rules Engine,Recommended,Not tested,Very high,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1057 - Data Loss Prevention,Data Security,NIST 800-53 v5,RA-2 Security Categorization||SC-28 PROTECTION OF INFORMATION AT REST
Azure,C-STORAGE-DP-1,"Discover, classify, and label sensitive data","Use tools such as Microsoft Purview, which combines the former Azure 
Purview and Microsoft 365 compliance solutions, and Azure SQL Data 
Discovery and Classification to centrally scan, classify, and label the 
sensitive data that reside in the Azure, on-premises, Microsoft 365, and 
other locations.",Created by Rules Engine,Recommended,Not tested,Very high,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1057 - Data Loss Prevention,Data Security,NIST 800-53 v5,RA-2 Security Categorization||SC-28 PROTECTION OF INFORMATION AT REST
IoTEdgeMetricsCollector,C-AZURE-APPLICATION-INSIGHTS-CNT-01,Enable diagnostic logs auditing for Microsoft Azure,"Implementing effective countermeasures in Azure Application Insights is 
crucial for ensuring the security and reliability of your application 
monitoring. Although no default action may be necessary, it is important to 
consider the following steps to enhance security:

Review Current Configurations:

Examine existing Application Insights configurations within your Azure 
portal to understand the baseline settings and identify any potential 
exposures. Follow these steps to review configurations:

    * Log in to the Azure portal.
    * Navigate to your Application Insights resource.
    * Access 'Overview' and 'Settings' sections to evaluate current
      configurations.

Enable Access Control:

Utilize Role-Based Access Control (RBAC) to restrict access based on the 
principle of least privilege by following these steps:

    * Navigate to your Application Insights resource in the Azure portal.
    * Select 'Access control (IAM)'.
    * Assign roles appropriate to users, ensuring only necessary roles are
      provided.

Implement IP Restrictions:

Safeguard data from unauthorized network access by configuring IP 
restrictions:

    * Go to the 'Networking' section of your Application Insights resource.
    * Add specific IP addresses or ranges that are permitted to access
      these resources.
    * Save your configuration to enforce the IP restrictions.

Use Diagnostic Logs:

Enable and regularly review diagnostic logs to monitor access and usage 
patterns:

    * Navigate to the 'Monitoring' section in Azure portal.
    * Select 'Logs' and configure diagnostics settings as required.
    * Set up alerts for any unusual activity patterns detected in the logs.

Ensure Data Encryption:

Verify that data is encrypted both in transit and at rest, and ensure 
alignment with security standards:

    * Review current encryption settings in Application Insights.
    * Consult your organization's security policies to verify compliance.

Regular Security Audits:

Conduct regular security audits and penetration testing to identify 
potential vulnerabilities:

    * Use Azure Security Center to analyze security recommendations.
    * Plan regular security assessments and address identified
      vulnerabilities promptly.

By following the above guidelines, you can better secure your Azure 
Application Insights environment, thereby improving the overall security of 
your application monitoring setup.

References

    * Best practices for Azure RBAC
      <https://learn.microsoft.com/en-us/azure/role-based-access-control/best-practices>
    * Log Query Overview in Azure Monitor
      <https://learn.microsoft.com/en-us/azure/azure-monitor/logs/log-query-overview>
    * Introduction to Azure Security Center
      <https://learn.microsoft.com/en-us/azure/security-center/security-center-introduction>",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1047 - Audit,Cloud Security,NIST 800-53 v5,AU-12 Audit Record Generation
Azure Application Insights,C-AZURE-APPLICATION-INSIGHTS-CNT-01,Enable diagnostic logs auditing for Microsoft Azure,"Implementing effective countermeasures in Azure Application Insights is 
crucial for ensuring the security and reliability of your application 
monitoring. Although no default action may be necessary, it is important to 
consider the following steps to enhance security:

Review Current Configurations:

Examine existing Application Insights configurations within your Azure 
portal to understand the baseline settings and identify any potential 
exposures. Follow these steps to review configurations:

    * Log in to the Azure portal.
    * Navigate to your Application Insights resource.
    * Access 'Overview' and 'Settings' sections to evaluate current
      configurations.

Enable Access Control:

Utilize Role-Based Access Control (RBAC) to restrict access based on the 
principle of least privilege by following these steps:

    * Navigate to your Application Insights resource in the Azure portal.
    * Select 'Access control (IAM)'.
    * Assign roles appropriate to users, ensuring only necessary roles are
      provided.

Implement IP Restrictions:

Safeguard data from unauthorized network access by configuring IP 
restrictions:

    * Go to the 'Networking' section of your Application Insights resource.
    * Add specific IP addresses or ranges that are permitted to access
      these resources.
    * Save your configuration to enforce the IP restrictions.

Use Diagnostic Logs:

Enable and regularly review diagnostic logs to monitor access and usage 
patterns:

    * Navigate to the 'Monitoring' section in Azure portal.
    * Select 'Logs' and configure diagnostics settings as required.
    * Set up alerts for any unusual activity patterns detected in the logs.

Ensure Data Encryption:

Verify that data is encrypted both in transit and at rest, and ensure 
alignment with security standards:

    * Review current encryption settings in Application Insights.
    * Consult your organization's security policies to verify compliance.

Regular Security Audits:

Conduct regular security audits and penetration testing to identify 
potential vulnerabilities:

    * Use Azure Security Center to analyze security recommendations.
    * Plan regular security assessments and address identified
      vulnerabilities promptly.

By following the above guidelines, you can better secure your Azure 
Application Insights environment, thereby improving the overall security of 
your application monitoring setup.

References

    * Best practices for Azure RBAC
      <https://learn.microsoft.com/en-us/azure/role-based-access-control/best-practices>
    * Log Query Overview in Azure Monitor
      <https://learn.microsoft.com/en-us/azure/azure-monitor/logs/log-query-overview>
    * Introduction to Azure Security Center
      <https://learn.microsoft.com/en-us/azure/security-center/security-center-introduction>",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1047 - Audit,Cloud Security,NIST 800-53 v5,AU-12 Audit Record Generation
EdgeRuntime,C-AZURE-IOT-EDGE-CNT-02,Enable encryption at rest,"To ensure that all data stored on Azure IoT Edge devices is encrypted at 
rest and protected from unauthorized access, follow the step-by-step 
guidance below using Azure's built-in encryption capabilities:

   1. Before deploying Azure IoT Edge on your devices, ensure they support
      encryption at rest. This typically involves a hardware security
      module (HSM) or a Trusted Platform Module (TPM) for secure key
      storage:

          o Check the device’s compatibility with encryption standards and
            assess whether a software-based encryption approach is
            necessary if hardware encryption is unavailable.
   2. Install Azure IoT Edge on your devices:

          o Follow the instructions provided by Microsoft to set up the IoT
            Edge runtime on your equipment. Detailed setup instructions can
            be found here
            <https://learn.microsoft.com/en-us/azure/iot-edge/how-to-install-iot-edge> 
            .
   3. Implement data encryption for modules running on IoT Edge. Use the
      following guidelines:

          o Leverage Azure Storage account in the cloud or use Azure Blob
            Storage on IoT Edge. Both support server-side encryption at
            rest with either Microsoft-managed keys or customer-managed
            keys using Azure Key Vault.
          o For data stored locally, consider utilizing BitLocker (on
            Windows-based IoT Edge devices) or the LUKS (Linux Unified Key
            Setup) encryption on Linux devices.
          o When using Azure Blob Storage on IoT Edge, ensure that
            encryption features are enabled through the Azure portal or
            Azure CLI.
   4. Enable double encryption if needed for highly sensitive data:

          o Optionally employ client-side encryption before sending data to
            Azure Blob Storage, ensuring another layer of protection by
            encrypting data with Azure's Storage Client Library before
            upload.
   5. Regularly review and update security policies and ensure that all
      software components of your IoT Edge deployments are kept up to date
      with security patches:

          o Monitor for updates or vulnerabilities reported by Microsoft
            and relevant industry standards regarding encryption
            technologies.
          o Implement automated update systems where possible to minimize
            the risk of outdated software exposing encryption keys or data.

References

    * Azure IoT Edge Security
      <https://learn.microsoft.com/en-us/azure/iot-edge/security>
    * Azure Storage Service Encryption
      <https://learn.microsoft.com/en-us/azure/storage/common/storage-service-encryption>
    * Azure Encryption of Data at Rest
      <https://learn.microsoft.com/en-us/azure/security/fundamentals/encryption-atrest>
    * Azure Key Vault Overview
      <https://learn.microsoft.com/en-us/azure/key-vault/general/overview>",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1041 - Encrypt Sensitive Information,IoT Security,NIST 800-53 v5,SC-28 PROTECTION OF INFORMATION AT REST
M2,C-AZURE-IOT-EDGE-CNT-02,Enable encryption at rest,"To ensure that all data stored on Azure IoT Edge devices is encrypted at 
rest and protected from unauthorized access, follow the step-by-step 
guidance below using Azure's built-in encryption capabilities:

   1. Before deploying Azure IoT Edge on your devices, ensure they support
      encryption at rest. This typically involves a hardware security
      module (HSM) or a Trusted Platform Module (TPM) for secure key
      storage:

          o Check the device’s compatibility with encryption standards and
            assess whether a software-based encryption approach is
            necessary if hardware encryption is unavailable.
   2. Install Azure IoT Edge on your devices:

          o Follow the instructions provided by Microsoft to set up the IoT
            Edge runtime on your equipment. Detailed setup instructions can
            be found here
            <https://learn.microsoft.com/en-us/azure/iot-edge/how-to-install-iot-edge> 
            .
   3. Implement data encryption for modules running on IoT Edge. Use the
      following guidelines:

          o Leverage Azure Storage account in the cloud or use Azure Blob
            Storage on IoT Edge. Both support server-side encryption at
            rest with either Microsoft-managed keys or customer-managed
            keys using Azure Key Vault.
          o For data stored locally, consider utilizing BitLocker (on
            Windows-based IoT Edge devices) or the LUKS (Linux Unified Key
            Setup) encryption on Linux devices.
          o When using Azure Blob Storage on IoT Edge, ensure that
            encryption features are enabled through the Azure portal or
            Azure CLI.
   4. Enable double encryption if needed for highly sensitive data:

          o Optionally employ client-side encryption before sending data to
            Azure Blob Storage, ensuring another layer of protection by
            encrypting data with Azure's Storage Client Library before
            upload.
   5. Regularly review and update security policies and ensure that all
      software components of your IoT Edge deployments are kept up to date
      with security patches:

          o Monitor for updates or vulnerabilities reported by Microsoft
            and relevant industry standards regarding encryption
            technologies.
          o Implement automated update systems where possible to minimize
            the risk of outdated software exposing encryption keys or data.

References

    * Azure IoT Edge Security
      <https://learn.microsoft.com/en-us/azure/iot-edge/security>
    * Azure Storage Service Encryption
      <https://learn.microsoft.com/en-us/azure/storage/common/storage-service-encryption>
    * Azure Encryption of Data at Rest
      <https://learn.microsoft.com/en-us/azure/security/fundamentals/encryption-atrest>
    * Azure Key Vault Overview
      <https://learn.microsoft.com/en-us/azure/key-vault/general/overview>",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1041 - Encrypt Sensitive Information,IoT Security,NIST 800-53 v5,SC-28 PROTECTION OF INFORMATION AT REST
M3,C-AZURE-IOT-EDGE-CNT-02,Enable encryption at rest,"To ensure that all data stored on Azure IoT Edge devices is encrypted at 
rest and protected from unauthorized access, follow the step-by-step 
guidance below using Azure's built-in encryption capabilities:

   1. Before deploying Azure IoT Edge on your devices, ensure they support
      encryption at rest. This typically involves a hardware security
      module (HSM) or a Trusted Platform Module (TPM) for secure key
      storage:

          o Check the device’s compatibility with encryption standards and
            assess whether a software-based encryption approach is
            necessary if hardware encryption is unavailable.
   2. Install Azure IoT Edge on your devices:

          o Follow the instructions provided by Microsoft to set up the IoT
            Edge runtime on your equipment. Detailed setup instructions can
            be found here
            <https://learn.microsoft.com/en-us/azure/iot-edge/how-to-install-iot-edge> 
            .
   3. Implement data encryption for modules running on IoT Edge. Use the
      following guidelines:

          o Leverage Azure Storage account in the cloud or use Azure Blob
            Storage on IoT Edge. Both support server-side encryption at
            rest with either Microsoft-managed keys or customer-managed
            keys using Azure Key Vault.
          o For data stored locally, consider utilizing BitLocker (on
            Windows-based IoT Edge devices) or the LUKS (Linux Unified Key
            Setup) encryption on Linux devices.
          o When using Azure Blob Storage on IoT Edge, ensure that
            encryption features are enabled through the Azure portal or
            Azure CLI.
   4. Enable double encryption if needed for highly sensitive data:

          o Optionally employ client-side encryption before sending data to
            Azure Blob Storage, ensuring another layer of protection by
            encrypting data with Azure's Storage Client Library before
            upload.
   5. Regularly review and update security policies and ensure that all
      software components of your IoT Edge deployments are kept up to date
      with security patches:

          o Monitor for updates or vulnerabilities reported by Microsoft
            and relevant industry standards regarding encryption
            technologies.
          o Implement automated update systems where possible to minimize
            the risk of outdated software exposing encryption keys or data.

References

    * Azure IoT Edge Security
      <https://learn.microsoft.com/en-us/azure/iot-edge/security>
    * Azure Storage Service Encryption
      <https://learn.microsoft.com/en-us/azure/storage/common/storage-service-encryption>
    * Azure Encryption of Data at Rest
      <https://learn.microsoft.com/en-us/azure/security/fundamentals/encryption-atrest>
    * Azure Key Vault Overview
      <https://learn.microsoft.com/en-us/azure/key-vault/general/overview>",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1041 - Encrypt Sensitive Information,IoT Security,NIST 800-53 v5,SC-28 PROTECTION OF INFORMATION AT REST
M1,C-AZURE-IOT-EDGE-CNT-02,Enable encryption at rest,"To ensure that all data stored on Azure IoT Edge devices is encrypted at 
rest and protected from unauthorized access, follow the step-by-step 
guidance below using Azure's built-in encryption capabilities:

   1. Before deploying Azure IoT Edge on your devices, ensure they support
      encryption at rest. This typically involves a hardware security
      module (HSM) or a Trusted Platform Module (TPM) for secure key
      storage:

          o Check the device’s compatibility with encryption standards and
            assess whether a software-based encryption approach is
            necessary if hardware encryption is unavailable.
   2. Install Azure IoT Edge on your devices:

          o Follow the instructions provided by Microsoft to set up the IoT
            Edge runtime on your equipment. Detailed setup instructions can
            be found here
            <https://learn.microsoft.com/en-us/azure/iot-edge/how-to-install-iot-edge> 
            .
   3. Implement data encryption for modules running on IoT Edge. Use the
      following guidelines:

          o Leverage Azure Storage account in the cloud or use Azure Blob
            Storage on IoT Edge. Both support server-side encryption at
            rest with either Microsoft-managed keys or customer-managed
            keys using Azure Key Vault.
          o For data stored locally, consider utilizing BitLocker (on
            Windows-based IoT Edge devices) or the LUKS (Linux Unified Key
            Setup) encryption on Linux devices.
          o When using Azure Blob Storage on IoT Edge, ensure that
            encryption features are enabled through the Azure portal or
            Azure CLI.
   4. Enable double encryption if needed for highly sensitive data:

          o Optionally employ client-side encryption before sending data to
            Azure Blob Storage, ensuring another layer of protection by
            encrypting data with Azure's Storage Client Library before
            upload.
   5. Regularly review and update security policies and ensure that all
      software components of your IoT Edge deployments are kept up to date
      with security patches:

          o Monitor for updates or vulnerabilities reported by Microsoft
            and relevant industry standards regarding encryption
            technologies.
          o Implement automated update systems where possible to minimize
            the risk of outdated software exposing encryption keys or data.

References

    * Azure IoT Edge Security
      <https://learn.microsoft.com/en-us/azure/iot-edge/security>
    * Azure Storage Service Encryption
      <https://learn.microsoft.com/en-us/azure/storage/common/storage-service-encryption>
    * Azure Encryption of Data at Rest
      <https://learn.microsoft.com/en-us/azure/security/fundamentals/encryption-atrest>
    * Azure Key Vault Overview
      <https://learn.microsoft.com/en-us/azure/key-vault/general/overview>",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1041 - Encrypt Sensitive Information,IoT Security,NIST 800-53 v5,SC-28 PROTECTION OF INFORMATION AT REST
IoT Edge Device,C-AZURE-IOT-EDGE-CNT-02,Enable encryption at rest,"To ensure that all data stored on Azure IoT Edge devices is encrypted at 
rest and protected from unauthorized access, follow the step-by-step 
guidance below using Azure's built-in encryption capabilities:

   1. Before deploying Azure IoT Edge on your devices, ensure they support
      encryption at rest. This typically involves a hardware security
      module (HSM) or a Trusted Platform Module (TPM) for secure key
      storage:

          o Check the device’s compatibility with encryption standards and
            assess whether a software-based encryption approach is
            necessary if hardware encryption is unavailable.
   2. Install Azure IoT Edge on your devices:

          o Follow the instructions provided by Microsoft to set up the IoT
            Edge runtime on your equipment. Detailed setup instructions can
            be found here
            <https://learn.microsoft.com/en-us/azure/iot-edge/how-to-install-iot-edge> 
            .
   3. Implement data encryption for modules running on IoT Edge. Use the
      following guidelines:

          o Leverage Azure Storage account in the cloud or use Azure Blob
            Storage on IoT Edge. Both support server-side encryption at
            rest with either Microsoft-managed keys or customer-managed
            keys using Azure Key Vault.
          o For data stored locally, consider utilizing BitLocker (on
            Windows-based IoT Edge devices) or the LUKS (Linux Unified Key
            Setup) encryption on Linux devices.
          o When using Azure Blob Storage on IoT Edge, ensure that
            encryption features are enabled through the Azure portal or
            Azure CLI.
   4. Enable double encryption if needed for highly sensitive data:

          o Optionally employ client-side encryption before sending data to
            Azure Blob Storage, ensuring another layer of protection by
            encrypting data with Azure's Storage Client Library before
            upload.
   5. Regularly review and update security policies and ensure that all
      software components of your IoT Edge deployments are kept up to date
      with security patches:

          o Monitor for updates or vulnerabilities reported by Microsoft
            and relevant industry standards regarding encryption
            technologies.
          o Implement automated update systems where possible to minimize
            the risk of outdated software exposing encryption keys or data.

References

    * Azure IoT Edge Security
      <https://learn.microsoft.com/en-us/azure/iot-edge/security>
    * Azure Storage Service Encryption
      <https://learn.microsoft.com/en-us/azure/storage/common/storage-service-encryption>
    * Azure Encryption of Data at Rest
      <https://learn.microsoft.com/en-us/azure/security/fundamentals/encryption-atrest>
    * Azure Key Vault Overview
      <https://learn.microsoft.com/en-us/azure/key-vault/general/overview>",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1041 - Encrypt Sensitive Information,IoT Security,NIST 800-53 v5,SC-28 PROTECTION OF INFORMATION AT REST
USB Video Camera,C-VIDEO-CAMERA-CNT-01,Enable end-to-end encryption for video streams,"Enabling end-to-end encryption for video streams is a critical security 
measure designed to protect the confidentiality and integrity of video data 
transmitted from video cameras to storage or viewing devices. This ensures 
that video footage remains secure from interception, unauthorized access, 
and tampering during transmission.

Implementing Encryption Protocols: Configure video cameras and their 
associated software to use strong encryption standards, such as AES-256, 
for all video data transmitted over the network. Utilizing protocols like 
Transport Layer Security (TLS) or Secure Real-time Transport Protocol 
(SRTP) ensures that video streams are encrypted from the source to the 
destination.

Authentication and Key Management: Ensure that encryption keys are securely 
generated, distributed, and managed. Employing certificate-based 
authentication and secure key exchange mechanisms helps maintain the 
integrity of encrypted video streams and prevents unauthorized decryption.

Device Compatibility and Performance: Select encryption methods compatible 
with existing hardware to avoid performance degradation. Optimizing 
encryption settings ensures that video quality and transmission speeds are 
maintained while providing robust security.

Reference:

    * Securing Wireless Networks
      <https://www.nist.gov/publications/securing-wireless-networks>",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,EMB3D - MID-035 - Encrypt Network Traffic,Network Security,NIST 800-53 v5,SC-8 TRANSMISSION CONFIDENTIALITY AND INTEGRITY
Azure IoT Hub,C-IOT-HUB-LT-4,Enable network logging for security investigation,"Enable and collect network security group (NSG) resource logs, NSG flow 
logs, Azure Firewall logs, and Web Application Firewall (WAF) logs, and 
logs from virtual machines via the network traffic data collection agent 
for security analysis to support incident investigations, and security 
alert generation. You can send the flow logs to an Azure Monitor Log 
Analytics workspace and then use Traffic Analytics to provide insights. 
Collect DNS query logs to assist in correlating other network data.",Created by Rules Engine,Recommended,Not tested,Medium,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1031 - Network Intrusion Prevention,Network Security,NIST 800-53 v5,"AU-3 Content of Audit Records||AU-6 Audit Record Review, Analysis, and Reporting||AU-12 Audit Record Generation||SI-4 System Monitoring||AC-20 Use of External Systems"
Azure Storage,C-STORAGE-LT-4,Enable network logging for security investigation,"Enable and collect network security group (NSG) resource logs, NSG flow 
logs, Azure Firewall logs, and Web Application Firewall (WAF) logs, and 
logs from virtual machines via the network traffic data collection agent 
for security analysis to support incident investigations, and security 
alert generation. You can send the flow logs to an Azure Monitor Log 
Analytics workspace and then use Traffic Analytics to provide insights. 
Collect DNS query logs to assist in correlating other network data.",Created by Rules Engine,Recommended,Not tested,Very high,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1031 - Network Intrusion Prevention,Network Security,NIST 800-53 v5,"AU-3 Content of Audit Records||AU-6 Audit Record Review, Analysis, and Reporting||AU-12 Audit Record Generation||SI-4 System Monitoring"
Azure Cognitive Service,C-COGNITIVE-SERVICES-LT-4,Enable network logging for security investigation,"Enable and collect network security group (NSG) resource logs, NSG flow 
logs, Azure Firewall logs, and Web Application Firewall (WAF) logs, and 
logs from virtual machines via the network traffic data collection agent 
for security analysis to support incident investigations, and security 
alert generation. You can send the flow logs to an Azure Monitor Log 
Analytics workspace and then use Traffic Analytics to provide insights. 
Collect DNS query logs to assist in correlating other network data.",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1031 - Network Intrusion Prevention,Network Security,NIST 800-53 v5,"AU-3 Content of Audit Records||AU-6 Audit Record Review, Analysis, and Reporting||AU-12 Audit Record Generation||SI-4 System Monitoring||AU-12 Audit Record Generation"
Azure,C-STORAGE-LT-4,Enable network logging for security investigation,"Enable and collect network security group (NSG) resource logs, NSG flow 
logs, Azure Firewall logs, and Web Application Firewall (WAF) logs, and 
logs from virtual machines via the network traffic data collection agent 
for security analysis to support incident investigations, and security 
alert generation. You can send the flow logs to an Azure Monitor Log 
Analytics workspace and then use Traffic Analytics to provide insights. 
Collect DNS query logs to assist in correlating other network data.",Created by Rules Engine,Recommended,Not tested,Very high,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1031 - Network Intrusion Prevention,Network Security,NIST 800-53 v5,"AU-3 Content of Audit Records||AU-6 Audit Record Review, Analysis, and Reporting||AU-12 Audit Record Generation||SI-4 System Monitoring"
Azure Storage,C-STORAGE-LT-1,Enable threat detection capabilities,"Use the threat detection capability of Microsoft Defender for Cloud for the 
respective Azure services. For threat detection not included in Microsoft 
Defender services, refer to Microsoft Cloud Security Benchmark service 
baselines for the respective services to enable the threat detection or 
security alert capabilities within the service. Ingest alerts and log data 
from Microsoft Defender for Cloud, Microsoft 365 Defender, and log data 
from other resources into your Azure Monitor or Microsoft Sentinel 
instances to build analytics rules, which hunt detect threats and create 
alerts that match specific criteria across your environment. For 
Operational Technology (OT) environments that include computers that 
control or monitor Industrial Control System (ICS) or Supervisory Control 
and Data Acquisition (SCADA) resources, use Microsoft Defender for IoT to 
inventory assets and detect threats and vulnerabilities. For services that 
do not have a native threat detection capability, consider collecting the 
data plane logs and analyze the threats through Microsoft Sentinel.",Created by Rules Engine,Recommended,Not tested,Very high,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1031 - Network Intrusion Prevention,Cloud Security,NIST 800-53 v5,"AU-3 Content of Audit Records||AU-6 Audit Record Review, Analysis, and Reporting||AU-12 Audit Record Generation||SI-4 System Monitoring"
Azure,C-STORAGE-LT-1,Enable threat detection capabilities,"Use the threat detection capability of Microsoft Defender for Cloud for the 
respective Azure services. For threat detection not included in Microsoft 
Defender services, refer to Microsoft Cloud Security Benchmark service 
baselines for the respective services to enable the threat detection or 
security alert capabilities within the service. Ingest alerts and log data 
from Microsoft Defender for Cloud, Microsoft 365 Defender, and log data 
from other resources into your Azure Monitor or Microsoft Sentinel 
instances to build analytics rules, which hunt detect threats and create 
alerts that match specific criteria across your environment. For 
Operational Technology (OT) environments that include computers that 
control or monitor Industrial Control System (ICS) or Supervisory Control 
and Data Acquisition (SCADA) resources, use Microsoft Defender for IoT to 
inventory assets and detect threats and vulnerabilities. For services that 
do not have a native threat detection capability, consider collecting the 
data plane logs and analyze the threats through Microsoft Sentinel.",Created by Rules Engine,Recommended,Not tested,Very high,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1031 - Network Intrusion Prevention,Cloud Security,NIST 800-53 v5,"AU-3 Content of Audit Records||AU-6 Audit Record Review, Analysis, and Reporting||AU-12 Audit Record Generation||SI-4 System Monitoring"
Browser,C-BROWSER-CNT-05,Enforce strict certificate validation,"Implement and regularly update strict certificate validation on all client 
machines to ensure that the browser only establishes secure connections 
with trusted websites. This control verifies that SSL/TLS certificates are 
valid and issued by recognized Certificate Authorities (CAs), preventing 
attackers from using forged certificates for man-in-the-middle attacks.

Implementation Steps:

Enable Certificate Validation:
Configure the browser to enforce strict certificate validation, ensuring 
that invalid, expired, or self-signed certificates trigger warnings or 
connection blocks.

Leverage Centralized Policies:
Use enterprise management tools (e.g., Group Policy or MDM solutions) to 
enforce certificate validation settings across all client machines.

Monitor Certificate Revocations:
Ensure that the browser is set to regularly check Certificate Revocation 
Lists (CRLs) or use Online Certificate Status Protocol (OCSP) to verify 
certificate validity.

Regularly Audit Configurations:
Periodically review and test the certificate validation process to confirm 
that it effectively blocks connections to untrusted sites.

References:

    * OWASP Transport Layer Protection Cheat Sheet
      <https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html>",Created by Rules Engine,Recommended,Not tested,Very high,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1056 - Pre-compromise,Application Security,NIST 800-53 v5,SC-17 Public Key Infrastructure Certificates
IoTEdgeMetricsCollector,C-AZURE-APPLICATION-INSIGHTS-CNT-02,Ensure Application Insights are configured,"The absence of a countermeasure in Azure Application Insights could expose 
your system to threats and vulnerabilities. It is important to implement 
relevant security controls to ensure the safety and integrity of your data 
and infrastructure. Here is a step-by-step guide on how to secure your 
Azure Application Insights:

   1. Access Control: Implement role-based access control to restrict
      permissions. To configure these settings:
         1. Go to the Azure portal and select your application insights
            resource.
         2. Click on ""Access Control (IAM)"" from the left-hand menu.
         3. Use the ""Add"" button to assign roles to users, groups, or
            managed identities.
         4. Select the appropriate role based on the principle of least
            privilege.
   2. Monitor Telemetry: Regularly review telemetry data to detect abnormal
      patterns:
         1. In the Azure portal, navigate to your Application Insights
            resource.
         2. Select ""Metrics"" to view and set up alerts on usage and
            performance data.
         3. Configure alerts to notify you of unusual activity or
            thresholds being exceeded.
   3. Data Encryption: Ensure data encryption both at rest and in transit:
         1. Verify that server-side encryption is enabled for your
            telemetry data.
         2. Use HTTPS endpoints to send data securely to Application
            Insights.
         3. If possible, configure client-side encryption for additional
            data protection.
   4. Configuration Monitoring: Regularly review the settings of your
      Application Insights environment:
         1. Access the ""Properties"" section in your Application Insights
            resource.
         2. Periodically audit the connection strings and instrumentation
            keys.
         3. Ensure that endpoint configurations are securely set.
   5. Network Security: Implement network security controls to protect
      against unauthorized access:
         1. Consider using service endpoints or private endpoints where
            applicable.
         2. Adjust network security group rules to limit inbound and
            outbound traffic.

References

    * Understanding Azure role-based access control (Azure RBAC)
      <https://docs.microsoft.com/en-us/azure/role-based-access-control/overview>
    * Azure Monitor metrics
      <https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/metrics-getting-started>
    * Azure Virtual Network security
      <https://docs.microsoft.com/en-us/azure/virtual-network/security-overview>",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1047 - Audit,Application Security,NIST 800-53 v5,AC-6 LEAST PRIVILEGE
Azure Application Insights,C-AZURE-APPLICATION-INSIGHTS-CNT-02,Ensure Application Insights are configured,"The absence of a countermeasure in Azure Application Insights could expose 
your system to threats and vulnerabilities. It is important to implement 
relevant security controls to ensure the safety and integrity of your data 
and infrastructure. Here is a step-by-step guide on how to secure your 
Azure Application Insights:

   1. Access Control: Implement role-based access control to restrict
      permissions. To configure these settings:
         1. Go to the Azure portal and select your application insights
            resource.
         2. Click on ""Access Control (IAM)"" from the left-hand menu.
         3. Use the ""Add"" button to assign roles to users, groups, or
            managed identities.
         4. Select the appropriate role based on the principle of least
            privilege.
   2. Monitor Telemetry: Regularly review telemetry data to detect abnormal
      patterns:
         1. In the Azure portal, navigate to your Application Insights
            resource.
         2. Select ""Metrics"" to view and set up alerts on usage and
            performance data.
         3. Configure alerts to notify you of unusual activity or
            thresholds being exceeded.
   3. Data Encryption: Ensure data encryption both at rest and in transit:
         1. Verify that server-side encryption is enabled for your
            telemetry data.
         2. Use HTTPS endpoints to send data securely to Application
            Insights.
         3. If possible, configure client-side encryption for additional
            data protection.
   4. Configuration Monitoring: Regularly review the settings of your
      Application Insights environment:
         1. Access the ""Properties"" section in your Application Insights
            resource.
         2. Periodically audit the connection strings and instrumentation
            keys.
         3. Ensure that endpoint configurations are securely set.
   5. Network Security: Implement network security controls to protect
      against unauthorized access:
         1. Consider using service endpoints or private endpoints where
            applicable.
         2. Adjust network security group rules to limit inbound and
            outbound traffic.

References

    * Understanding Azure role-based access control (Azure RBAC)
      <https://docs.microsoft.com/en-us/azure/role-based-access-control/overview>
    * Azure Monitor metrics
      <https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/metrics-getting-started>
    * Azure Virtual Network security
      <https://docs.microsoft.com/en-us/azure/virtual-network/security-overview>",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1047 - Audit,Application Security,NIST 800-53 v5,AC-6 LEAST PRIVILEGE
Azure Storage,C-STORAGE-BR-1,Ensure regular automated backups,"For Azure Backup supported resources (such as Azure VMs, SQL Server, HANA 
databases, Azure PostgreSQL Database, File Shares, Blobs or Disks), enable 
Azure Backup and configure the desired frequency and retention period. For 
Azure VM, you can use Azure Policy to have backup automatically enabled 
using Azure Policy. For resources or services not supported by Azure 
Backup, use the native backup capability provided by the resource or 
service. For example, Azure Key Vault provides a native backup capability. 
For resources/services that are neither supported by Azure Backup nor have 
a native backup capability, evaluate your backup and disaster needs, and 
create your own mechanism as per your business requirements. For example: - 
If you use Azure Storage for data storage, enable blob versioning for your 
storage blobs which will allow you to preserve, retrieve, and restore every 
version of every object stored in your Azure Storage. - Service 
configuration settings can usually be exported to Azure Resource Manager 
templates.",Created by Rules Engine,Recommended,Not tested,Very high,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1053 - Data Backup,Cloud Security,NIST 800-53 v5,CP-2 Contingency Plan||CP-4 Contingency Plan Testing||CP-9 System Backup
Azure,C-STORAGE-BR-1,Ensure regular automated backups,"For Azure Backup supported resources (such as Azure VMs, SQL Server, HANA 
databases, Azure PostgreSQL Database, File Shares, Blobs or Disks), enable 
Azure Backup and configure the desired frequency and retention period. For 
Azure VM, you can use Azure Policy to have backup automatically enabled 
using Azure Policy. For resources or services not supported by Azure 
Backup, use the native backup capability provided by the resource or 
service. For example, Azure Key Vault provides a native backup capability. 
For resources/services that are neither supported by Azure Backup nor have 
a native backup capability, evaluate your backup and disaster needs, and 
create your own mechanism as per your business requirements. For example: - 
If you use Azure Storage for data storage, enable blob versioning for your 
storage blobs which will allow you to preserve, retrieve, and restore every 
version of every object stored in your Azure Storage. - Service 
configuration settings can usually be exported to Azure Resource Manager 
templates.",Created by Rules Engine,Recommended,Not tested,Very high,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1053 - Data Backup,Cloud Security,NIST 800-53 v5,CP-2 Contingency Plan||CP-4 Contingency Plan Testing||CP-9 System Backup
IoTEdgeMetricsCollector,C-AZURE-APPLICATION-INSIGHTS-CNT-03,Ensure that SKU Basic/Consumption is not used on artifacts that need to be monitored,"An ideal countermeasure for securing Azure Application Insights involves 
implementing robust access controls, monitoring, and configuration 
management to protect telemetry data and ensure operational resilience. 
Here is a detailed step-by-step guide:

   1. Restrict Access to Application Insights:
          o Navigate to the Azure Portal and select your Application
            Insights resource.
          o Go to the ""Access control (IAM)"" section.
          o Assign roles that are least privilege, such as the ""Reader""
            role, to users who do not need to modify settings.
          o Enable Multi-Factor Authentication (MFA) for all users who have
            access to Azure resources, including Application Insights.
   2. Configure Data Collection and Retention:
          o In the Azure Portal, access your Application Insights instance.
          o Select ""Configure"" under the ""Monitoring"" section and fine-tune
            the data sampling rates to minimize excessive data collection.
          o Set retention policies to automatically delete older data,
            aligning with your compliance requirements.
   3. Enable Diagnostic Settings:
          o Open your Application Insights resource in the Azure Portal.
          o Go to ""Diagnostic settings"" and configure logging to capture
            detailed telemetry data.
          o Ensure logs are being sent to a secure storage location, such
            as Azure Log Analytics or Azure Blob Storage, with appropriate
            access controls.
   4. Implement Alerts and Monitoring:
          o Set up alerts in the Azure Monitor for critical metrics and
            anomalies in Application Insights.
          o Create customized dashboards to visualize key performance
            indicators and ensure timely identification of issues.
   5. Regularly Review and Audit Usage:
          o Periodically review audit logs and access logs to detect any
            unauthorized access or changes.
          o Conduct regular security assessments to ensure all
            configurations align with best practices.

References

    * Assign Azure roles using the Azure portal
      <https://docs.microsoft.com/en-us/azure/role-based-access-control/role-assignments-portal>
    * Azure Monitor pricing and retention policies
      <https://docs.microsoft.com/en-us/azure/azure-monitor/app/pricing>
    * Manage diagnostic settings in Azure
      <https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/diagnostic-settings>
    * Overview of alerts in Microsoft Azure
      <https://docs.microsoft.com/en-us/azure/azure-monitor/alerts/alerts-overview>",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1057 - Data Loss Prevention,Cloud Security,NIST 800-53 v5,SI-4 System Monitoring
Azure Application Insights,C-AZURE-APPLICATION-INSIGHTS-CNT-03,Ensure that SKU Basic/Consumption is not used on artifacts that need to be monitored,"An ideal countermeasure for securing Azure Application Insights involves 
implementing robust access controls, monitoring, and configuration 
management to protect telemetry data and ensure operational resilience. 
Here is a detailed step-by-step guide:

   1. Restrict Access to Application Insights:
          o Navigate to the Azure Portal and select your Application
            Insights resource.
          o Go to the ""Access control (IAM)"" section.
          o Assign roles that are least privilege, such as the ""Reader""
            role, to users who do not need to modify settings.
          o Enable Multi-Factor Authentication (MFA) for all users who have
            access to Azure resources, including Application Insights.
   2. Configure Data Collection and Retention:
          o In the Azure Portal, access your Application Insights instance.
          o Select ""Configure"" under the ""Monitoring"" section and fine-tune
            the data sampling rates to minimize excessive data collection.
          o Set retention policies to automatically delete older data,
            aligning with your compliance requirements.
   3. Enable Diagnostic Settings:
          o Open your Application Insights resource in the Azure Portal.
          o Go to ""Diagnostic settings"" and configure logging to capture
            detailed telemetry data.
          o Ensure logs are being sent to a secure storage location, such
            as Azure Log Analytics or Azure Blob Storage, with appropriate
            access controls.
   4. Implement Alerts and Monitoring:
          o Set up alerts in the Azure Monitor for critical metrics and
            anomalies in Application Insights.
          o Create customized dashboards to visualize key performance
            indicators and ensure timely identification of issues.
   5. Regularly Review and Audit Usage:
          o Periodically review audit logs and access logs to detect any
            unauthorized access or changes.
          o Conduct regular security assessments to ensure all
            configurations align with best practices.

References

    * Assign Azure roles using the Azure portal
      <https://docs.microsoft.com/en-us/azure/role-based-access-control/role-assignments-portal>
    * Azure Monitor pricing and retention policies
      <https://docs.microsoft.com/en-us/azure/azure-monitor/app/pricing>
    * Manage diagnostic settings in Azure
      <https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/diagnostic-settings>
    * Overview of alerts in Microsoft Azure
      <https://docs.microsoft.com/en-us/azure/azure-monitor/alerts/alerts-overview>",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1057 - Data Loss Prevention,Cloud Security,NIST 800-53 v5,SI-4 System Monitoring
Azure IoT Hub,C-IOT-HUB-PA-7,Follow just enough administration (least privilege) principle,"Use Azure role-based access control (Azure RBAC) to manage Azure resource 
access through role assignments. Through RBAC, you can assign roles to 
users, groups, service principals, and managed identities. There are 
pre-defined built-in roles for certain resources, and these roles can be 
inventoried or queried through tools such as Azure CLI, Azure PowerShell, 
and the Azure portal. The privileges you assign to resources through Azure 
RBAC should always be limited to what's required by the roles. Limited 
privileges will complement the just-in-time (JIT) approach of Azure AD 
Privileged Identity Management (PIM), and those privileges should be 
reviewed periodically. If required, you can also use PIM to define a 
time-bound assignment, which is a condition in a role assignment where a 
user can only activate the role within the specified start and end dates. 
Note: Use Azure built-in roles to allocate permissions and only create 
custom roles when required.",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1026 - Privileged Account Management,Cloud Security,NIST 800-53 v5,AC-2 ACCOUNT MANAGEMENT||AC-3 ACCESS ENFORCEMENT||AC-6 LEAST PRIVILEGE
Azure Storage,C-STORAGE-PA-7,Follow just enough administration (least privilege) principle,"Use Azure role-based access control (Azure RBAC) to manage Azure resource 
access through role assignments. Through RBAC, you can assign roles to 
users, groups, service principals, and managed identities. There are 
pre-defined built-in roles for certain resources, and these roles can be 
inventoried or queried through tools such as Azure CLI, Azure PowerShell, 
and the Azure portal. The privileges you assign to resources through Azure 
RBAC should always be limited to what's required by the roles. Limited 
privileges will complement the just-in-time (JIT) approach of Azure AD 
Privileged Identity Management (PIM), and those privileges should be 
reviewed periodically. If required, you can also use PIM to define a 
time-bound assignment, which is a condition in a role assignment where a 
user can only activate the role within the specified start and end dates. 
Note: Use Azure built-in roles to allocate permissions and only create 
custom roles when required.",Created by Rules Engine,Recommended,Not tested,Medium,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1026 - Privileged Account Management,Cloud Security,NIST 800-53 v5,AC-2 ACCOUNT MANAGEMENT||AC-3 ACCESS ENFORCEMENT||AC-6 LEAST PRIVILEGE
Azure Cognitive Service,C-COGNITIVE-SERVICES-PA-7,Follow just enough administration (least privilege) principle,"Use Azure role-based access control (Azure RBAC) to manage Azure resource 
access through role assignments. Through RBAC, you can assign roles to 
users, groups, service principals, and managed identities. There are 
pre-defined built-in roles for certain resources, and these roles can be 
inventoried or queried through tools such as Azure CLI, Azure PowerShell, 
and the Azure portal. The privileges you assign to resources through Azure 
RBAC should always be limited to what's required by the roles. Limited 
privileges will complement the just-in-time (JIT) approach of Azure AD 
Privileged Identity Management (PIM), and those privileges should be 
reviewed periodically. If required, you can also use PIM to define a 
time-bound assignment, which is a condition in a role assignment where a 
user can only activate the role within the specified start and end dates. 
Note: Use Azure built-in roles to allocate permissions and only create 
custom roles when required.",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1026 - Privileged Account Management,Cloud Security,NIST 800-53 v5,AC-2 ACCOUNT MANAGEMENT||AC-3 ACCESS ENFORCEMENT||AC-6 LEAST PRIVILEGE
Azure,C-STORAGE-PA-7,Follow just enough administration (least privilege) principle,"Use Azure role-based access control (Azure RBAC) to manage Azure resource 
access through role assignments. Through RBAC, you can assign roles to 
users, groups, service principals, and managed identities. There are 
pre-defined built-in roles for certain resources, and these roles can be 
inventoried or queried through tools such as Azure CLI, Azure PowerShell, 
and the Azure portal. The privileges you assign to resources through Azure 
RBAC should always be limited to what's required by the roles. Limited 
privileges will complement the just-in-time (JIT) approach of Azure AD 
Privileged Identity Management (PIM), and those privileges should be 
reviewed periodically. If required, you can also use PIM to define a 
time-bound assignment, which is a condition in a role assignment where a 
user can only activate the role within the specified start and end dates. 
Note: Use Azure built-in roles to allocate permissions and only create 
custom roles when required.",Created by Rules Engine,Recommended,Not tested,Medium,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1026 - Privileged Account Management,Cloud Security,NIST 800-53 v5,AC-2 ACCOUNT MANAGEMENT||AC-3 ACCESS ENFORCEMENT||AC-6 LEAST PRIVILEGE
USB Video Camera,C-VIDEO-CAMERA-CNT-04,Implement account lockout or rate limiting on failed login attempts,"Implementing account lockout or rate limiting on failed login attempts is a 
vital security measure aimed at protecting video cameras from unauthorized 
access and brute-force attacks. By limiting the number of consecutive 
unsuccessful login attempts, this control helps prevent attackers from 
systematically guessing or cracking user credentials, thereby enhancing the 
overall security of the video surveillance system.

Account Lockout Policies:
Configure video cameras to lock user accounts after a predefined number of 
consecutive failed login attempts (e.g., five attempts). Once locked, the 
account remains inaccessible for a specified duration or until an 
administrator manually unlocks it. This approach deters attackers by 
increasing the time and effort required to gain unauthorized access through 
repeated guessing.

Rate Limiting:
Implement rate limiting to restrict the number of login attempts from a 
single IP address or user account within a specific time frame (e.g., no 
more than ten attempts within ten minutes). Rate limiting slows down 
brute-force attacks by enforcing delays between successive login attempts, 
making it more difficult for automated tools to succeed in guessing valid 
credentials.

Progressive Delays and Notifications:
Introduce progressive delays after each failed login attempt, gradually 
increasing the wait time to discourage rapid, automated attacks. 
Additionally, configure the system to send alerts or notifications to 
administrators when multiple failed login attempts are detected, enabling 
timely investigation and response to potential security threats.

Reference:

    * Digital Identity Guidelines (NIST Special Publication 800-63B)
      <https://pages.nist.gov/800-63-3/sp800-63b.html>",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,EMB3D - MID-017 - Security-relevant Auditing and Logging,Application Security,NIST 800-53 v5,PE-5 Access Control for Output Devices
EdgeRuntime,C-AZURE-IOT-EDGE-CNT-01,Implement certificate-based authentication,"Implementing certificate-based authentication for Azure IoT Edge involves 
several steps to ensure secure communication between devices, modules, and 
other system actors. Follow these steps to configure and establish 
certificate-based authentication derived from PKiX standards:

   1. Set Up Your Public Key Infrastructure (PKI):
          o Design or acquire a Public Key Infrastructure (PKI) solution
            that aligns with your organization's security policies and
            compliance requirements.
          o Ensure that your PKI supports X.509 certificates, as these are
            a standard for IoT Edge security.
   2. Generate Certificates:
          o Create a root certificate authority (CA) if your organization
            doesn’t already have one. This CA will be used to sign all
            devices and module certificates.
          o Generate intermediate and leaf certificates under your root CA.
            These will represent devices, modules, and users interacting
            with the IoT Edge.
          o Each certificate should include a unique subject name to ensure
            precise identity verification of each entity.
   3. Configure IoT Edge to Use Certificates:
          o Install the root certificate authority on the IoT Edge device.
            This will help IoT Edge to verify the signatures on identity
            certificates of clients.
          o Deploy device and module certificates onto the respective
            devices and modules.
          o Configure Azure IoT Edge runtime to use these certificates by
            updating its configuration file (`config.yaml`). Specifically,
            specify the paths to the certificate files and any related
            keys.
   4. Secure Certificate Storage and Distribution:
          o Use Azure Key Vault or a similar secure store to manage and
            periodically rotate certificates and private keys.
          o Apply best practices for secure access to keys and
            certificates, ensuring that they are isolated from
            non-essential components.
   5. Enable Certificate Revocation Checks:
          o Configure IoT Edge to perform revocation checks for
            certificates against Online Certificate Status Protocol (OCSP)
            or Certificate Revocation Lists (CRL) to ensure all entities
            are trusted and valid.
   6. Regularly Audit and Monitor Certification Status:
          o Schedule regular audits of your certificate and key usage to
            ensure integrity and compliance with security policies.
          o Monitor logs and alerts related to certificate validation and
            access, making use of Azure Security Center for IoT for
            enhanced visibility.

References

    * Azure IoT Edge Security
      <https://learn.microsoft.com/en-us/azure/iot-edge/security>",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1028 - Operating System Configuration,IoT Security,NIST 800-53 v5,SC-17 Public Key Infrastructure Certificates
M2,C-AZURE-IOT-EDGE-CNT-01,Implement certificate-based authentication,"Implementing certificate-based authentication for Azure IoT Edge involves 
several steps to ensure secure communication between devices, modules, and 
other system actors. Follow these steps to configure and establish 
certificate-based authentication derived from PKiX standards:

   1. Set Up Your Public Key Infrastructure (PKI):
          o Design or acquire a Public Key Infrastructure (PKI) solution
            that aligns with your organization's security policies and
            compliance requirements.
          o Ensure that your PKI supports X.509 certificates, as these are
            a standard for IoT Edge security.
   2. Generate Certificates:
          o Create a root certificate authority (CA) if your organization
            doesn’t already have one. This CA will be used to sign all
            devices and module certificates.
          o Generate intermediate and leaf certificates under your root CA.
            These will represent devices, modules, and users interacting
            with the IoT Edge.
          o Each certificate should include a unique subject name to ensure
            precise identity verification of each entity.
   3. Configure IoT Edge to Use Certificates:
          o Install the root certificate authority on the IoT Edge device.
            This will help IoT Edge to verify the signatures on identity
            certificates of clients.
          o Deploy device and module certificates onto the respective
            devices and modules.
          o Configure Azure IoT Edge runtime to use these certificates by
            updating its configuration file (`config.yaml`). Specifically,
            specify the paths to the certificate files and any related
            keys.
   4. Secure Certificate Storage and Distribution:
          o Use Azure Key Vault or a similar secure store to manage and
            periodically rotate certificates and private keys.
          o Apply best practices for secure access to keys and
            certificates, ensuring that they are isolated from
            non-essential components.
   5. Enable Certificate Revocation Checks:
          o Configure IoT Edge to perform revocation checks for
            certificates against Online Certificate Status Protocol (OCSP)
            or Certificate Revocation Lists (CRL) to ensure all entities
            are trusted and valid.
   6. Regularly Audit and Monitor Certification Status:
          o Schedule regular audits of your certificate and key usage to
            ensure integrity and compliance with security policies.
          o Monitor logs and alerts related to certificate validation and
            access, making use of Azure Security Center for IoT for
            enhanced visibility.

References

    * Azure IoT Edge Security
      <https://learn.microsoft.com/en-us/azure/iot-edge/security>",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1028 - Operating System Configuration,IoT Security,NIST 800-53 v5,SC-17 Public Key Infrastructure Certificates
M3,C-AZURE-IOT-EDGE-CNT-01,Implement certificate-based authentication,"Implementing certificate-based authentication for Azure IoT Edge involves 
several steps to ensure secure communication between devices, modules, and 
other system actors. Follow these steps to configure and establish 
certificate-based authentication derived from PKiX standards:

   1. Set Up Your Public Key Infrastructure (PKI):
          o Design or acquire a Public Key Infrastructure (PKI) solution
            that aligns with your organization's security policies and
            compliance requirements.
          o Ensure that your PKI supports X.509 certificates, as these are
            a standard for IoT Edge security.
   2. Generate Certificates:
          o Create a root certificate authority (CA) if your organization
            doesn’t already have one. This CA will be used to sign all
            devices and module certificates.
          o Generate intermediate and leaf certificates under your root CA.
            These will represent devices, modules, and users interacting
            with the IoT Edge.
          o Each certificate should include a unique subject name to ensure
            precise identity verification of each entity.
   3. Configure IoT Edge to Use Certificates:
          o Install the root certificate authority on the IoT Edge device.
            This will help IoT Edge to verify the signatures on identity
            certificates of clients.
          o Deploy device and module certificates onto the respective
            devices and modules.
          o Configure Azure IoT Edge runtime to use these certificates by
            updating its configuration file (`config.yaml`). Specifically,
            specify the paths to the certificate files and any related
            keys.
   4. Secure Certificate Storage and Distribution:
          o Use Azure Key Vault or a similar secure store to manage and
            periodically rotate certificates and private keys.
          o Apply best practices for secure access to keys and
            certificates, ensuring that they are isolated from
            non-essential components.
   5. Enable Certificate Revocation Checks:
          o Configure IoT Edge to perform revocation checks for
            certificates against Online Certificate Status Protocol (OCSP)
            or Certificate Revocation Lists (CRL) to ensure all entities
            are trusted and valid.
   6. Regularly Audit and Monitor Certification Status:
          o Schedule regular audits of your certificate and key usage to
            ensure integrity and compliance with security policies.
          o Monitor logs and alerts related to certificate validation and
            access, making use of Azure Security Center for IoT for
            enhanced visibility.

References

    * Azure IoT Edge Security
      <https://learn.microsoft.com/en-us/azure/iot-edge/security>",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1028 - Operating System Configuration,IoT Security,NIST 800-53 v5,SC-17 Public Key Infrastructure Certificates
M1,C-AZURE-IOT-EDGE-CNT-01,Implement certificate-based authentication,"Implementing certificate-based authentication for Azure IoT Edge involves 
several steps to ensure secure communication between devices, modules, and 
other system actors. Follow these steps to configure and establish 
certificate-based authentication derived from PKiX standards:

   1. Set Up Your Public Key Infrastructure (PKI):
          o Design or acquire a Public Key Infrastructure (PKI) solution
            that aligns with your organization's security policies and
            compliance requirements.
          o Ensure that your PKI supports X.509 certificates, as these are
            a standard for IoT Edge security.
   2. Generate Certificates:
          o Create a root certificate authority (CA) if your organization
            doesn’t already have one. This CA will be used to sign all
            devices and module certificates.
          o Generate intermediate and leaf certificates under your root CA.
            These will represent devices, modules, and users interacting
            with the IoT Edge.
          o Each certificate should include a unique subject name to ensure
            precise identity verification of each entity.
   3. Configure IoT Edge to Use Certificates:
          o Install the root certificate authority on the IoT Edge device.
            This will help IoT Edge to verify the signatures on identity
            certificates of clients.
          o Deploy device and module certificates onto the respective
            devices and modules.
          o Configure Azure IoT Edge runtime to use these certificates by
            updating its configuration file (`config.yaml`). Specifically,
            specify the paths to the certificate files and any related
            keys.
   4. Secure Certificate Storage and Distribution:
          o Use Azure Key Vault or a similar secure store to manage and
            periodically rotate certificates and private keys.
          o Apply best practices for secure access to keys and
            certificates, ensuring that they are isolated from
            non-essential components.
   5. Enable Certificate Revocation Checks:
          o Configure IoT Edge to perform revocation checks for
            certificates against Online Certificate Status Protocol (OCSP)
            or Certificate Revocation Lists (CRL) to ensure all entities
            are trusted and valid.
   6. Regularly Audit and Monitor Certification Status:
          o Schedule regular audits of your certificate and key usage to
            ensure integrity and compliance with security policies.
          o Monitor logs and alerts related to certificate validation and
            access, making use of Azure Security Center for IoT for
            enhanced visibility.

References

    * Azure IoT Edge Security
      <https://learn.microsoft.com/en-us/azure/iot-edge/security>",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1028 - Operating System Configuration,IoT Security,NIST 800-53 v5,SC-17 Public Key Infrastructure Certificates
IoT Edge Device,C-AZURE-IOT-EDGE-CNT-01,Implement certificate-based authentication,"Implementing certificate-based authentication for Azure IoT Edge involves 
several steps to ensure secure communication between devices, modules, and 
other system actors. Follow these steps to configure and establish 
certificate-based authentication derived from PKiX standards:

   1. Set Up Your Public Key Infrastructure (PKI):
          o Design or acquire a Public Key Infrastructure (PKI) solution
            that aligns with your organization's security policies and
            compliance requirements.
          o Ensure that your PKI supports X.509 certificates, as these are
            a standard for IoT Edge security.
   2. Generate Certificates:
          o Create a root certificate authority (CA) if your organization
            doesn’t already have one. This CA will be used to sign all
            devices and module certificates.
          o Generate intermediate and leaf certificates under your root CA.
            These will represent devices, modules, and users interacting
            with the IoT Edge.
          o Each certificate should include a unique subject name to ensure
            precise identity verification of each entity.
   3. Configure IoT Edge to Use Certificates:
          o Install the root certificate authority on the IoT Edge device.
            This will help IoT Edge to verify the signatures on identity
            certificates of clients.
          o Deploy device and module certificates onto the respective
            devices and modules.
          o Configure Azure IoT Edge runtime to use these certificates by
            updating its configuration file (`config.yaml`). Specifically,
            specify the paths to the certificate files and any related
            keys.
   4. Secure Certificate Storage and Distribution:
          o Use Azure Key Vault or a similar secure store to manage and
            periodically rotate certificates and private keys.
          o Apply best practices for secure access to keys and
            certificates, ensuring that they are isolated from
            non-essential components.
   5. Enable Certificate Revocation Checks:
          o Configure IoT Edge to perform revocation checks for
            certificates against Online Certificate Status Protocol (OCSP)
            or Certificate Revocation Lists (CRL) to ensure all entities
            are trusted and valid.
   6. Regularly Audit and Monitor Certification Status:
          o Schedule regular audits of your certificate and key usage to
            ensure integrity and compliance with security policies.
          o Monitor logs and alerts related to certificate validation and
            access, making use of Azure Security Center for IoT for
            enhanced visibility.

References

    * Azure IoT Edge Security
      <https://learn.microsoft.com/en-us/azure/iot-edge/security>",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1028 - Operating System Configuration,IoT Security,NIST 800-53 v5,SC-17 Public Key Infrastructure Certificates
Browser,C-BROWSER-CNT-01,Implement client-side script blockers,"Implement and regularly update client-side script blockers on all client 
machines to mitigate cross-site scripting (XSS) risks. This control 
restricts the execution of untrusted scripts within the browser, ensuring 
that only verified and safe code is run. Developers and DevOps engineers 
should configure built-in browser options or deploy reputable 
script-blocking extensions to prevent malicious code execution. Regular 
audits and updates are essential to maintain the effectiveness of these 
blockers against emerging threats.

Implementation Steps:

Activate Built-in Script Blocking:
Configure the browser settings to enable any built-in script blocking 
features that prevent untrusted script execution.

Deploy Trusted Extensions:
For browsers lacking robust built-in capabilities, deploy reputable 
third-party script-blocking extensions (e.g., NoScript) using centralized 
management tools.

Enforce Configuration Policies:
Use enterprise management solutions such as Group Policy or MDM to enforce 
consistent script-blocking settings across all client machines.

Monitor and Audit:
Regularly review and test the effectiveness of script blockers through 
security audits and simulated attack scenarios, updating configurations as 
needed.

References:

    * OWASP XSS Prevention Cheat Sheet
      <https://cheatsheetseries.owasp.org/cheatsheets/XSS_Filter_Evasion_Cheat_Sheet.html>",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1038 - Execution Prevention,Application Security,NIST 800-53 v5,SI-15 Information Output Filtering
Browser,C-BROWSER-CNT-09,Implement extension whitelisting policies,"Implement and regularly update extension whitelisting policies on all 
client machines to ensure that only approved and trusted browser extensions 
are installed. This control prevents the use of unauthorized or malicious 
extensions that could compromise the browser's security or steal sensitive 
data. Developers and DevOps engineers should configure management tools to 
enforce a whitelist of extensions and continuously review it for 
compliance.

Implementation Steps:

Establish a Whitelist:
Identify and document a list of trusted browser extensions that are 
approved for use within the organization.

Configure Management Tools:
Use centralized management solutions (e.g., Group Policy, MDM, or 
browser-specific management consoles) to enforce the extension whitelist on 
all client machines.

Monitor Extension Usage:
Regularly audit installed extensions to ensure compliance with the 
whitelist and remove any unauthorized or unapproved extensions.

Review and Update Policies:
Periodically review the whitelist and update it based on emerging threats, 
changes in business requirements, and updated security guidelines.

References:

    * Google Chrome Enterprise - Manage Chrome Extensions
      <https://support.google.com/chrome/a/answer/9296680?hl=en>",Created by Rules Engine,Recommended,Not tested,Very high,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1024 - Restrict Registry Permissions,Application Security,NIST 800-53 v5,SI-14 Non-persistence
USB Video Camera,C-VIDEO-CAMERA-CNT-02,Implement strong authentication and change default credentials,"Implementing strong authentication and changing default credentials are 
essential security measures aimed at safeguarding video cameras from 
unauthorized access and potential exploitation. These practices ensure that 
only authorized users can access and control video surveillance systems, 
thereby protecting sensitive video data and maintaining the integrity of 
security operations.

Changing Default Credentials:
Immediately replace manufacturer-provided default usernames and passwords 
with unique, strong credentials. Default credentials are widely known and 
often exploited by attackers to gain unauthorized access. Using complex 
passwords that include a combination of letters, numbers, and special 
characters significantly reduces the risk of brute-force and 
credential-stuffing attacks.

Implementing Strong Authentication Mechanisms:
Utilize robust authentication methods such as multi-factor authentication 
(MFA) to add an additional layer of security beyond just passwords. MFA 
requires users to provide two or more verification factors, making it more 
difficult for attackers to gain access even if they obtain user 
credentials. Additionally, integrating video cameras with centralized 
authentication systems like LDAP or Active Directory can streamline user 
management and enhance security.

Regular Credential Updates and Management:
Establish policies for regularly updating passwords and managing 
credentials securely. This includes enforcing password complexity 
requirements, scheduling periodic password changes, and ensuring that 
credentials are stored securely using encryption. Implementing account 
lockout mechanisms after a certain number of failed login attempts can 
further protect against unauthorized access attempts.

Reference:

    * Guide to Enterprise Password Management
      <https://www.ncsc.gov.uk/collection/passwords/password-manager-buyers-guide>",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,EMB3D - MID-038 - Authenticate for Administrative Actions,Application Security,NIST 800-53 v5,IA-5 AUTHENTICATOR MANAGEMENT
USB Video Camera,C-VIDEO-CAMERA-CNT-06,Implement tamper-resistant hardware and secure physical placement,"Implementing tamper-resistant hardware and ensuring secure physical 
placement are essential security measures designed to protect video cameras 
from unauthorized physical access, tampering, and environmental threats. 
These practices enhance the overall security posture of video surveillance 
systems by safeguarding the integrity and functionality of the hardware 
components.

Tamper-Resistant Hardware:
Utilize video cameras and related hardware that are specifically designed 
to resist physical tampering. This includes features such as hardened 
casings, secure mounting mechanisms, and tamper-evident seals that alert 
administrators to any unauthorized attempts to access or modify the device. 
Tamper-resistant hardware may also incorporate built-in sensors that 
trigger alarms or notifications if the device is being tampered with, 
providing an additional layer of security against physical breaches.

Secure Physical Placement:
Strategically position video cameras in locations that minimize the risk of 
unauthorized access and tampering. This involves mounting cameras out of 
easy reach, using secure enclosures, and placing them in areas with 
controlled access. Additionally, ensuring that cameras are installed in 
well-lit and monitored environments can deter potential attackers. Proper 
placement also considers environmental factors to protect cameras from 
weather-related damage and ensure consistent performance.

Reference:

    * Guide to Securing Video Surveillance Systems
      <https://www.edps.europa.eu/data-protection/data-protection/reference-library/video-surveillance_en>",Created by Rules Engine,Recommended,Not tested,Very high,N/A,High,Josephine Bakka,,EMB3D - MID-031 - Physical Presence Validation,Physical Security,NIST 800-53 v5,CP-11 Alternate Communications Protocols
EdgeRuntime,C-AZURE-IOT-EDGE-CNT-03,Integrate runtime attestation,"Ensuring that Azure IoT Edge devices are running only authorized software 
is critical for maintaining the security and integrity of IoT environments. 
Implementing runtime attestation mechanisms can effectively verify the 
software integrity and authenticity on these devices. Follow the steps 
below to set up and utilize runtime attestation:

   1. Enable Device Identity and Access Control:

          o Assign each IoT Edge device a unique identity through the Azure
            IoT Hub. This helps maintain a secure channel for communication
            and attestation verification.
          o Utilize Azure Active Directory to manage role-based access
            controls, ensuring that only authorized users and services can
            interact with your IoT Edge devices.
   2. Use TPM for Secure Attestation:

          o Make sure your IoT Edge devices support a Trusted Platform
            Module (TPM). TPMs provide a hardware-based mechanism for
            securely storing cryptographic keys and credentials.
          o Configure the IoT Edge runtime on devices to use the TPM for
            performing and verifying attestation processes.
   3. Configure Azure Policy for Compliance:

          o Set up Azure Policy definitions that specify the allowed images
            and software versions for your IoT Edge deployments. This
            assists in maintaining fleet-wide compliance.
          o Regularly audit and update these policies to reflect new
            requirements and software updates.
   4. Set Up Automated Security Monitoring:

          o Use Azure Security Center for IoT to monitor the security
            posture of your IoT Edge devices in real-time, identifying any
            unauthorized modifications to runtime configurations.
          o Implement alerts that notify you immediately when an
            attestation fails, triggering a review or automated remediation
            process.
   5. Perform Regular Software Updates and Patching:

          o Regularly update and patch your IoT Edge software and modules
            to mitigate known vulnerabilities. Use the automatic updates
            feature when applicable.
          o Craft a continuous deployment pipeline using Azure DevOps to
            push secure software updates while ensuring they go through
            proper attestation checks before going live.
   6. Review Attestation Logs:

          o Periodically review attestation logs and reports within Azure
            to ensure that only authorized software is running on your
            devices.
          o Utilize these logs to identify patterns or anomalies that might
            indicate a security breach.

References

    * Azure IoT Edge Security
      <https://learn.microsoft.com/en-us/azure/iot-edge/security>",Created by Rules Engine,Recommended,Not tested,Medium,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1050 - Exploit Protection,IoT Security,NIST 800-53 v5,"SI-7 Software, Firmware, and Information Integrity"
M2,C-AZURE-IOT-EDGE-CNT-03,Integrate runtime attestation,"Ensuring that Azure IoT Edge devices are running only authorized software 
is critical for maintaining the security and integrity of IoT environments. 
Implementing runtime attestation mechanisms can effectively verify the 
software integrity and authenticity on these devices. Follow the steps 
below to set up and utilize runtime attestation:

   1. Enable Device Identity and Access Control:

          o Assign each IoT Edge device a unique identity through the Azure
            IoT Hub. This helps maintain a secure channel for communication
            and attestation verification.
          o Utilize Azure Active Directory to manage role-based access
            controls, ensuring that only authorized users and services can
            interact with your IoT Edge devices.
   2. Use TPM for Secure Attestation:

          o Make sure your IoT Edge devices support a Trusted Platform
            Module (TPM). TPMs provide a hardware-based mechanism for
            securely storing cryptographic keys and credentials.
          o Configure the IoT Edge runtime on devices to use the TPM for
            performing and verifying attestation processes.
   3. Configure Azure Policy for Compliance:

          o Set up Azure Policy definitions that specify the allowed images
            and software versions for your IoT Edge deployments. This
            assists in maintaining fleet-wide compliance.
          o Regularly audit and update these policies to reflect new
            requirements and software updates.
   4. Set Up Automated Security Monitoring:

          o Use Azure Security Center for IoT to monitor the security
            posture of your IoT Edge devices in real-time, identifying any
            unauthorized modifications to runtime configurations.
          o Implement alerts that notify you immediately when an
            attestation fails, triggering a review or automated remediation
            process.
   5. Perform Regular Software Updates and Patching:

          o Regularly update and patch your IoT Edge software and modules
            to mitigate known vulnerabilities. Use the automatic updates
            feature when applicable.
          o Craft a continuous deployment pipeline using Azure DevOps to
            push secure software updates while ensuring they go through
            proper attestation checks before going live.
   6. Review Attestation Logs:

          o Periodically review attestation logs and reports within Azure
            to ensure that only authorized software is running on your
            devices.
          o Utilize these logs to identify patterns or anomalies that might
            indicate a security breach.

References

    * Azure IoT Edge Security
      <https://learn.microsoft.com/en-us/azure/iot-edge/security>",Created by Rules Engine,Recommended,Not tested,Medium,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1050 - Exploit Protection,IoT Security,NIST 800-53 v5,"SI-7 Software, Firmware, and Information Integrity"
M3,C-AZURE-IOT-EDGE-CNT-03,Integrate runtime attestation,"Ensuring that Azure IoT Edge devices are running only authorized software 
is critical for maintaining the security and integrity of IoT environments. 
Implementing runtime attestation mechanisms can effectively verify the 
software integrity and authenticity on these devices. Follow the steps 
below to set up and utilize runtime attestation:

   1. Enable Device Identity and Access Control:

          o Assign each IoT Edge device a unique identity through the Azure
            IoT Hub. This helps maintain a secure channel for communication
            and attestation verification.
          o Utilize Azure Active Directory to manage role-based access
            controls, ensuring that only authorized users and services can
            interact with your IoT Edge devices.
   2. Use TPM for Secure Attestation:

          o Make sure your IoT Edge devices support a Trusted Platform
            Module (TPM). TPMs provide a hardware-based mechanism for
            securely storing cryptographic keys and credentials.
          o Configure the IoT Edge runtime on devices to use the TPM for
            performing and verifying attestation processes.
   3. Configure Azure Policy for Compliance:

          o Set up Azure Policy definitions that specify the allowed images
            and software versions for your IoT Edge deployments. This
            assists in maintaining fleet-wide compliance.
          o Regularly audit and update these policies to reflect new
            requirements and software updates.
   4. Set Up Automated Security Monitoring:

          o Use Azure Security Center for IoT to monitor the security
            posture of your IoT Edge devices in real-time, identifying any
            unauthorized modifications to runtime configurations.
          o Implement alerts that notify you immediately when an
            attestation fails, triggering a review or automated remediation
            process.
   5. Perform Regular Software Updates and Patching:

          o Regularly update and patch your IoT Edge software and modules
            to mitigate known vulnerabilities. Use the automatic updates
            feature when applicable.
          o Craft a continuous deployment pipeline using Azure DevOps to
            push secure software updates while ensuring they go through
            proper attestation checks before going live.
   6. Review Attestation Logs:

          o Periodically review attestation logs and reports within Azure
            to ensure that only authorized software is running on your
            devices.
          o Utilize these logs to identify patterns or anomalies that might
            indicate a security breach.

References

    * Azure IoT Edge Security
      <https://learn.microsoft.com/en-us/azure/iot-edge/security>",Created by Rules Engine,Recommended,Not tested,Medium,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1050 - Exploit Protection,IoT Security,NIST 800-53 v5,"SI-7 Software, Firmware, and Information Integrity"
M1,C-AZURE-IOT-EDGE-CNT-03,Integrate runtime attestation,"Ensuring that Azure IoT Edge devices are running only authorized software 
is critical for maintaining the security and integrity of IoT environments. 
Implementing runtime attestation mechanisms can effectively verify the 
software integrity and authenticity on these devices. Follow the steps 
below to set up and utilize runtime attestation:

   1. Enable Device Identity and Access Control:

          o Assign each IoT Edge device a unique identity through the Azure
            IoT Hub. This helps maintain a secure channel for communication
            and attestation verification.
          o Utilize Azure Active Directory to manage role-based access
            controls, ensuring that only authorized users and services can
            interact with your IoT Edge devices.
   2. Use TPM for Secure Attestation:

          o Make sure your IoT Edge devices support a Trusted Platform
            Module (TPM). TPMs provide a hardware-based mechanism for
            securely storing cryptographic keys and credentials.
          o Configure the IoT Edge runtime on devices to use the TPM for
            performing and verifying attestation processes.
   3. Configure Azure Policy for Compliance:

          o Set up Azure Policy definitions that specify the allowed images
            and software versions for your IoT Edge deployments. This
            assists in maintaining fleet-wide compliance.
          o Regularly audit and update these policies to reflect new
            requirements and software updates.
   4. Set Up Automated Security Monitoring:

          o Use Azure Security Center for IoT to monitor the security
            posture of your IoT Edge devices in real-time, identifying any
            unauthorized modifications to runtime configurations.
          o Implement alerts that notify you immediately when an
            attestation fails, triggering a review or automated remediation
            process.
   5. Perform Regular Software Updates and Patching:

          o Regularly update and patch your IoT Edge software and modules
            to mitigate known vulnerabilities. Use the automatic updates
            feature when applicable.
          o Craft a continuous deployment pipeline using Azure DevOps to
            push secure software updates while ensuring they go through
            proper attestation checks before going live.
   6. Review Attestation Logs:

          o Periodically review attestation logs and reports within Azure
            to ensure that only authorized software is running on your
            devices.
          o Utilize these logs to identify patterns or anomalies that might
            indicate a security breach.

References

    * Azure IoT Edge Security
      <https://learn.microsoft.com/en-us/azure/iot-edge/security>",Created by Rules Engine,Recommended,Not tested,Medium,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1050 - Exploit Protection,IoT Security,NIST 800-53 v5,"SI-7 Software, Firmware, and Information Integrity"
IoT Edge Device,C-AZURE-IOT-EDGE-CNT-03,Integrate runtime attestation,"Ensuring that Azure IoT Edge devices are running only authorized software 
is critical for maintaining the security and integrity of IoT environments. 
Implementing runtime attestation mechanisms can effectively verify the 
software integrity and authenticity on these devices. Follow the steps 
below to set up and utilize runtime attestation:

   1. Enable Device Identity and Access Control:

          o Assign each IoT Edge device a unique identity through the Azure
            IoT Hub. This helps maintain a secure channel for communication
            and attestation verification.
          o Utilize Azure Active Directory to manage role-based access
            controls, ensuring that only authorized users and services can
            interact with your IoT Edge devices.
   2. Use TPM for Secure Attestation:

          o Make sure your IoT Edge devices support a Trusted Platform
            Module (TPM). TPMs provide a hardware-based mechanism for
            securely storing cryptographic keys and credentials.
          o Configure the IoT Edge runtime on devices to use the TPM for
            performing and verifying attestation processes.
   3. Configure Azure Policy for Compliance:

          o Set up Azure Policy definitions that specify the allowed images
            and software versions for your IoT Edge deployments. This
            assists in maintaining fleet-wide compliance.
          o Regularly audit and update these policies to reflect new
            requirements and software updates.
   4. Set Up Automated Security Monitoring:

          o Use Azure Security Center for IoT to monitor the security
            posture of your IoT Edge devices in real-time, identifying any
            unauthorized modifications to runtime configurations.
          o Implement alerts that notify you immediately when an
            attestation fails, triggering a review or automated remediation
            process.
   5. Perform Regular Software Updates and Patching:

          o Regularly update and patch your IoT Edge software and modules
            to mitigate known vulnerabilities. Use the automatic updates
            feature when applicable.
          o Craft a continuous deployment pipeline using Azure DevOps to
            push secure software updates while ensuring they go through
            proper attestation checks before going live.
   6. Review Attestation Logs:

          o Periodically review attestation logs and reports within Azure
            to ensure that only authorized software is running on your
            devices.
          o Utilize these logs to identify patterns or anomalies that might
            indicate a security breach.

References

    * Azure IoT Edge Security
      <https://learn.microsoft.com/en-us/azure/iot-edge/security>",Created by Rules Engine,Recommended,Not tested,Medium,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1050 - Exploit Protection,IoT Security,NIST 800-53 v5,"SI-7 Software, Firmware, and Information Integrity"
Azure IoT Hub,C-IOT-HUB-IM-3,Manage application identities securely and automatically,"Use Azure managed identities, which can authenticate to Azure services and 
resources that support Azure AD authentication. Managed identity 
credentials are fully managed, rotated, and protected by the platform, 
avoiding hard-coded credentials in source code or configuration files. For 
services that don't support managed identities, use Azure AD to create a 
service principal with restricted permissions at the resource level. It is 
recommended to configure service principals with certificate credentials 
and fall back to client secrets for authentication.",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1018 - User Account Management,Cloud Security,NIST 800-53 v5,AC-2 ACCOUNT MANAGEMENT||AC-3 ACCESS ENFORCEMENT||IA-4 Identifier Management||IA-5 AUTHENTICATOR MANAGEMENT||IA-9 Service Identification and Authentication||AC-6 LEAST PRIVILEGE
Azure Storage,C-STORAGE-IM-3,Manage application identities securely and automatically,"Use Azure managed identities, which can authenticate to Azure services and 
resources that support Azure AD authentication. Managed identity 
credentials are fully managed, rotated, and protected by the platform, 
avoiding hard-coded credentials in source code or configuration files. For 
services that don't support managed identities, use Azure AD to create a 
service principal with restricted permissions at the resource level. It is 
recommended to configure service principals with certificate credentials 
and fall back to client secrets for authentication.",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1018 - User Account Management,Cloud Security,NIST 800-53 v5,AC-2 ACCOUNT MANAGEMENT||AC-3 ACCESS ENFORCEMENT||IA-4 Identifier Management||IA-5 AUTHENTICATOR MANAGEMENT||IA-9 Service Identification and Authentication
Azure Cognitive Service,C-COGNITIVE-SERVICES-IM-3,Manage application identities securely and automatically,"Use Azure managed identities, which can authenticate to Azure services and 
resources that support Azure AD authentication. Managed identity 
credentials are fully managed, rotated, and protected by the platform, 
avoiding hard-coded credentials in source code or configuration files. For 
services that don't support managed identities, use Azure AD to create a 
service principal with restricted permissions at the resource level. It is 
recommended to configure service principals with certificate credentials 
and fall back to client secrets for authentication.",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1018 - User Account Management,Cloud Security,NIST 800-53 v5,AC-2 ACCOUNT MANAGEMENT||AC-3 ACCESS ENFORCEMENT||IA-4 Identifier Management||IA-5 AUTHENTICATOR MANAGEMENT||IA-9 Service Identification and Authentication
Azure,C-STORAGE-IM-3,Manage application identities securely and automatically,"Use Azure managed identities, which can authenticate to Azure services and 
resources that support Azure AD authentication. Managed identity 
credentials are fully managed, rotated, and protected by the platform, 
avoiding hard-coded credentials in source code or configuration files. For 
services that don't support managed identities, use Azure AD to create a 
service principal with restricted permissions at the resource level. It is 
recommended to configure service principals with certificate credentials 
and fall back to client secrets for authentication.",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1018 - User Account Management,Cloud Security,NIST 800-53 v5,AC-2 ACCOUNT MANAGEMENT||AC-3 ACCESS ENFORCEMENT||IA-4 Identifier Management||IA-5 AUTHENTICATOR MANAGEMENT||IA-9 Service Identification and Authentication
Browser,C-BROWSER-CNT-10,Manage browser extensions securely,"Implement and regularly update secure management of browser extensions on 
all client machines to prevent unauthorized or malicious extensions from 
compromising browser security. This control involves enforcing approved 
extension policies, monitoring for unauthorized installations, and ensuring 
that all extensions are updated and configured according to security best 
practices.

Implementation Steps:

Enforce Extension Policies:
Utilize centralized management tools (e.g., Group Policy, MDM, or 
browser-specific management consoles) to control which extensions can be 
installed and used.

Monitor and Audit Extensions:
Regularly review installed extensions to ensure compliance with 
organizational policies. Remove or block any unapproved or suspicious 
extensions.

Regular Updates and Reviews:
Ensure that all approved extensions are kept up-to-date and configure 
automatic updates where possible. Periodically review security guidelines 
and adjust policies as needed.

User Education:
Educate users about the risks of installing unapproved extensions and 
provide guidelines for verifying extension authenticity.

References:

    * Google Chrome Enterprise - Manage Chrome Extensions
      <https://support.google.com/chrome/a/answer/9296680?hl=en>",Created by Rules Engine,Recommended,Not tested,Very high,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1052 - User Account Control,Application Security,NIST 800-53 v5,AC-21 Information Sharing
Azure Storage,C-STORAGE-DP-2,Monitor anomalies and threats targeting sensitive data,"Use Azure Information protection (AIP) to monitor the data that has been 
classified and labeled. Use Microsoft Defender for Storage, Microsoft 
Defender for SQL, Microsoft Defender for open-source relational databases, 
and Microsoft Defender for Cosmos DB to alert on anomalous transfer of 
information that might indicate unauthorized transfers of sensitive data 
information. Note: If required for compliance of data loss prevention 
(DLP), you can use a host-based DLP solution from Azure Marketplace or a 
Microsoft 365 DLP solution to enforce detective and/or preventative 
controls to prevent data exfiltration.",Created by Rules Engine,Recommended,Not tested,Very high,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1056 - Pre-compromise,Data Security,NIST 800-53 v5,AC-4 Information Flow Enforcement||SI-4 System Monitoring
Azure Cognitive Service,C-COGNITIVE-SERVICES-DP-2,Monitor anomalies and threats targeting sensitive data,"Use Azure Information protection (AIP) to monitor the data that has been 
classified and labeled. Use Microsoft Defender for Storage, Microsoft 
Defender for SQL, Microsoft Defender for open-source relational databases, 
and Microsoft Defender for Cosmos DB to alert on anomalous transfer of 
information that might indicate unauthorized transfers of sensitive data 
information. Note: If required for compliance of data loss prevention 
(DLP), you can use a host-based DLP solution from Azure Marketplace or a 
Microsoft 365 DLP solution to enforce detective and/or preventative 
controls to prevent data exfiltration.",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1056 - Pre-compromise,Data Security,NIST 800-53 v5,AC-4 Information Flow Enforcement||SI-4 System Monitoring||SC-8 TRANSMISSION CONFIDENTIALITY AND INTEGRITY
Azure,C-STORAGE-DP-2,Monitor anomalies and threats targeting sensitive data,"Use Azure Information protection (AIP) to monitor the data that has been 
classified and labeled. Use Microsoft Defender for Storage, Microsoft 
Defender for SQL, Microsoft Defender for open-source relational databases, 
and Microsoft Defender for Cosmos DB to alert on anomalous transfer of 
information that might indicate unauthorized transfers of sensitive data 
information. Note: If required for compliance of data loss prevention 
(DLP), you can use a host-based DLP solution from Azure Marketplace or a 
Microsoft 365 DLP solution to enforce detective and/or preventative 
controls to prevent data exfiltration.",Created by Rules Engine,Recommended,Not tested,Very high,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1056 - Pre-compromise,Data Security,NIST 800-53 v5,AC-4 Information Flow Enforcement||SI-4 System Monitoring
USB Video Camera,C-VIDEO-CAMERA-CNT-03,Regularly apply firmware updates and security patches,"Regularly applying firmware updates and security patches is a crucial 
security measure aimed at maintaining the integrity and protection of video 
camera systems. This control ensures that known vulnerabilities are 
addressed promptly, reducing the risk of exploitation and enhancing the 
overall security posture of the surveillance infrastructure.

Firmware Updates:
Consistently update the video camera’s firmware by downloading and 
installing the latest versions provided by the manufacturer. Firmware 
updates often include critical fixes for security vulnerabilities, 
performance enhancements, and new features. Keeping firmware current helps 
protect cameras from known exploits and ensures they operate with the most 
recent security improvements.

Security Patches:
Implement a systematic patch management process to apply security patches 
as they become available. This involves monitoring vendor announcements for 
new patches, testing them in a controlled environment, and deploying them 
to all video cameras in a timely manner. Applying security patches promptly 
mitigates the risk of attackers exploiting newly discovered vulnerabilities 
and maintains the reliability and security of the video surveillance 
system.

Reference:

    * Understanding Patches and Software Updates
      <https://www.cisa.gov/news-events/news/understanding-patches-and-software-updates>",Created by Rules Engine,Recommended,Not tested,Medium,N/A,Medium,Josephine Bakka,,EMB3D - MID-026 - Secure Firmware Update,Operational Security,NIST 800-53 v5,AC-2 ACCOUNT MANAGEMENT
Azure IoT Hub,C-IOT-HUB-IM-7,Restrict resource access based on conditions,"Use Azure AD conditional access for more granular access controls based on 
user-defined conditions, such as requiring user logins from certain IP 
ranges (or devices) to use MFA. Azure AD Conditional Access allows you to 
enforce access controls on your organization’s apps based on certain 
conditions. Define the applicable conditions and criteria for Azure AD 
conditional access in the workload. Consider the following common use 
cases: - Requiring multi-factor authentication for users with 
administrative roles - Requiring multi-factor authentication for Azure 
management tasks - Blocking sign-ins for users attempting to use legacy 
authentication protocols - Requiring trusted locations for Azure AD 
Multi-Factor Authentication registration - Blocking or granting access from 
specific locations - Blocking risky sign-in behaviors - Requiring 
organization-managed devices for specific applications Note: Granular 
authentication session management controls can also be implemented through 
Azure AD conditional access policies such as sign-in frequency and 
persistent browser session.",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1018 - User Account Management,Cloud Security,NIST 800-53 v5,AC-6 LEAST PRIVILEGE
Azure Storage,C-STORAGE-IM-7,Restrict resource access based on conditions,"Use Azure AD conditional access for more granular access controls based on 
user-defined conditions, such as requiring user logins from certain IP 
ranges (or devices) to use MFA. Azure AD Conditional Access allows you to 
enforce access controls on your organization’s apps based on certain 
conditions. Define the applicable conditions and criteria for Azure AD 
conditional access in the workload. Consider the following common use 
cases: - Requiring multi-factor authentication for users with 
administrative roles - Requiring multi-factor authentication for Azure 
management tasks - Blocking sign-ins for users attempting to use legacy 
authentication protocols - Requiring trusted locations for Azure AD 
Multi-Factor Authentication registration - Blocking or granting access from 
specific locations - Blocking risky sign-in behaviors - Requiring 
organization-managed devices for specific applications Note: Granular 
authentication session management controls can also be implemented through 
Azure AD conditional access policies such as sign-in frequency and 
persistent browser session.",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1018 - User Account Management,Cloud Security,NIST 800-53 v5,AC-2 ACCOUNT MANAGEMENT||AC-3 ACCESS ENFORCEMENT||AC-6 LEAST PRIVILEGE
Azure Cognitive Service,C-COGNITIVE-SERVICES-IM-7,Restrict resource access based on conditions,"Use Azure AD conditional access for more granular access controls based on 
user-defined conditions, such as requiring user logins from certain IP 
ranges (or devices) to use MFA. Azure AD Conditional Access allows you to 
enforce access controls on your organization’s apps based on certain 
conditions. Define the applicable conditions and criteria for Azure AD 
conditional access in the workload. Consider the following common use 
cases: - Requiring multi-factor authentication for users with 
administrative roles - Requiring multi-factor authentication for Azure 
management tasks - Blocking sign-ins for users attempting to use legacy 
authentication protocols - Requiring trusted locations for Azure AD 
Multi-Factor Authentication registration - Blocking or granting access from 
specific locations - Blocking risky sign-in behaviors - Requiring 
organization-managed devices for specific applications Note: Granular 
authentication session management controls can also be implemented through 
Azure AD conditional access policies such as sign-in frequency and 
persistent browser session.",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1018 - User Account Management,Cloud Security,NIST 800-53 v5,AC-2 ACCOUNT MANAGEMENT||AC-3 ACCESS ENFORCEMENT||AC-6 LEAST PRIVILEGE
Azure,C-STORAGE-IM-7,Restrict resource access based on conditions,"Use Azure AD conditional access for more granular access controls based on 
user-defined conditions, such as requiring user logins from certain IP 
ranges (or devices) to use MFA. Azure AD Conditional Access allows you to 
enforce access controls on your organization’s apps based on certain 
conditions. Define the applicable conditions and criteria for Azure AD 
conditional access in the workload. Consider the following common use 
cases: - Requiring multi-factor authentication for users with 
administrative roles - Requiring multi-factor authentication for Azure 
management tasks - Blocking sign-ins for users attempting to use legacy 
authentication protocols - Requiring trusted locations for Azure AD 
Multi-Factor Authentication registration - Blocking or granting access from 
specific locations - Blocking risky sign-in behaviors - Requiring 
organization-managed devices for specific applications Note: Granular 
authentication session management controls can also be implemented through 
Azure AD conditional access policies such as sign-in frequency and 
persistent browser session.",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1018 - User Account Management,Cloud Security,NIST 800-53 v5,AC-2 ACCOUNT MANAGEMENT||AC-3 ACCESS ENFORCEMENT||AC-6 LEAST PRIVILEGE
Azure Storage,C-STORAGE-IM-8,Restrict the exposure of credential and secrets,"When using a managed identity is not an option, ensure that secrets and 
credentials are stored in secure locations such as Azure Key Vault, instead 
of embedding them into the code and configuration files. If you use Azure 
DevOps and GitHub for your code management platform: - Implement Azure 
DevOps Credential Scanner to identify credentials within the code. - For 
GitHub, use the native secret scanning feature to identify credentials or 
other forms of secrets within the code. Clients such as Azure Functions, 
Azure Apps services, and VMs can use managed identities to access Azure Key 
Vault securely. See Data Protection controls related to the use of Azure 
Key Vault for secrets management. Note: Azure Key Vault provides automatic 
rotation for supported services. For secrets which cannot be automatically 
rotated, ensure they are manually rotated periodically and purged when no 
longer in use.",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1057 - Data Loss Prevention,Cloud Security,NIST 800-53 v5,IA-5 AUTHENTICATOR MANAGEMENT
Azure Cognitive Service,C-COGNITIVE-SERVICES-IM-8,Restrict the exposure of credential and secrets,"When using a managed identity is not an option, ensure that secrets and 
credentials are stored in secure locations such as Azure Key Vault, instead 
of embedding them into the code and configuration files. If you use Azure 
DevOps and GitHub for your code management platform: - Implement Azure 
DevOps Credential Scanner to identify credentials within the code. - For 
GitHub, use the native secret scanning feature to identify credentials or 
other forms of secrets within the code. Clients such as Azure Functions, 
Azure Apps services, and VMs can use managed identities to access Azure Key 
Vault securely. See Data Protection controls related to the use of Azure 
Key Vault for secrets management. Note: Azure Key Vault provides automatic 
rotation for supported services. For secrets which cannot be automatically 
rotated, ensure they are manually rotated periodically and purged when no 
longer in use.",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1057 - Data Loss Prevention,Cloud Security,NIST 800-53 v5,IA-5 AUTHENTICATOR MANAGEMENT
Azure,C-STORAGE-IM-8,Restrict the exposure of credential and secrets,"When using a managed identity is not an option, ensure that secrets and 
credentials are stored in secure locations such as Azure Key Vault, instead 
of embedding them into the code and configuration files. If you use Azure 
DevOps and GitHub for your code management platform: - Implement Azure 
DevOps Credential Scanner to identify credentials within the code. - For 
GitHub, use the native secret scanning feature to identify credentials or 
other forms of secrets within the code. Clients such as Azure Functions, 
Azure Apps services, and VMs can use managed identities to access Azure Key 
Vault securely. See Data Protection controls related to the use of Azure 
Key Vault for secrets management. Note: Azure Key Vault provides automatic 
rotation for supported services. For secrets which cannot be automatically 
rotated, ensure they are manually rotated periodically and purged when no 
longer in use.",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1057 - Data Loss Prevention,Cloud Security,NIST 800-53 v5,IA-5 AUTHENTICATOR MANAGEMENT
Azure IoT Hub,C-IOT-HUB-NS-2,Secure cloud native services with network controls,"Deploy private endpoints for all Azure resources that support the Private 
Link feature, to establish a private access point for the resources. Using 
Private Link will keep the private connection from routing through the 
public network. Note: Certain Azure services may also allow private 
communication through the service endpoint feature, though it is 
recommended to use Azure Private Link for secure and private access to 
services hosted on Azure platform. For certain services, you can choose to 
deploy VNet integration for the service where you can restrict/isolate the 
VNET to establish a private access point for the service. You also have the 
option to configure the service native network ACL rules or simply disable 
public network access to block access from the public network. For Azure 
VMs, unless there is a strong use case, you should avoid assigning public 
IPs/subnet directly to the VM interface and instead use gateway or load 
balancer services as the front-end for access by the public network.",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1030 - Network Segmentation,Cloud Security,NIST 800-53 v5,AC-4 Information Flow Enforcement||SC-2 Separation of System and User Functionality||SC-7 Boundary Protection
Azure Storage,C-STORAGE-NS-2,Secure cloud native services with network controls,"Deploy private endpoints for all Azure resources that support the Private 
Link feature, to establish a private access point for the resources. Using 
Private Link will keep the private connection from routing through the 
public network. Note: Certain Azure services may also allow private 
communication through the service endpoint feature, though it is 
recommended to use Azure Private Link for secure and private access to 
services hosted on Azure platform. For certain services, you can choose to 
deploy VNet integration for the service where you can restrict/isolate the 
VNET to establish a private access point for the service. You also have the 
option to configure the service native network ACL rules or simply disable 
public network access to block access from the public network. For Azure 
VMs, unless there is a strong use case, you should avoid assigning public 
IPs/subnet directly to the VM interface and instead use gateway or load 
balancer services as the front-end for access by the public network.",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1030 - Network Segmentation,Cloud Security,NIST 800-53 v5,AC-4 Information Flow Enforcement||SC-2 Separation of System and User Functionality||SC-7 Boundary Protection
Azure Cognitive Service,C-COGNITIVE-SERVICES-NS-2,Secure cloud native services with network controls,"Deploy private endpoints for all Azure resources that support the Private 
Link feature, to establish a private access point for the resources. Using 
Private Link will keep the private connection from routing through the 
public network. Note: Certain Azure services may also allow private 
communication through the service endpoint feature, though it is 
recommended to use Azure Private Link for secure and private access to 
services hosted on Azure platform. For certain services, you can choose to 
deploy VNet integration for the service where you can restrict/isolate the 
VNET to establish a private access point for the service. You also have the 
option to configure the service native network ACL rules or simply disable 
public network access to block access from the public network. For Azure 
VMs, unless there is a strong use case, you should avoid assigning public 
IPs/subnet directly to the VM interface and instead use gateway or load 
balancer services as the front-end for access by the public network.",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1030 - Network Segmentation,Cloud Security,NIST 800-53 v5,AC-4 Information Flow Enforcement||SC-2 Separation of System and User Functionality||SC-7 Boundary Protection
Azure,C-STORAGE-NS-2,Secure cloud native services with network controls,"Deploy private endpoints for all Azure resources that support the Private 
Link feature, to establish a private access point for the resources. Using 
Private Link will keep the private connection from routing through the 
public network. Note: Certain Azure services may also allow private 
communication through the service endpoint feature, though it is 
recommended to use Azure Private Link for secure and private access to 
services hosted on Azure platform. For certain services, you can choose to 
deploy VNet integration for the service where you can restrict/isolate the 
VNET to establish a private access point for the service. You also have the 
option to configure the service native network ACL rules or simply disable 
public network access to block access from the public network. For Azure 
VMs, unless there is a strong use case, you should avoid assigning public 
IPs/subnet directly to the VM interface and instead use gateway or load 
balancer services as the front-end for access by the public network.",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1030 - Network Segmentation,Cloud Security,NIST 800-53 v5,AC-4 Information Flow Enforcement||SC-2 Separation of System and User Functionality||SC-7 Boundary Protection
Azure IoT Hub,C-IOT-HUB-DP-6,Use a secure key management process,"Use Azure Key Vault to create and control your encryption keys life cycle, 
including key generation, distribution, and storage. Rotate and revoke your 
keys in Azure Key Vault and your service based on the defined schedule and 
when there is a key retirement or compromise. Require a certain 
cryptographic type and minimum key size when generating keys. When there is 
a need to use customer-managed key (CMK) in the workload services or 
applications, ensure you follow the best practices: - Use a key hierarchy 
to generate a separate data encryption key (DEK) with your key encryption 
key (KEK) in your key vault. - Ensure keys are registered with Azure Key 
Vault and implemented via key IDs in each service or application. To 
maximize the key material lifetime and portability, bring your own key 
(BYOK) to the services (i.e., importing HSM-protected keys from your 
on-premises HSMs into Azure Key Vault). Follow the recommended guideline to 
perform the key generation and key transfer. Note: Refer to the below for 
the FIPS 140-2 level for Azure Key Vault types and FIPS 
compliance/validation level. - Software-protected keys in vaults (Premium & 
Standard SKUs): FIPS 140-2 Level 1 - HSM-protected keys in vaults (Premium 
SKU): FIPS 140-2 Level 2 - HSM-protected keys in Managed HSM: FIPS 140-2 
Level 3 Azure Key Vault Premium uses a shared HSM infrastructure in the 
backend. Azure Key Vault Managed HSM uses dedicated, confidential service 
endpoints with a dedicated HSM for when you need a higher level of key 
security.",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1043 - Credential Access Protection,Cloud Security,NIST 800-53 v5,IA-5 AUTHENTICATOR MANAGEMENT||SC-12 CRYPTOGRAPHIC KEY ESTABLISHMENT AND MANAGEMENT||SC-28 PROTECTION OF INFORMATION AT REST
Azure Storage,C-STORAGE-DP-6,Use a secure key management process,"Use Azure Key Vault to create and control your encryption keys life cycle, 
including key generation, distribution, and storage. Rotate and revoke your 
keys in Azure Key Vault and your service based on the defined schedule and 
when there is a key retirement or compromise. Require a certain 
cryptographic type and minimum key size when generating keys. When there is 
a need to use customer-managed key (CMK) in the workload services or 
applications, ensure you follow the best practices: - Use a key hierarchy 
to generate a separate data encryption key (DEK) with your key encryption 
key (KEK) in your key vault. - Ensure keys are registered with Azure Key 
Vault and implemented via key IDs in each service or application. To 
maximize the key material lifetime and portability, bring your own key 
(BYOK) to the services (i.e., importing HSM-protected keys from your 
on-premises HSMs into Azure Key Vault). Follow the recommended guideline to 
perform the key generation and key transfer. Note: Refer to the below for 
the FIPS 140-2 level for Azure Key Vault types and FIPS 
compliance/validation level. - Software-protected keys in vaults (Premium & 
Standard SKUs): FIPS 140-2 Level 1 - HSM-protected keys in vaults (Premium 
SKU): FIPS 140-2 Level 2 - HSM-protected keys in Managed HSM: FIPS 140-2 
Level 3 Azure Key Vault Premium uses a shared HSM infrastructure in the 
backend. Azure Key Vault Managed HSM uses dedicated, confidential service 
endpoints with a dedicated HSM for when you need a higher level of key 
security.",Created by Rules Engine,Recommended,Not tested,Very high,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1043 - Credential Access Protection,Cloud Security,NIST 800-53 v5,IA-5 AUTHENTICATOR MANAGEMENT||SC-12 CRYPTOGRAPHIC KEY ESTABLISHMENT AND MANAGEMENT||SC-28 PROTECTION OF INFORMATION AT REST
Azure Cognitive Service,C-COGNITIVE-SERVICES-DP-6,Use a secure key management process,"Use Azure Key Vault to create and control your encryption keys life cycle, 
including key generation, distribution, and storage. Rotate and revoke your 
keys in Azure Key Vault and your service based on the defined schedule and 
when there is a key retirement or compromise. Require a certain 
cryptographic type and minimum key size when generating keys. When there is 
a need to use customer-managed key (CMK) in the workload services or 
applications, ensure you follow the best practices: - Use a key hierarchy 
to generate a separate data encryption key (DEK) with your key encryption 
key (KEK) in your key vault. - Ensure keys are registered with Azure Key 
Vault and implemented via key IDs in each service or application. To 
maximize the key material lifetime and portability, bring your own key 
(BYOK) to the services (i.e., importing HSM-protected keys from your 
on-premises HSMs into Azure Key Vault). Follow the recommended guideline to 
perform the key generation and key transfer. Note: Refer to the below for 
the FIPS 140-2 level for Azure Key Vault types and FIPS 
compliance/validation level. - Software-protected keys in vaults (Premium & 
Standard SKUs): FIPS 140-2 Level 1 - HSM-protected keys in vaults (Premium 
SKU): FIPS 140-2 Level 2 - HSM-protected keys in Managed HSM: FIPS 140-2 
Level 3 Azure Key Vault Premium uses a shared HSM infrastructure in the 
backend. Azure Key Vault Managed HSM uses dedicated, confidential service 
endpoints with a dedicated HSM for when you need a higher level of key 
security.",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1043 - Credential Access Protection,Cloud Security,NIST 800-53 v5,IA-5 AUTHENTICATOR MANAGEMENT||SC-12 CRYPTOGRAPHIC KEY ESTABLISHMENT AND MANAGEMENT||SC-28 PROTECTION OF INFORMATION AT REST
Azure,C-STORAGE-DP-6,Use a secure key management process,"Use Azure Key Vault to create and control your encryption keys life cycle, 
including key generation, distribution, and storage. Rotate and revoke your 
keys in Azure Key Vault and your service based on the defined schedule and 
when there is a key retirement or compromise. Require a certain 
cryptographic type and minimum key size when generating keys. When there is 
a need to use customer-managed key (CMK) in the workload services or 
applications, ensure you follow the best practices: - Use a key hierarchy 
to generate a separate data encryption key (DEK) with your key encryption 
key (KEK) in your key vault. - Ensure keys are registered with Azure Key 
Vault and implemented via key IDs in each service or application. To 
maximize the key material lifetime and portability, bring your own key 
(BYOK) to the services (i.e., importing HSM-protected keys from your 
on-premises HSMs into Azure Key Vault). Follow the recommended guideline to 
perform the key generation and key transfer. Note: Refer to the below for 
the FIPS 140-2 level for Azure Key Vault types and FIPS 
compliance/validation level. - Software-protected keys in vaults (Premium & 
Standard SKUs): FIPS 140-2 Level 1 - HSM-protected keys in vaults (Premium 
SKU): FIPS 140-2 Level 2 - HSM-protected keys in Managed HSM: FIPS 140-2 
Level 3 Azure Key Vault Premium uses a shared HSM infrastructure in the 
backend. Azure Key Vault Managed HSM uses dedicated, confidential service 
endpoints with a dedicated HSM for when you need a higher level of key 
security.",Created by Rules Engine,Recommended,Not tested,Very high,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1043 - Credential Access Protection,Cloud Security,NIST 800-53 v5,IA-5 AUTHENTICATOR MANAGEMENT||SC-12 CRYPTOGRAPHIC KEY ESTABLISHMENT AND MANAGEMENT||SC-28 PROTECTION OF INFORMATION AT REST
Azure IoT Hub,C-IOT-HUB-IM-1,Use centralized identity and authentication system,"Azure Active Directory (Azure AD) is Azure's identity and authentication 
management service. You should standardize on Azure AD to govern your 
organization's identity and authentication in: - Microsoft cloud resources, 
such as Azure Storage, Azure Virtual Machines (Linux and Windows), Azure 
Key Vault, PaaS, and SaaS applications. - Your organization's resources, 
such as applications on Azure, third-party applications running on your 
corporate network resources, and third-party SaaS applications. - Your 
enterprise identities in Active Directory by synchronization to Azure AD to 
ensure a consistent and centrally managed identity strategy. For the Azure 
services that apply, avoid use of local authentication methods and instead 
use Azure Active Directory to centralize your service authentications. 
Note: As soon as it is technically feasible, you should migrate on-premises 
Active Directory-based applications to Azure AD. This could be an Azure AD 
Enterprise Directory, Business to Business configuration, or Business to 
consumer configuration.",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1018 - User Account Management,Cloud Security,NIST 800-53 v5,AC-2 ACCOUNT MANAGEMENT||AC-3 ACCESS ENFORCEMENT||IA-2 Identification and Authentication (organizational Users)||IA-8 Identification and Authentication (non-organizational Users)
Azure Storage,C-STORAGE-IM-1,Use centralized identity and authentication system,"Azure Active Directory (Azure AD) is Azure's identity and authentication 
management service. You should standardize on Azure AD to govern your 
organization's identity and authentication in: - Microsoft cloud resources, 
such as Azure Storage, Azure Virtual Machines (Linux and Windows), Azure 
Key Vault, PaaS, and SaaS applications. - Your organization's resources, 
such as applications on Azure, third-party applications running on your 
corporate network resources, and third-party SaaS applications. - Your 
enterprise identities in Active Directory by synchronization to Azure AD to 
ensure a consistent and centrally managed identity strategy. For the Azure 
services that apply, avoid use of local authentication methods and instead 
use Azure Active Directory to centralize your service authentications. 
Note: As soon as it is technically feasible, you should migrate on-premises 
Active Directory-based applications to Azure AD. This could be an Azure AD 
Enterprise Directory, Business to Business configuration, or Business to 
consumer configuration.",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1018 - User Account Management,Cloud Security,NIST 800-53 v5,AC-2 ACCOUNT MANAGEMENT||AC-3 ACCESS ENFORCEMENT||IA-2 Identification and Authentication (organizational Users)||IA-8 Identification and Authentication (non-organizational Users)
Azure Cognitive Service,C-COGNITIVE-SERVICES-IM-1,Use centralized identity and authentication system,"Azure Active Directory (Azure AD) is Azure's identity and authentication 
management service. You should standardize on Azure AD to govern your 
organization's identity and authentication in: - Microsoft cloud resources, 
such as Azure Storage, Azure Virtual Machines (Linux and Windows), Azure 
Key Vault, PaaS, and SaaS applications. - Your organization's resources, 
such as applications on Azure, third-party applications running on your 
corporate network resources, and third-party SaaS applications. - Your 
enterprise identities in Active Directory by synchronization to Azure AD to 
ensure a consistent and centrally managed identity strategy. For the Azure 
services that apply, avoid use of local authentication methods and instead 
use Azure Active Directory to centralize your service authentications. 
Note: As soon as it is technically feasible, you should migrate on-premises 
Active Directory-based applications to Azure AD. This could be an Azure AD 
Enterprise Directory, Business to Business configuration, or Business to 
consumer configuration.",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1018 - User Account Management,Cloud Security,NIST 800-53 v5,AC-2 ACCOUNT MANAGEMENT||AC-3 ACCESS ENFORCEMENT||IA-2 Identification and Authentication (organizational Users)||IA-8 Identification and Authentication (non-organizational Users)
Azure,C-STORAGE-IM-1,Use centralized identity and authentication system,"Azure Active Directory (Azure AD) is Azure's identity and authentication 
management service. You should standardize on Azure AD to govern your 
organization's identity and authentication in: - Microsoft cloud resources, 
such as Azure Storage, Azure Virtual Machines (Linux and Windows), Azure 
Key Vault, PaaS, and SaaS applications. - Your organization's resources, 
such as applications on Azure, third-party applications running on your 
corporate network resources, and third-party SaaS applications. - Your 
enterprise identities in Active Directory by synchronization to Azure AD to 
ensure a consistent and centrally managed identity strategy. For the Azure 
services that apply, avoid use of local authentication methods and instead 
use Azure Active Directory to centralize your service authentications. 
Note: As soon as it is technically feasible, you should migrate on-premises 
Active Directory-based applications to Azure AD. This could be an Azure AD 
Enterprise Directory, Business to Business configuration, or Business to 
consumer configuration.",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1018 - User Account Management,Cloud Security,NIST 800-53 v5,AC-2 ACCOUNT MANAGEMENT||AC-3 ACCESS ENFORCEMENT||IA-2 Identification and Authentication (organizational Users)||IA-8 Identification and Authentication (non-organizational Users)
Azure Storage,C-STORAGE-DP-5,Use customer-managed key option in data at rest encryption when required,"Azure also provides an encryption option using keys managed by yourself 
(customer-managed keys) for most services. Azure Key Vault Standard, 
Premium, and Managed HSM are natively integrated with many Azure Services 
for customer-managed key use cases. You may use Azure Key Vault to generate 
your key or bring your own keys. However, using the customer-managed key 
option requires additional operational effort to manage the key lifecycle. 
This may include encryption key generation, rotation, revoke, and access 
control, etc.",Created by Rules Engine,Recommended,Not tested,Very high,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1041 - Encrypt Sensitive Information,Cloud Security,NIST 800-53 v5,SC-12 CRYPTOGRAPHIC KEY ESTABLISHMENT AND MANAGEMENT||SC-28 PROTECTION OF INFORMATION AT REST
Azure Cognitive Service,C-COGNITIVE-SERVICES-DP-5,Use customer-managed key option in data at rest encryption when required,"Azure also provides an encryption option using keys managed by yourself 
(customer-managed keys) for most services. Azure Key Vault Standard, 
Premium, and Managed HSM are natively integrated with many Azure Services 
for customer-managed key use cases. You may use Azure Key Vault to generate 
your key or bring your own keys. However, using the customer-managed key 
option requires additional operational effort to manage the key lifecycle. 
This may include encryption key generation, rotation, revoke, and access 
control, etc.",Created by Rules Engine,Recommended,Not tested,High,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1041 - Encrypt Sensitive Information,Cloud Security,NIST 800-53 v5,SC-12 CRYPTOGRAPHIC KEY ESTABLISHMENT AND MANAGEMENT||SC-28 PROTECTION OF INFORMATION AT REST
Azure,C-STORAGE-DP-5,Use customer-managed key option in data at rest encryption when required,"Azure also provides an encryption option using keys managed by yourself 
(customer-managed keys) for most services. Azure Key Vault Standard, 
Premium, and Managed HSM are natively integrated with many Azure Services 
for customer-managed key use cases. You may use Azure Key Vault to generate 
your key or bring your own keys. However, using the customer-managed key 
option requires additional operational effort to manage the key lifecycle. 
This may include encryption key generation, rotation, revoke, and access 
control, etc.",Created by Rules Engine,Recommended,Not tested,Very high,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1041 - Encrypt Sensitive Information,Cloud Security,NIST 800-53 v5,SC-12 CRYPTOGRAPHIC KEY ESTABLISHMENT AND MANAGEMENT||SC-28 PROTECTION OF INFORMATION AT REST
Azure IoT Hub,C-IOT-HUB-AM-2,Use only approved services,"Use Azure Policy to audit and restrict which services users can provision 
in your environment. Use Azure Resource Graph to query for and discover 
resources within their subscriptions. You can also use Azure Monitor to 
create rules to trigger alerts when a non-approved service is detected.",Created by Rules Engine,Recommended,Not tested,Very high,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1036 - Account Use Policies,Cloud Security,NIST 800-53 v5,CM-8 System Component Inventory||PM-5 System Inventory
Azure Storage,C-STORAGE-AM-2,Use only approved services,"Use Azure Policy to audit and restrict which services users can provision 
in your environment. Use Azure Resource Graph to query for and discover 
resources within their subscriptions. You can also use Azure Monitor to 
create rules to trigger alerts when a non-approved service is detected.",Created by Rules Engine,Recommended,Not tested,Very high,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1036 - Account Use Policies,Cloud Security,NIST 800-53 v5,CM-8 System Component Inventory||PM-5 System Inventory
Azure Cognitive Service,C-COGNITIVE-SERVICES-AM-2,Use only approved services,"Use Azure Policy to audit and restrict which services users can provision 
in your environment. Use Azure Resource Graph to query for and discover 
resources within their subscriptions. You can also use Azure Monitor to 
create rules to trigger alerts when a non-approved service is detected.",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1036 - Account Use Policies,Cloud Security,NIST 800-53 v5,CM-8 System Component Inventory||PM-5 System Inventory
Azure,C-STORAGE-AM-2,Use only approved services,"Use Azure Policy to audit and restrict which services users can provision 
in your environment. Use Azure Resource Graph to query for and discover 
resources within their subscriptions. You can also use Azure Monitor to 
create rules to trigger alerts when a non-approved service is detected.",Created by Rules Engine,Recommended,Not tested,Very high,N/A,High,Josephine Bakka,,ATT&CK Enterprise - M1036 - Account Use Policies,Cloud Security,NIST 800-53 v5,CM-8 System Component Inventory||PM-5 System Inventory
USB Video Camera,C-VIDEO-CAMERA-CNT-05,Use secure configuration management and strong access control,"Using secure configuration management and strong access control are 
essential security measures aimed at enhancing the protection of video 
camera systems. These practices ensure that video cameras are properly 
configured to minimize vulnerabilities and that access to the cameras is 
restricted to authorized individuals only.

Secure Configuration Management:
This involves establishing and maintaining secure settings for video 
cameras and their associated software. It includes disabling unnecessary 
services, changing default settings, and applying the principle of least 
privilege to ensure that cameras operate with only the essential 
configurations required for their functionality. Regularly reviewing and 
updating configurations helps mitigate the risk of exploitable 
vulnerabilities and ensures that the cameras adhere to the organization's 
security policies.

Strong Access Control:
Implementing robust access control mechanisms ensures that only authorized 
users can access and manage video camera systems. This can be achieved 
through the use of role-based access control (RBAC), multi-factor 
authentication (MFA), and strict password policies. By defining and 
enforcing clear access permissions, organizations can prevent unauthorized 
access, reduce the risk of insider threats, and ensure that users have 
appropriate levels of access based on their roles and responsibilities.

Reference:

    * Guide to Securing Video Surveillance Systems
      <https://surveillanceguides.com/video-surveillance-solution-design-guide/>",Created by Rules Engine,Recommended,Not tested,High,N/A,Medium,Josephine Bakka,,EMB3D - MID-083 - Network Firewall/Access Control List,Operational Security,NIST 800-53 v5,AC-6 LEAST PRIVILEGE
Browser,C-BROWSER-CNT-06,Utilize encrypted communication tools,"Implement and regularly update encrypted communication tools on all client 
machines to ensure that all browser communications are securely 
transmitted. This control enforces the use of secure protocols and 
encryption solutions, such as TLS and VPNs, to protect data in transit 
against interception and man-in-the-middle attacks.

Implementation Steps:

Enable Secure Protocols:
Configure browsers to default to secure protocols (e.g., HTTPS, TLS 
1.2/1.3) and disable outdated, insecure versions.

Deploy VPN or Encrypted Tunnels:
Use reputable VPN solutions to encrypt browser traffic, especially when 
accessing untrusted networks, ensuring that data remains protected.

Monitor and Validate Encryption:
Regularly review encryption settings, validate certificate authenticity, 
and update encryption libraries to keep pace with emerging threats.

Integrate with Centralized Management:
Utilize enterprise tools to enforce encrypted communication configurations 
and monitor compliance across all client machines.

References:

    * OWASP Transport Layer Protection Cheat Sheet
      <https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html>",Created by Rules Engine,Recommended,Not tested,Very high,N/A,Medium,Josephine Bakka,,ATT&CK Enterprise - M1041 - Encrypt Sensitive Information,Network Security,NIST 800-53 v5,SC-8 TRANSMISSION CONFIDENTIALITY AND INTEGRITY